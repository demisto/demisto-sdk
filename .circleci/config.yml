### =============================================================
### This configuration file is used by CircleCI build server
### https://circleci.com/docs/config-sample
### =============================================================
version: 2.1
references:
    tag_filter: &tag_filter
      filters:
        tags:
          only: /^v\d+\.\d+\.\d+$/

    reqs_tox: &reqs_tox
      requires:
        - prepare-tox3-7

    reqs_content_checkout: &reqs_content_checkout
      requires:
        - checkout-content
        - prepare-tox3-7

    create_requirement_files: &create_requirement_files
      run:
        name: Create requirement files
        command: |
          pip install pipfile-requirements
          pipfile2req > requirements.txt
          pipfile2req -d > requirements-dev.txt

    restore_tox_37_cache: &restore_tox_37_cache
      restore_cache:
        key: tox-37-cache-{{ checksum "Pipfile" }}-{{ checksum "Pipfile.lock" }}

    save_tox_37_cache: &save_tox_37_cache
      save_cache:
        key: tox-37-cache-{{ checksum "Pipfile" }}-{{ checksum "Pipfile.lock" }}
        paths:
          - .tox/py37

jobs:
  tox3-7-unit-tests:
      # docker image circleci/python:3.8.3-buster-node also contains python 3.7
      docker:
        - image: circleci/python:3.8.3-buster-node
      steps:
        - checkout
        - *create_requirement_files
        - *restore_tox_37_cache
        - run:
            # install npm modules so readme tests run with mdx verification
            name: npm install
            command: |
              npm ci
        - run:
            name: Setup Tox
            command: |
              pip install tox
        - run:
            name: Tox build
            no_output_timeout: 15m
            command: |
              tox -e py37 -v
        - *save_tox_37_cache

  tox3-8-unit-tests:
      docker:
        - image: circleci/python:3.8.3-buster-node
      steps:
        - checkout
        - *create_requirement_files
        - restore_cache:
            key: tox-38-cache-{{ checksum "Pipfile" }}-{{ checksum "Pipfile.lock" }}
        - run:
            # install npm modules so readme tests run with mdx verification
            name: npm install
            command: |
              npm ci
        - run:
            name: Setup Tox
            command: |
              pip install tox
        - run:
            name: Tox build
            no_output_timeout: 15m
            command: |
              tox -e py38 -v -- --cov=demisto_sdk --cov-report=html
        - store_artifacts:
            path: coverage_html_report
        - run:
            name: Coveralls upload
            command: |
              if [ -n "$COVERALLS_REPO_TOKEN" ]; then
                pip install coveralls
                coveralls
              else
                echo "Skipping coveralls"
              fi

  prepare-tox3-7:
    docker:
      - image: circleci/python:3.8.3-buster-node
    steps:
      - checkout
      - *create_requirement_files
      - *restore_tox_37_cache
      - run:
          # install npm modules so readme tests run with mdx verification
          name: npm install
          command: |
            npm ci
      - run:
          name: Setup Tox
          command: |
            pip install tox
      - run:
          name: Tox build
          command: |
            tox -e py37 --notest
      - *save_tox_37_cache
      - persist_to_workspace:
          root: ~/project
          paths:
            - .tox

  precommit-checks:
      docker:
        - image: circleci/python:3.8.3-buster-node
      steps:
        - checkout
        - attach_workspace:
            at: ~/project
        - run:
            name: Pre-commit
            command: |
              . .tox/py37/bin/activate
              pre-commit --version
              pre-commit run -a
              deactivate
  checkout-content:
      docker:
        - image: circleci/python:3.8.3-buster-node
      steps:
        - checkout
        - run:
            name: Checkout the Content Repo
            command: |
              git clone --depth 1 https://github.com/demisto/content.git
              cd content
              git config diff.renameLimit 5000
              git --no-pager log -1
        - persist_to_workspace:
            root: ~/project
            paths:
              - content
  validate-files:
      docker:
        - image: circleci/python:3.8.3-buster-node
      steps:
        - checkout
        - attach_workspace:
            at: ~/project
        - run:
            name: gsutil install
            command: |
              pip install gsutil
        - run:
            name: Set Up & Create Id Set
            when: always
            command: |
              . .tox/py37/bin/activate
              cd content
              npm update
              npm ci
              export PYTHONPATH=".:${PYTHONPATH}"
              demisto-sdk -v

              CI_COMMIT_BRANCH="master" demisto-sdk create-id-set -o ./Tests/id_set.json --fail-duplicates
        - run:
            name: Merge Id Set
            when: always
            command: |
              . .tox/py37/bin/activate
              cd content

              export PYTHONPATH=".:${PYTHONPATH}"
              demisto-sdk -v
              export CIRCLE_ARTIFACTS="/home/circleci/project/artifacts"

              gsutil cp gs://marketplace-dist/content/private_id_set.json $CIRCLE_ARTIFACTS/unified_id_set.json
              CI_COMMIT_BRANCH="master" demisto-sdk merge-id-sets -i1 ./Tests/id_set.json -i2 $CIRCLE_ARTIFACTS/unified_id_set.json -o $CIRCLE_ARTIFACTS/unified_id_set.json --fail-duplicates
        - run:
            name: Test validate files and yaml
            when: always
            command: |
              . .tox/py37/bin/activate
              cd content

              export PYTHONPATH=".:${PYTHONPATH}"
              demisto-sdk -v
              export ARTIFACTS_FOLDER="/home/circleci/project/artifacts"

              CI_COMMIT_BRANCH="master" ./Tests/scripts/validate.sh
  test-lint:
      docker:
        - image: devdemisto/content-build:3.0.0.12681
      steps:
        - checkout
        - setup_remote_docker
        - attach_workspace:
            at: ~/project
        - run:
            name: Test lint on python and ps files
            when: always
            command: |
              cd ~/project
              export SDK_LINT_FILES_CHANGED=$(git diff master... --name-only -- demisto_sdk/commands/lint)

              if [[ -z "${SDK_LINT_FILES_CHANGED}" ]]; then
                  echo "files under demisto_sdk/commands/lint did not change - Skipping lint runs."
                  exit 0
              fi
              cd content
              echo "installing venv"
              NO_HOOKS=1 SETUP_PY2=yes .hooks/bootstrap >> /tmp/lint_env_installation.log
              source ./venv/bin/activate
              pip3 install -r .circleci/build-requirements.txt >> /tmp/lint_env_installation.log
              
              # installing local sdk inside venv
              pip3 install ~/project >> /tmp/lint_env_installation.log
              echo ""
              echo "lint files changed running lint"
              # python file (CommonServerPython lint is running over python 3 and 2)
              demisto-sdk lint -i ./Packs/Base/Scripts/CommonServerPython
              
              # ps file
              demisto-sdk lint -i ./Packs/Base/Scripts/CommonServerPowerShell
              
        - store_artifacts:
            path: /tmp/lint_env_installation.log
  create-content-artifacts:
      docker:
        - image: circleci/python:3.8.3-buster-node
      steps:
        - checkout
        - attach_workspace:
            at: ~/project
        - run:
            name: Test Create Content Artifacts
            when: always
            command: |
              . .tox/py37/bin/activate

              cd content
              demisto-sdk -v
              mkdir ./tmp

              CIRCLE_BRANCH="master" demisto-sdk create-content-artifacts -a ./tmp
        - store_artifacts:
            path: content/tmp
  deploy:
      docker:
        - image: circleci/python:3.8.3-buster
      steps:
        - checkout
        - run:
            name: Deploy
            when: always
            command: |
              ./demisto_sdk/utils/deploy.sh
workflows:
  version: 2.1
  build_and_release:
    jobs:
      - tox3-7-unit-tests:
          <<: *tag_filter
      - tox3-8-unit-tests:
          <<: *tag_filter
      - prepare-tox3-7:
          <<: *tag_filter
      - checkout-content:
          <<: *tag_filter
      - precommit-checks:
          <<: *tag_filter
          <<: *reqs_tox
      - validate-files:
          <<: *tag_filter
          <<: *reqs_content_checkout
      - test-lint:
          <<: *reqs_content_checkout
      - create-content-artifacts:
          <<: *tag_filter
          <<: *reqs_content_checkout
      - deploy:
          <<: *tag_filter
          requires:
            - tox3-7-unit-tests
            - tox3-8-unit-tests
            - precommit-checks
            - validate-files
            - create-content-artifacts
            - test-lint
