### =============================================================
### This configuration file is used by CircleCI build server
### https://circleci.com/docs/config-sample
### =============================================================
version: 2.1
orbs:
  python: circleci/python@<< pipeline.parameters.python-orb-version >>
  node: circleci/node@<< pipeline.parameters.node-orb-version >>
  orb-tools: circleci/orb-tools@10.0

parameters:
  python-orb-version:
    type: string
    default: "2.0.3"
  node-orb-version:
    type: string
    default: "5.0.1"
  cache-version:
    type: string
    default: v3  # Change this parameter to clear cache.
  global-docker-image:
    type: string
    default: cimg/python:3.10.2-node


references:
    tag_filter: &tag_filter
      filters:
        tags:
          only: /^v\d+\.\d+\.\d+$/

    reqs_content_checkout: &reqs_content_checkout
      requires:
        - checkout-content

    install_node_ci: &install_node_ci
      - node/install-packages:
          cache-version: << pipeline.parameters.cache-version >>
          
    install_demisto_sdk: &install_demisto_sdk
      - python/install-packages:
          pkg-manager: "pipenv"
          args: "--system"
          cache-version: << pipeline.parameters.cache-version >>
          pre-install-steps:
            - run:
                name: export demisto-sdk to path
                command: echo 'export PYTHONPATH="${PYTHONPATH}:${HOME}/project"' >> $BASH_ENV
      - <<: *install_node_ci

    install_build_dependencies: &install_build_dependencies
      - python/install-packages: 
                pkg-manager: "pip"
                pip-dependency-file: "requirements-build.txt"

jobs:
  run-unit-tests:
      parameters:
        pythonversion:
          type: string
      docker:
        - image: cimg/python:<< parameters.pythonversion >>-node
      steps:
        - checkout
        - python/install-packages:
            pkg-manager: "pipenv"
            args: "--dev --system"
            cache-version: << pipeline.parameters.cache-version >>
        - <<: *install_node_ci
        - run:
            name: pytest
            no_output_timeout: 15m
            command: |
              mkdir test-results
              python -m pytest -v --cov=demisto_sdk --cov-report=html --junitxml=test-results/junit.xml
        - store_test_results:
            path: test-results
        - store_artifacts:
            path: coverage_html_report
        - run:
            name: Coveralls upload
            command: |
              if [ -n "$COVERALLS_REPO_TOKEN" ]; then
                pip install coveralls
                coveralls
              else
                echo "Skipping coveralls"
              fi


  precommit-checks:
      docker:
        - image: << pipeline.parameters.global-docker-image >>
      steps:
        - checkout
        - attach_workspace:
            at: ~/project
        - <<: *install_build_dependencies
        - run:
            command: |
              cp .pre-commit-config.yaml pre-commit-cache-key.txt
              python --version --version >> pre-commit-cache-key.txt
        - restore_cache:
            keys:
            - v1-pc-cache-{{ checksum "pre-commit-cache-key.txt" }}
        - run:
            name: Pre-commit
            command: |
              pre-commit --version
              pre-commit run -a
        - save_cache:
            key: v1-pc-cache-{{ checksum "pre-commit-cache-key.txt" }}
            paths:
              - ~/.cache/pre-commit

  checkout-content:
      docker:
        - image: << pipeline.parameters.global-docker-image >>
      steps:
        - checkout
        - run:
            name: Checkout the Content Repo
            command: |
              git clone --depth 1 https://github.com/demisto/content.git
              cd content
              git config diff.renameLimit 5000
              git --no-pager log -1
        - persist_to_workspace:
            root: ~/project
            paths:
              - content
  validate-files:
      docker:
        - image: << pipeline.parameters.global-docker-image >>
      steps:
        - checkout
        - attach_workspace:
            at: ~/project
        - <<: *install_demisto_sdk
        - <<: *install_build_dependencies
        - <<: *install_node_ci
        - run:
            name: Set Up & Create Id Set
            when: always
            environment:
              CI_COMMIT_BRANCH: "master"
            command: |
              cd content
              python -m demisto_sdk -v

              python -m demisto_sdk create-id-set -o ./Tests/id_set.json --fail-duplicates
        - run:
            name: Merge Id Set
            when: always
            environment:
              CI_COMMIT_BRANCH: "master"
            command: |
              cd content
              python -m demisto_sdk -v
              export CIRCLE_ARTIFACTS="/home/circleci/project/artifacts"

              gsutil cp gs://marketplace-dist/content/private_id_set.json $CIRCLE_ARTIFACTS/unified_id_set.json
              python -m demisto_sdk merge-id-sets -i1 ./Tests/id_set.json -i2 $CIRCLE_ARTIFACTS/unified_id_set.json -o $CIRCLE_ARTIFACTS/unified_id_set.json --fail-duplicates
        - run:
            name: Test validate files and yaml
            when: always
            environment:
              CI_COMMIT_BRANCH: "master"
            command: |
              cd content
              python -m demisto_sdk -v
              export ARTIFACTS_FOLDER="/home/circleci/project/artifacts"

              ./Tests/scripts/validate.sh
  test-lint:
      docker:
        - image: devdemisto/content-build:3.0.0.27653
      steps:
        - checkout
        - setup_remote_docker
        - attach_workspace:
            at: ~/project
        - <<: *install_demisto_sdk
        - run:
            name: Test lint on python and ps files
            when: always
            command: |
              pip3 uninstall virtualenv -y && pip3 install virtualenv==16.7.7
              cd ~/project
              export SDK_LINT_FILES_CHANGED=$(git diff master... --name-only -- demisto_sdk/commands/lint)

              if [[ -z "${SDK_LINT_FILES_CHANGED}" ]]; then
                  echo "files under demisto_sdk/commands/lint did not change - Skipping lint runs."
                  exit 0
              fi
              cd content
              echo "installing venv"
              NO_HOOKS=1 SETUP_PY2=yes .hooks/bootstrap >> /tmp/lint_env_installation.log
              echo "finished script installation"
              source ./venv/bin/activate
              pip3 install -r .circleci/build-requirements.txt >> /tmp/lint_env_installation.log
              
              # installing local sdk inside venv
              pip3 install ~/project >> /tmp/lint_env_installation.log
              echo ""
              echo "lint files changed running lint"
              # python file (CommonServerPython lint is running over python 3 and 2)
              python3 -m demisto_sdk lint -i ./Packs/Base/Scripts/CommonServerPython
              
              # ps file
              python3 -m demisto_sdk lint -i ./Packs/Base/Scripts/CommonServerPowerShell
              
        - store_artifacts:
            path: /tmp/lint_env_installation.log
  create-content-artifacts:
      docker:
        - image: << pipeline.parameters.global-docker-image >>
      steps:
        - checkout
        - attach_workspace:
            at: ~/project
        - <<: *install_demisto_sdk
        - run:
            name: Test Create Content Artifacts
            when: always
            command: |
              cd content
              python -m demisto_sdk -v
              mkdir ./tmp

              python -m demisto_sdk create-content-artifacts -a ./tmp
        - store_artifacts:
            path: content/tmp
  deploy:
      docker:
        - image: << pipeline.parameters.global-docker-image >>
      steps:
        - checkout
        - run:
            name: Deploy
            when: always
            command: |
              ./demisto_sdk/utils/deploy.sh
workflows:
  version: 2.1
  build_and_release:
    jobs:
      - checkout-content:
          <<: *tag_filter
      - precommit-checks:
          <<: *tag_filter
      - run-unit-tests:
          matrix:
            parameters:
              pythonversion: [3.8.12, 3.9.10, 3.10.2]   
          name: pytest-<< matrix.pythonversion >>
      - validate-files:
          <<: *tag_filter
          <<: *reqs_content_checkout
      - test-lint:
          <<: *reqs_content_checkout
      - create-content-artifacts:
          <<: *tag_filter
          <<: *reqs_content_checkout
      - deploy:
          <<: *tag_filter
          requires:
            - precommit-checks
            - validate-files
            - create-content-artifacts
            - test-lint
