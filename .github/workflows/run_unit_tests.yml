name: General

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"

concurrency:
  group: tests-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}


jobs:
  tests:
    name: Unit Tests / ${{ matrix.python-version }} (${{ matrix.group }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9", "3.10" ]
        group: [ 1, 2, 3, 4, 5 ]
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Poetry
        run: |
          sudo curl -sSL https://install.python-poetry.org | python3 -
          poetry --version
          poetry check --lock
          poetry install

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install npm
        run: npm install

      - name: Run pytest
        continue-on-error: true
        run: |
          shopt -u globstar
          source "$(poetry env info --path)/bin/activate"

          TEST_FILES=$(find . -type f -name "*_test.py")
          # filter out files which are in .venv directory
          TEST_FILES=$(echo "$TEST_FILES" | sed -E 's/\S*\.venv\S*\.py//g')
          TEST_FILES=$(echo "$TEST_FILES" | sed -E 's/\S*demisto_sdk\/commands\/init\/templates\S*\.py//g')
          TEST_FILES=$(echo "$TEST_FILES" | sed -E 's/\S*demisto_sdk\/tests\/integration_tests\S*\.py//g')
          TEST_FILES=$(echo "$TEST_FILES" | sed -E 's/\S*demisto_sdk\/commands\/content_graph\/tests\S*\.py//g')

          echo $(echo '{"node_version": "'$(node --version)'","npm_list":'$(npm list --json)'}') > node_versions_info.json

          # Due to race conditions in the tests bringing up and down the node server, have the server available
          # For all the tests.
          node demisto_sdk/commands/common/markdown_server/mdx-parse-server.js &
          node_pid=$!

          echo "test-files are: $TEST_FILES"

          # poetry run pytest $TEST_FILES --store-durations
          mkdir test-results
          poetry run pytest $TEST_FILES -v --cov=demisto_sdk --cov-report=html --junitxml=test-results/junit.xml --splits 5 --group ${{ matrix.group }} || pytest_exit_code=$?
          echo "PYTEST_EXIT_CODE=$pytest_exit_code" >> $GITHUB_ENV
          
          kill $node_pid
          # mark this step as a failed step in case of a failure
          exit $pytest_exit_code
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.python_version }}${{ matrix.group }}
          path: |
            .test_durations
            test-results/junit.xml
            node_versions_info.json
            coverage_html_report
      - name: Validate if pytest has passed
        run: |
          if [ "$PYTEST_EXIT_CODE" -ne 0 ]; then
            echo "There are unit-tests that failed, pytest finished with exit code $PYTEST_EXIT_CODE"
          else
            echo "All unit-tests have passed"
          exit $PYTEST_EXIT_CODE
          fi