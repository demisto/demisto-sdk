type: map
mapping:
  fromVersion:
    type: str
  toVersion:
    type: str
  modified:
    type: str
  id:
    type: str
    required: true
  version:
    type: number
    required: true
  sortValues:
    type: any
  commitMessage:
    type: str
  shouldPublish:
    type: bool
  shouldCommit:
    type: bool
  regex:
    type: str
    required: true
  details:
    type: str
    required: true
  prevDetails:
    type: str
  reputationScriptName:
    type: str
  reputationCommand:
    type: str
  enhancementScriptNames:
    type: any
  system:
    type: bool
  locked:
    type: bool
  disabled:
    type: bool
  file:
    type: bool
  updateAfter:
    type: int
  mergeContext:
    type: bool
  formatScript:
    type: str
  contextPath:
    type: str
  contextValue:
    type: str
  excludedBrands:
    type: any
  defaultMapping:
    type: any
  manualMapping:
    type: any
  fileHashesPriority:
    type: any
  expiration:
    type: int
  layout:
    type: str
  legacyNames:
    type: seq
    sequence:
    - type: str
  marketplaces:
    type: seq
    sequence:
    - type: str
      enum: ['xsoar', 'marketplacev2', 'xpanse', 'xsoar_saas', 'xsoar_on_prem']
  regex;(fromVersion:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(toVersion:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(modified:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(version:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: number
  regex;(sortValues:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: any
  regex;(commitMessage:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(shouldPublish:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: bool
  regex;(shouldCommit:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: bool
  regex;(regex:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(details:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(prevDetails:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(reputationScriptName:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(reputationCommand:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(enhancementScriptNames:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: any
  regex;(system:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: bool
  regex;(locked:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: bool
  regex;(disabled:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: bool
  regex;(file:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: bool
  regex;(updateAfter:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: int
  regex;(mergeContext:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: bool
  regex;(formatScript:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(contextPath:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(contextValue:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(excludedBrands:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: any
  regex;(defaultMapping:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: any
  regex;(manualMapping:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: any
  regex;(fileHashesPriority:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: any
  regex;(expiration:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: int
  regex;(layout:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: str
  regex;(legacyNames:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: seq
    sequence:
    - type: str
  regex;(marketplaces:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas)):
    type: seq
    sequence:
    - type: str
      enum: ['xsoar', 'marketplacev2', 'xpanse', 'xsoar_saas', 'xsoar_on_prem']
