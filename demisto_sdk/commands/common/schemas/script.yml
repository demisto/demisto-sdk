type: map
mapping:
  commonfields:
    type: map
    required: true
    mapping:
      id:
        type: str
        required: true
      id_x2:
        type: str
      version:
        type: int
        required: true
      regex;id_x2:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
        type: str
      regex;version:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
        type: int
  name:
    type: str
    required: true
  name_x2:
    type: str
  script:
    type: str
    required: true
  type:
    type: str
    required: true
    enum: ['javascript', 'python', 'powershell']
  tags:
    type: seq
    sequence:
    - type: str
  comment:
    type: str
    required: true
  comment_x2:
    type: str
  enabled:
    type: bool
  system:
    type: bool
  deprecated:
    type: bool
  args:
    type: seq
    sequence:
    - include: argument_schema
  scripttarget:
    type: int
  timeout:
    type: text
  dependson:
    type: map
    allowempty: true
  dependson_x2:
    type: map
    allowempty: true
  outputs:
    type: seq
    sequence:
    - include: output_schema
  important:
    type: seq
    sequence:
    - include: important_schema
  fromversion:
    type: text
  toversion:
    type: text
  dockerimage:
    type: str
  dockerimage45:
    type: str
  alt_dockerimages:
    type: seq
    sequence:
    - type: str
  nativeImage:
    type: seq
    sequence:
    - type: str
  runonce:
    type: bool
  tests:
    type: seq
    sequence:
    - type: str
  sensitive:
    type: bool
  runas:
    type: str
  subtype:
    type: str
    enum: ['python2', 'python3']
  engineinfo:
    type: map
    mapping:
      engine:
        type: str
      regex;engine:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
        type: str
  contentitemexportablefields:
    type: map
    mapping:
      contentitemfields:
        type: map
        mapping:
          fromServerVersion:
            type: str
          regex;fromServerVersion:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
            type: str
  polling:
    type: bool
  autoUpdateDockerImage:
    type: bool
  marketplaces:
    type: seq
    sequence:
    - type: str
      enum: ['xsoar', 'marketplacev2', 'xpanse', 'xsoar_saas', 'xsoar_on_prem']
  skipprepare:
    type: seq
    sequence:
    - type: str
      enum: ['script-name-incident-to-alert']

# script->args
  regex;name:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: str
  regex;name_x2:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: str
  regex;script:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: str
  regex;type:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: str
    enum: ['javascript', 'python', 'powershell']
  regex;tags:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: seq
    sequence:
    - type: str
  regex;comment:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: str
  regex;comment_x2:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: str
  regex;enabled:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: bool
  regex;system:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: bool
  regex;deprecated:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: bool
  regex;args:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: seq
    sequence:
    - include: argument_schema
  regex;scripttarget:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: int
  regex;timeout:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: text
  regex;outputs:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: seq
    sequence:
    - include: output_schema
  regex;important:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: seq
    sequence:
    - include: important_schema
  regex;fromversion:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: text
  regex;toversion:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: text
  regex;dockerimage:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: str
  regex;dockerimage45:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: str
  regex;alt_dockerimages:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: seq
    sequence:
    - type: str
  regex;nativeImage:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: seq
    sequence:
    - type: str
  regex;runonce:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: bool
  regex;tests:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: seq
    sequence:
    - type: str
  regex;sensitive:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: bool
  regex;runas:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: str
  regex;subtype:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: str
    enum: ['python2', 'python3']
  regex;polling:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: bool
  regex;autoUpdateDockerImage:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: bool
  regex;marketplaces:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: seq
    sequence:
    - type: str
      enum: ['xsoar', 'marketplacev2', 'xpanse', 'xsoar_saas', 'xsoar_on_prem']
  regex;skipprepare:(xsoar)|(marketplacev2)|(xpanse)|(xsoar_on_prem)|(xsoar_saas):
    type: seq
    sequence:
    - type: str
      enum: ['script-name-incident-to-alert']

# script->args
schema;argument_schema:
  type: map
  mapping:
    name:
      type: str
      required: true
    description:
      type: str
      required: true
    description_x2:
      type: str
    defaultValue:
      type: str
    required:
      type: bool
    default:
      type: bool
    auto:
      type: str
      enum: ['PREDEFINED']
    predefined:
      type: seq
      sequence:
      - type: str
    isArray:
      type: bool
    secret:
      type: bool
    deprecated:
      type: bool
    type:
      type: str
    hidden:
      type: bool

# script->outputs
schema;output_schema:
  type: map
  mapping:
    contentPath:
      type: str
    contextPath:
      type: scalar
    description:
      type: str
      required: true
    description_x2:
      type: str
    type:
      type: str

# script->important
schema;important_schema:
  type: map
  mapping:
    contextPath:
      type: str
      required: true
    description:
      type: str
      required: true
    description_x2:
      type: str
    related:
      type: str
