{# Declare image to build from #}
FROM {{ image }}
{# Creating test main directory #}
RUN mkdir -p /devwork/
{# Define workir #}
WORKDIR /devwork
{# Build for python based image #}
{% if pack_type == 'python' %}
{# Install build base packages if required on alpine docker image #}
RUN OS_RELEASE=$(cat /etc/os-release); if echo "$OS_RELEASE" | grep -q "alpine"; then apk add build-base ca-certificates; fi;
{# Change group owner and permissions - Due to contaier security issues #}
RUN chown -R :4000 /devwork/
RUN chmod -R 775 /devwork
{# Install requirment - all if test defined otherwise only pylint #}
{% if not no_test %}
RUN printf "{{ pypi_packs | join('\\n') }}" > /devwork/test-requirements.txt
RUN python -m pip install -r /devwork/test-requirements.txt
{% else %}
RUN  python -m pip install pylint
{% endif %}
{# Container entry point (Every command will start with /bin/sh) #}
ENTRYPOINT ["/bin/sh", "-c"]
{# Build for python based image #}
{% elif pack_type == "powershell" %}
{#  Install powershell requirements for analyze and tests  #}
RUN pwsh -Command Set-PSRepository -name PSGallery -installationpolicy trusted
RUN pwsh -Command Install-Module -Name Pester -Scope AllUsers -Force
RUN pwsh -Command Install-Module -Name PSScriptAnalyzer -Scope AllUsers -Force
{# Container entry point (Every command will start with /bin/sh) #}
{% endif %}
