{# Declare image to build from #}
FROM {{ image }}
{# Creating test main directory #}
RUN mkdir -p /devwork/
{# Define workir #}
WORKDIR /devwork
{# Build for python based image #}
{% if not copy_pack %}
{% if pack_type == 'python' %}
{# Change group owner and permissions - Due to container security issues #}
RUN chown -R :4000 /devwork/
RUN chmod -R 775 /devwork
{# Install requirments and missing deps #}
RUN printf "{{ pypi_packs | join('\\n') }}" > /devwork/test-requirements.txt
RUN OS_RELEASE=$(cat /etc/os-release); if echo "$OS_RELEASE" | grep -q "alpine"; \
then apk add --no-cache --virtual .build-deps python3-dev gcc build-base; fi; \
pip install --no-cache-dir -r /devwork/test-requirements.txt; \
if echo "$OS_RELEASE" | grep -q "alpine"; then apk del .build-deps; fi;
{# Container entry point (Every command will start with /bin/sh) #}
ENTRYPOINT ["/bin/sh", "-c"]
{# Build for python based image #}
{% elif pack_type == "powershell" %}
{#  Install powershell requirements for analyze and tests  #}
RUN pwsh -Command Set-PSRepository -name PSGallery -installationpolicy trusted -ErrorAction Stop
RUN pwsh -Command Install-Module -Name Pester -Scope AllUsers -Force -ErrorAction Stop
RUN pwsh -Command Install-Module -Name PSScriptAnalyzer -Scope AllUsers -Force -ErrorAction Stop
{# Container entry point (Every command will start with /bin/sh) #}
{% endif %}
{% else %}
{# Creating test main directory #}
{% if cert  %}
RUN printf "{{ cert }}" > /usr/local/share/ca-certificates/panw-cert.crt
{% endif %}
RUN update-ca-certificates
COPY . .
RUN chown -R :4000 /devwork
RUN chmod -R 775 /devwork
{% endif %}
