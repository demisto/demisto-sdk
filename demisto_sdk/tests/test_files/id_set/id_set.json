{
    "scripts": [
        {
            "10cb3486-48f3-4d93-88af-b6be84ffd432": {
                "name": "OktaGetGroups",
                "file_path": "Scripts/script-OktaGetGroups.yml",
                "deprecated": true,
                "depends_on": [
                    "okta-get-groups"
                ]
            }
        },
        {
            "2aa9f737-8c7c-42f5-815f-4d104bb3af06": {
                "name": "SEPScan",
                "file_path": "Scripts/script-SEPScan.yml",
                "deprecated": true,
                "depends_on": [
                    "sep-command-status"
                ],
                "tests": [
                    "No test - deprecated"
                ]
            }
        },
        {
            "3b260f00-772c-4d4e-84ea-e47226637497": {
                "name": "VerifyHumanReadableEquals",
                "file_path": "TestPlaybooks/script-VerifyHumanReadableEquals.yml",
                "fromversion": "3.6.0"
            }
        },
        {
            "3dd62013-4fed-43eb-8ae4-91b1b4250599": {
                "name": "OktaSetPassword",
                "file_path": "Scripts/script-OktaSetPassword.yml",
                "deprecated": true,
                "depends_on": [
                    "okta-set-password"
                ]
            }
        },
        {
            "514ec833-c02c-49a3-8ac6-d982198f5fa0": {
                "name": "OktaUpdateUser",
                "file_path": "Scripts/script-OktaUpdateUser.yml",
                "deprecated": true,
                "depends_on": [
                    "okta-update-user"
                ],
                "tests": [
                    "No test - deprecated script with no test prior"
                ]
            }
        },
        {
            "5d44a5d9-d91a-4420-801f-755f26b60c47": {
                "name": "cveLatest",
                "file_path": "Scripts/script-CveLatest.yml",
                "deprecated": true,
                "depends_on": [
                    "cve-latest"
                ]
            }
        },
        {
            "7b02fa0f-94ff-48c7-8350-b4e353702e73": {
                "name": "VMRay",
                "file_path": "Scripts/script-VMRay.yml",
                "deprecated": true,
                "depends_on": [
                    "upload_sample"
                ],
                "script_executions": [
                    "scheduleEntry",
                    "upload_sample"
                ],
                "command_to_integration": {
                    "upload_sample": "VMRay"
                },
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "7b5c080e-f3b1-411a-83b0-e1f53c21bef8": {
                "name": "WhileNotMdLoop",
                "file_path": "Scripts/script-WhileNotMdLoop.yml",
                "deprecated": true
            }
        },
        {
            "80b5c44c-4eac-4e00-812f-6d409d57be31": {
                "name": "WhoisLookup",
                "file_path": "Scripts/script-WhoisLookup.yml",
                "deprecated": true,
                "depends_on": [
                    "whois"
                ]
            }
        },
        {
            "82764532-0a4f-4b59-8cf9-fe1a00cabdae": {
                "name": "OktaSearch",
                "file_path": "Scripts/script-OktaSearch.yml",
                "deprecated": true,
                "depends_on": [
                    "okta-search"
                ]
            }
        },
        {
            "840aa9a7-04b2-4505-8238-8fe85f010dde": {
                "name": "OktaActivateUser",
                "file_path": "Scripts/script-OktaActivateUser.yml",
                "deprecated": true,
                "depends_on": [
                    "okta-activate-user"
                ]
            }
        },
        {
            "9364c36f-b1d6-4233-88c2-75008b106c31": {
                "name": "vmray_getResults",
                "file_path": "Scripts/script-VMRayGetResults.yml",
                "deprecated": true,
                "depends_on": [
                    "get_job_sample"
                ],
                "script_executions": [
                    "get_job_sample",
                    "get_results",
                    "scheduleEntry"
                ],
                "command_to_integration": {
                    "get_job_sample": "VMRay"
                },
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "94f72ed9-49c8-40e5-89bb-7c98f914d2cc": {
                "name": "OktaDeactivateUser",
                "file_path": "Scripts/script-OktaDeactivateUser.yml",
                "deprecated": true,
                "depends_on": [
                    "okta-deactivate-user"
                ]
            }
        },
        {
            "a6e348f4-1e40-4365-870c-52139c60779a": {
                "name": "OktaGetUser",
                "file_path": "Scripts/script-OktaGetUser.yml",
                "deprecated": true,
                "depends_on": [
                    "okta-get-user"
                ]
            }
        },
        {
            "AbuseIPDBPopulateIndicators": {
                "name": "AbuseIPDBPopulateIndicators",
                "file_path": "Scripts/script-AbuseIPDBPopulateIndicators.yml",
                "depends_on": [
                    "createNewIndicator",
                    "abuseipdb-get-blacklist"
                ],
                "script_executions": [
                    "createNewIndicator"
                ],
                "command_to_integration": {
                    "createNewIndicator": "Builtin"
                },
                "tests": [
                    "AbuseIPDB PopulateIndicators Test"
                ]
            }
        },
        {
            "AccessdataCheckProcessExistsInSnapshot": {
                "name": "AccessdataCheckProcessExistsInSnapshot",
                "file_path": "Scripts/AccessdataCheckProcessExistsInSnapshot/AccessdataCheckProcessExistsInSnapshot.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ActiveUsersD2": {
                "name": "ActiveUsersD2",
                "file_path": "Scripts/script-ActiveUsersD2.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "AddEvidence": {
                "name": "AddEvidence",
                "file_path": "Scripts/script-AddEvidence.yml",
                "fromversion": "2.5.0"
            }
        },
        {
            "ADExpirePassword": {
                "name": "ADExpirePassword",
                "file_path": "Scripts/script-ADExpirePassword.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-expire-password"
                ]
            }
        },
        {
            "ADGetAllUsersEmail": {
                "name": "ADGetAllUsersEmail",
                "file_path": "Scripts/script-ADGetAllUsersEmail.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "ADGetCommonGroups": {
                "name": "ADGetCommonGroups",
                "file_path": "Scripts/script-ADGetCommonGroups.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ],
                "script_executions": [
                    "ADGetUserGroups"
                ]
            }
        },
        {
            "ADGetComputer": {
                "name": "ADGetComputer",
                "file_path": "Scripts/script-ADGetComputer.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ADGetComputerGroups": {
                "name": "ADGetComputerGroups",
                "file_path": "Scripts/script-ADGetComputerGroups.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ],
                "script_executions": [
                    "AdSearch"
                ]
            }
        },
        {
            "ADGetEmailForAllUsers": {
                "name": "ADGetEmailForAllUsers",
                "file_path": "Scripts/script-ADGetEmailForAllUsers.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "ADGetEmailForUser": {
                "name": "ADGetEmailForUser",
                "file_path": "Scripts/script-ADGetEmailForUser.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "ADGetGroupComputers": {
                "name": "ADGetGroupComputers",
                "file_path": "Scripts/script-ADGetGroupComputers.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "ADGetGroupMembers": {
                "name": "ADGetGroupMembers",
                "file_path": "Scripts/script-ADGetGroupMembers.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ADGetGroupUsers": {
                "name": "ADGetGroupUsers",
                "file_path": "Scripts/script-ADGetGroupUsers.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "ADGetUser": {
                "name": "ADGetUser",
                "file_path": "Scripts/script-ADGetUser.yml",
                "depends_on": [
                    "ad-search"
                ],
                "command_to_integration": {
                    "ad-search": "activedir"
                }
            }
        },
        {
            "ADGetUserGroups": {
                "name": "ADGetUserGroups",
                "file_path": "Scripts/script-ADGetUserGroups.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "ADGetUsersByEmail": {
                "name": "ADGetUsersByEmail",
                "file_path": "Scripts/script-ADGetUsersByEmail.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "ADIsUserMember": {
                "name": "ADIsUserMember",
                "file_path": "Scripts/script-ADIsUserMember.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ],
                "script_executions": [
                    "ADGetUserGroups",
                    "AdSearch"
                ]
            }
        },
        {
            "ADListComputers": {
                "name": "ADListComputers",
                "file_path": "Scripts/script-ADListComputers.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "ADListUsers": {
                "name": "ADListUsers",
                "file_path": "Scripts/script-ADListUsers.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "ADListUsersEx": {
                "name": "ADListUsersEx",
                "file_path": "Scripts/script-ADListUsersEx.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "AdSearch": {
                "name": "AdSearch",
                "file_path": "Scripts/script-AdSearch.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "ADSetNewPassword": {
                "name": "ADSetNewPassword",
                "file_path": "Scripts/script-ADSetNewPassword.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-set-new-password"
                ]
            }
        },
        {
            "ADUserLogonInfo": {
                "name": "ADUserLogonInfo",
                "file_path": "Scripts/script-ADUserLogonInfo.yml",
                "deprecated": true,
                "depends_on": [
                    "ad-search"
                ]
            }
        },
        {
            "AggregateIOCs": {
                "name": "AggregateIOCs",
                "file_path": "Scripts/script-AggregateIOCs.yml",
                "deprecated": true
            }
        },
        {
            "AlgosecCreateTicket": {
                "name": "AlgosecCreateTicket",
                "file_path": "Scripts/script-AlgosecCreateTicket.yml",
                "depends_on": [
                    "algosec-create-ticket"
                ]
            }
        },
        {
            "AlgosecGetApplications": {
                "name": "AlgosecGetApplications",
                "file_path": "Scripts/script-AlgosecGetApplications.yml",
                "depends_on": [
                    "algosec-get-applications"
                ]
            }
        },
        {
            "AlgosecGetNetworkObject": {
                "name": "AlgosecGetNetworkObject",
                "file_path": "Scripts/script-AlgosecGetNetworkObject.yml",
                "depends_on": [
                    "algosec-get-network-object"
                ]
            }
        },
        {
            "AlgosecGetTicket": {
                "name": "AlgosecGetTicket",
                "file_path": "Scripts/script-AlgosecGetTicket.yml",
                "depends_on": [
                    "algosec-get-ticket"
                ]
            }
        },
        {
            "AlgosecQuery": {
                "name": "AlgosecQuery",
                "file_path": "Scripts/script-AlgosecQuery.yml",
                "depends_on": [
                    "algosec-query"
                ]
            }
        },
        {
            "AnalyzeMemImage": {
                "name": "AnalyzeMemImage",
                "file_path": "Scripts/script-AnalyzeMemImage.yml"
            }
        },
        {
            "AnalyzeOSX": {
                "name": "AnalyzeOSX",
                "file_path": "Scripts/script-AnalyzeOSX.yml",
                "depends_on": [
                    "file",
                    "url"
                ],
                "tests": [
                    "No test - need to revisit"
                ]
            }
        },
        {
            "AquatoneDiscover": {
                "name": "AquatoneDiscover",
                "file_path": "Scripts/script-AquatoneDiscover.yml"
            }
        },
        {
            "ArcherCreateSecurityIncident": {
                "name": "ArcherCreateSecurityIncident",
                "file_path": "Scripts/script-ArcherCreateSecurityIncident.yml",
                "depends_on": [
                    "archer-create-record"
                ]
            }
        },
        {
            "ArcherUpdateSecurityIncident": {
                "name": "ArcherUpdateSecurityIncident",
                "file_path": "Scripts/script-ArcherUpdateSecurityIncident.yml",
                "depends_on": [
                    "archer-update-record"
                ]
            }
        },
        {
            "AreValuesEqual": {
                "name": "AreValuesEqual",
                "file_path": "Scripts/script-AreValuesEqual.yml"
            }
        },
        {
            "AssignAnalystToIncident": {
                "name": "AssignAnalystToIncident",
                "file_path": "Scripts/script-AssignAnalystToIncident.yml"
            }
        },
        {
            "ATDDetonate": {
                "name": "ATDDetonate",
                "file_path": "Scripts/script-ATDDetonate.yml",
                "depends_on": [
                    "atd-get-report",
                    "atd-check-status",
                    "atd-file-upload"
                ]
            }
        },
        {
            "autoextract_test": {
                "name": "autoextract_test",
                "file_path": "TestPlaybooks/script-autoextract_test.yml"
            }
        },
        {
            "Autoruns": {
                "name": "Autoruns",
                "file_path": "Scripts/script-Autoruns.yml"
            }
        },
        {
            "AwsCreateImage": {
                "name": "AwsCreateImage",
                "file_path": "Scripts/script-AwsCreateImage.yml",
                "depends_on": [
                    "create-image"
                ]
            }
        },
        {
            "AwsCreateVolumeSnapshot": {
                "name": "AwsCreateVolumeSnapshot",
                "file_path": "Scripts/script-AwsCreateVolumeSnapshot.yml",
                "depends_on": [
                    "create-volume-snapshot"
                ]
            }
        },
        {
            "AwsEC2GetPublicSGRules": {
                "name": "AwsEC2GetPublicSGRules",
                "file_path": "Scripts/AwsEC2GetPublicSGRules/AwsEC2GetPublicSGRules.yml"
            }
        },
        {
            "AwsGetInstanceInfo": {
                "name": "AwsGetInstanceInfo",
                "file_path": "Scripts/script-AwsGetInstanceInfo.yml",
                "depends_on": [
                    "get-instance-info",
                    "get-ebs-volume-info",
                    "get-sg-info"
                ]
            }
        },
        {
            "AwsRunInstance": {
                "name": "AwsRunInstance",
                "file_path": "Scripts/script-AwsRunInstance.yml",
                "depends_on": [
                    "run-instance"
                ]
            }
        },
        {
            "AwsStartInstance": {
                "name": "AwsStartInstance",
                "file_path": "Scripts/script-AwsStartInstance.yml",
                "depends_on": [
                    "start-instance"
                ]
            }
        },
        {
            "AwsStopInstance": {
                "name": "AwsStopInstance",
                "file_path": "Scripts/script-AwsStopInstance.yml",
                "depends_on": [
                    "stop-instance"
                ]
            }
        },
        {
            "Base64Decode": {
                "name": "Base64Decode",
                "file_path": "Scripts/Base64Decode/Base64Decode.yml"
            }
        },
        {
            "Base64Encode": {
                "name": "Base64Encode",
                "file_path": "Scripts/script-Base64Encode.yml"
            }
        },
        {
            "Base64ListToFile": {
                "name": "Base64ListToFile",
                "file_path": "Scripts/script-Base64ListToFile.yml",
                "script_executions": [
                    "getList"
                ]
            }
        },
        {
            "BinaryReputationPy": {
                "name": "BinaryReputationPy",
                "file_path": "Scripts/script-BinaryReputationPy.yml",
                "deprecated": true,
                "depends_on": [
                    "file"
                ],
                "script_executions": [
                    "file",
                    "getEntries"
                ]
            }
        },
        {
            "BinarySearchPy": {
                "name": "BinarySearchPy",
                "file_path": "Scripts/script-BinarySearchPy.yml",
                "depends_on": [
                    "cb-process"
                ],
                "script_executions": [
                    "getEntries"
                ]
            }
        },
        {
            "BlockIP": {
                "name": "BlockIP",
                "file_path": "Scripts/script-BlockIP.yml",
                "tests": [
                    "blockip_test_playbook"
                ]
            }
        },
        {
            "BuildEWSQuery": {
                "name": "BuildEWSQuery",
                "file_path": "Scripts/script-BuildEWSQuery.yml",
                "tests": [
                    "buildewsquery_test"
                ]
            }
        },
        {
            "c99e196b-e05e-41f2-82cb-6798f33cb653": {
                "name": "cveSearch",
                "file_path": "Scripts/script-CveSearch.yml",
                "deprecated": true,
                "depends_on": [
                    "cve-search"
                ]
            }
        },
        {
            "CalculateGeoDistance": {
                "name": "CalculateGeoDistance",
                "file_path": "Packs/CalculateGeoDistance/Scripts/CalculateGeoDistance/CalculateGeoDistance.yml",
                "tests": [
                    "Impossible Traveler - Test"
                ],
                "pack": "CalculateGeoDistance"
            }
        },
        {
            "CalculateTimeDifference": {
                "name": "CalculateTimeDifference",
                "file_path": "Packs/CalculateTimeDifference/Scripts/CalculateTimeDifference/CalculateTimeDifference.yml",
                "tests": [
                    "Impossible Traveler - Test"
                ],
                "pack": "CalculateTimeDifference"
            }
        },
        {
            "CallTableToMarkdown": {
                "name": "CallTableToMarkdown",
                "file_path": "TestPlaybooks/script-CallTableToMarkdown.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "CBAlerts": {
                "name": "CBAlerts",
                "file_path": "Scripts/script-CBAlerts.yml",
                "depends_on": [
                    "cb-alert"
                ]
            }
        },
        {
            "CBEvents": {
                "name": "CBEvents",
                "file_path": "Scripts/script-CBEvents.yml",
                "depends_on": [
                    "process-events",
                    "cb-process"
                ]
            }
        },
        {
            "CBFindHash": {
                "name": "CBFindHash",
                "file_path": "Scripts/script-CBFindHash.yml",
                "deprecated": true,
                "depends_on": [
                    "cb-binary"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "CBFindIP": {
                "name": "CBFindIP",
                "file_path": "Scripts/CBFindIP/CBFindIP.yml",
                "tests": [
                    "CBFindIP - Test"
                ]
            }
        },
        {
            "CBLiveFetchFiles": {
                "name": "CBLiveFetchFiles",
                "file_path": "Scripts/script-CBLiveFetchFiles.yml",
                "depends_on": [
                    "CBLiveGetFile"
                ],
                "script_executions": [
                    "CBLiveGetFile"
                ]
            }
        },
        {
            "CBLiveGetFile": {
                "name": "CBLiveGetFile",
                "file_path": "Scripts/script-CBLiveGetFile.yml",
                "depends_on": [
                    "cb-list-sessions",
                    "cb-command-create",
                    "cb-session-info",
                    "cb-command-info",
                    "cb-file-get",
                    "cb-session-create",
                    "cb-sensor-info"
                ]
            }
        },
        {
            "CBLiveProcessList": {
                "name": "CBLiveProcessList",
                "file_path": "Scripts/script-CBLiveProcessList.yml",
                "depends_on": [
                    "cb-command-info",
                    "cb-command-create"
                ]
            }
        },
        {
            "CBPApproveHash": {
                "name": "CBPApproveHash",
                "file_path": "Scripts/script-CBPApproveHash.yml",
                "depends_on": [
                    "cbp-fileRule-update"
                ]
            }
        },
        {
            "CBPBanHash": {
                "name": "CBPBanHash",
                "file_path": "Scripts/script-CBPBanHash.yml",
                "depends_on": [
                    "cbp-fileRule-update"
                ]
            }
        },
        {
            "CBPCatalogFindHash": {
                "name": "CBPCatalogFindHash",
                "file_path": "Scripts/script-CBPCatalogFindHash.yml",
                "depends_on": [
                    "cbp-fileCatalog-search"
                ]
            }
        },
        {
            "CBPFindComputer": {
                "name": "CBPFindComputer",
                "file_path": "Scripts/script-CBPFindComputer.yml",
                "depends_on": [
                    "cbp-computer-search"
                ]
            }
        },
        {
            "CBPFindRule": {
                "name": "CBPFindRule",
                "file_path": "Scripts/script-CBPFindRule.yml",
                "depends_on": [
                    "cbp-fileRule-search"
                ]
            }
        },
        {
            "CBSearch": {
                "name": "CBSearch",
                "file_path": "Scripts/script-CBSearch.yml",
                "deprecated": true,
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "CBSensors": {
                "name": "CBSensors",
                "file_path": "Scripts/script-CBSensors.yml",
                "depends_on": [
                    "cb-list-sensors"
                ]
            }
        },
        {
            "CBSessions": {
                "name": "CBSessions",
                "file_path": "Scripts/script-CBSessions.yml",
                "depends_on": [
                    "cb-list-sessions"
                ]
            }
        },
        {
            "CBWatchlists": {
                "name": "CBWatchlists",
                "file_path": "Scripts/script-CBWatchlists.yml",
                "depends_on": [
                    "cb-watchlist-get"
                ]
            }
        },
        {
            "CEFParser": {
                "name": "CEFParser",
                "file_path": "Scripts/script-CEFParser.yml"
            }
        },
        {
            "ChangeRemediationSLAOnSevChange": {
                "name": "ChangeRemediationSLAOnSevChange",
                "file_path": "Scripts/script-ChangeRemediationSLAOnSevChange.yml",
                "fromversion": "4.1.0",
                "script_executions": [
                    "setIncident"
                ],
                "tests": [
                    "SLA Scripts - Test"
                ]
            }
        },
        {
            "CheckArcherInstance": {
                "name": "CheckArcherInstance",
                "file_path": "TestPlaybooks/script-ArcherTestCredentials.yml",
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "CheckDockerImageAvailable": {
                "name": "CheckDockerImageAvailable",
                "file_path": "Scripts/CheckDockerImageAvailable/CheckDockerImageAvailable.yml",
                "tests": [
                    "CheckDockerImageAvailableTest"
                ]
            }
        },
        {
            "CheckEmailAuthenticity": {
                "name": "CheckEmailAuthenticity",
                "file_path": "Scripts/CheckEmailAuthenticity/CheckEmailAuthenticity.yml"
            }
        },
        {
            "CheckFiles": {
                "name": "CheckFiles",
                "file_path": "Scripts/script-CheckFiles.yml",
                "deprecated": true,
                "depends_on": [
                    "file"
                ]
            }
        },
        {
            "CheckFilesWildfirePy": {
                "name": "CheckFilesWildfirePy",
                "file_path": "Scripts/script-CheckFilesWildfirePy.yml",
                "deprecated": true,
                "depends_on": [
                    "wildfire-report",
                    "wildfire-upload"
                ],
                "script_executions": [
                    "getEntries"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "CheckIPs": {
                "name": "CheckIPs",
                "file_path": "Scripts/script-CheckIPs.yml",
                "deprecated": true,
                "script_executions": [
                    "ip"
                ]
            }
        },
        {
            "CheckpointFWBackupStatus": {
                "name": "CheckpointFWBackupStatus",
                "file_path": "Scripts/script-CheckpointFWBackupStatus.yml",
                "depends_on": [
                    "ssh"
                ],
                "script_executions": [
                    "ssh"
                ]
            }
        },
        {
            "CheckpointFWCreateBackup": {
                "name": "CheckpointFWCreateBackup",
                "file_path": "Scripts/script-CheckpointFWCreateBackup.yml",
                "depends_on": [
                    "ssh"
                ],
                "script_executions": [
                    "ssh"
                ]
            }
        },
        {
            "CheckSender": {
                "name": "CheckSender",
                "file_path": "Scripts/script-CheckSender.yml",
                "depends_on": [
                    "pipl-search"
                ]
            }
        },
        {
            "CheckSenderDomainDistance": {
                "name": "CheckSenderDomainDistance",
                "file_path": "Scripts/script-CheckSenderDomainDistance.yml"
            }
        },
        {
            "CheckURLs": {
                "name": "CheckURLs",
                "file_path": "Scripts/script-CheckURLs.yml",
                "deprecated": true,
                "script_executions": [
                    "url"
                ]
            }
        },
        {
            "checkValue": {
                "name": "checkValue",
                "file_path": "Scripts/script-checkValue.yml"
            }
        },
        {
            "CheckWhitelist": {
                "name": "CheckWhitelist",
                "file_path": "Scripts/script-CheckWhitelist.yml",
                "deprecated": true,
                "script_executions": [
                    "getList"
                ]
            }
        },
        {
            "CherwellCreateIncident": {
                "name": "CherwellCreateIncident",
                "file_path": "Scripts/CherwellCreateIncident/CherwellCreateIncident.yml",
                "depends_on": [
                    "cherwell-create-business-object"
                ],
                "command_to_integration": {
                    "cherwell-create-business-object": "Cherwell"
                },
                "tests": [
                    "Cherwell Example Scripts - test"
                ]
            }
        },
        {
            "CherwellGetIncident": {
                "name": "CherwellGetIncident",
                "file_path": "Scripts/CherwellGetIncident/CherwellGetIncident.yml",
                "depends_on": [
                    "cherwell-get-business-object"
                ],
                "command_to_integration": {
                    "cherwell-get-business-object": "Cherwell"
                },
                "tests": [
                    "Cherwell Example Scripts - test"
                ]
            }
        },
        {
            "CherwellIncidentOwnTask": {
                "name": "CherwellIncidentOwnTask",
                "file_path": "Scripts/CherwellIncidentOwnTask/CherwellIncidentOwnTask.yml",
                "depends_on": [
                    "cherwell-link-business-objects"
                ],
                "command_to_integration": {
                    "cherwell-link-business-objects": "Cherwell"
                },
                "tests": [
                    "Cherwell Example Scripts - test"
                ]
            }
        },
        {
            "CherwellIncidentUnlinkTask": {
                "name": "CherwellIncidentUnlinkTask",
                "file_path": "Scripts/CherwellIncidentUnlinkTask/CherwellIncidentUnlinkTask.yml",
                "depends_on": [
                    "cherwell-unlink-business-objects"
                ],
                "command_to_integration": {
                    "cherwell-unlink-business-objects": "Cherwell"
                },
                "tests": [
                    "Cherwell Example Scripts - test"
                ]
            }
        },
        {
            "CherwellQueryIncidents": {
                "name": "CherwellQueryIncidents",
                "file_path": "Scripts/CherwellQueryIncidents/CherwellQueryIncidents.yml",
                "depends_on": [
                    "cherwell-query-business-object"
                ],
                "command_to_integration": {
                    "cherwell-query-business-object": "Cherwell"
                },
                "tests": [
                    "Cherwell Example Scripts - test"
                ]
            }
        },
        {
            "CherwellUpdateIncident": {
                "name": "CherwellUpdateIncident",
                "file_path": "Scripts/CherwellUpdateIncident/CherwellUpdateIncident.yml",
                "depends_on": [
                    "cherwell-update-business-object"
                ],
                "command_to_integration": {
                    "cherwell-update-business-object": "Cherwell"
                },
                "tests": [
                    "Cherwell Example Scripts - test"
                ]
            }
        },
        {
            "ClassifierNotifyAdmin": {
                "name": "ClassifierNotifyAdmin",
                "file_path": "Scripts/script-ClassifierNotifyAdmin.yml",
                "depends_on": [
                    "send-mail"
                ]
            }
        },
        {
            "CloseInvestigation": {
                "name": "CloseInvestigation",
                "file_path": "Scripts/script-CloseInvestigation.yml",
                "deprecated": true
            }
        },
        {
            "CloseInvestigationAsDuplicate": {
                "name": "CloseInvestigationAsDuplicate",
                "file_path": "Scripts/script-CloseInvestigationAsDuplicate.yml",
                "script_executions": [
                    "linkIncidents"
                ]
            }
        },
        {
            "commentsToContext": {
                "name": "commentsToContext",
                "file_path": "Scripts/script-commentsToContext.yml"
            }
        },
        {
            "CommonD2": {
                "name": "CommonD2",
                "file_path": "Scripts/script-CommonD2.yml"
            }
        },
        {
            "CommonIntegration": {
                "name": "CommonIntegration",
                "file_path": "Scripts/script-CommonIntegration.yml",
                "deprecated": true
            }
        },
        {
            "CommonIntegrationPython": {
                "name": "CommonIntegrationPython",
                "file_path": "Scripts/script-CommonIntegrationPython.yml",
                "deprecated": true
            }
        },
        {
            "CommonServerPowerShell": {
                "name": "CommonServerPowerShell",
                "file_path": "Packs/Base/Scripts/CommonServerPowerShell/CommonServerPowerShell.yml",
                "fromversion": "5.5.0",
                "tests": [
                    "PowerShellCommon-Test"
                ],
                "pack": "Base"
            }
        },
        {
            "CommonServerPython": {
                "name": "CommonServerPython",
                "file_path": "Packs/Base/Scripts/CommonServerPython/CommonServerPython.yml",
                "tests": [
                    "TestCommonPython"
                ],
                "pack": "Base"
            }
        },
        {
            "CommonServerUserPowerShell": {
                "name": "CommonServerUserPowerShell",
                "file_path": "Scripts/script-CommonServerUserPowerShell.yml",
                "fromversion": "5.5.0",
                "tests": [
                    "No test - No need"
                ]
            }
        },
        {
            "CommonServerUserPython": {
                "name": "CommonServerUserPython",
                "file_path": "Scripts/script-CommonServerUserPython.yml"
            }
        },
        {
            "CommonUserServer": {
                "name": "CommonUserServer",
                "file_path": "Scripts/script-CommonUserServer.yml"
            }
        },
        {
            "CompareIncidentsLabels": {
                "name": "CompareIncidentsLabels",
                "file_path": "Scripts/CompareIncidentsLables/CompareIncidentsLabels.yml",
                "script_executions": [
                    "getIncidents"
                ]
            }
        },
        {
            "CompleteManualTask": {
                "name": "CompleteManualTask",
                "file_path": "TestPlaybooks/script-CompleteManualTask.yml",
                "script_executions": [
                    "DemistoGetIncidentTasksByState",
                    "taskComplete"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ConferIncidentDetails": {
                "name": "ConferIncidentDetails",
                "file_path": "Scripts/script-ConferIncidentDetails.yml",
                "depends_on": [
                    "confer"
                ]
            }
        },
        {
            "ConferSetSeverity": {
                "name": "ConferSetSeverity",
                "file_path": "Scripts/script-ConferSetSeverity.yml",
                "depends_on": [
                    "confer"
                ],
                "script_executions": [
                    "setSeverity"
                ]
            }
        },
        {
            "ContainsCreditCardInfo": {
                "name": "ContainsCreditCardInfo",
                "file_path": "Scripts/script-ContainsCreditCardInfo.yml"
            }
        },
        {
            "ContextContains": {
                "name": "ContextContains",
                "file_path": "Scripts/script-ContextContains.yml"
            }
        },
        {
            "ContextFilter": {
                "name": "ContextFilter",
                "file_path": "Scripts/script-ContextFilter.yml"
            }
        },
        {
            "ContextGetEmails": {
                "name": "ContextGetEmails",
                "file_path": "Scripts/script-ContextGetEmails.yml"
            }
        },
        {
            "ContextGetHashes": {
                "name": "ContextGetHashes",
                "file_path": "Scripts/script-ContextGetHashes.yml"
            }
        },
        {
            "ContextGetIps": {
                "name": "ContextGetIps",
                "file_path": "Scripts/script-ContextGetIps.yml"
            }
        },
        {
            "ContextGetPathForString": {
                "name": "ContextGetPathForString",
                "file_path": "Scripts/script-ContextGetPathForString.yml"
            }
        },
        {
            "ContextSearchForString": {
                "name": "ContextSearchForString",
                "file_path": "Scripts/script-ContextSearchForString.yml"
            }
        },
        {
            "ConvertAllExcept": {
                "name": "ConvertAllExcept",
                "file_path": "Scripts/ConvertAllExcept/ConvertAllExcept.yml",
                "tests": [
                    "No test - used in Prisma Cloud classifier."
                ]
            }
        },
        {
            "ConvertFile": {
                "name": "ConvertFile",
                "file_path": "Scripts/ConvertFile/ConvertFile.yml",
                "fromversion": "4.5.0"
            }
        },
        {
            "ConvertKeysToTableFieldFormat": {
                "name": "ConvertKeysToTableFieldFormat",
                "file_path": "Scripts/script-ConvertKeysToTableFieldFormat.yml"
            }
        },
        {
            "ConvertTableToHTML": {
                "name": "ConvertTableToHTML",
                "file_path": "Scripts/script-ConvertTableToHTML.yml"
            }
        },
        {
            "ConvertXmlFileToJson": {
                "name": "ConvertXmlFileToJson",
                "file_path": "Scripts/script-ConvertXmlFileToJson.yml"
            }
        },
        {
            "ConvertXmlToJson": {
                "name": "ConvertXmlToJson",
                "file_path": "Scripts/script-ConvertXmlToJson.yml"
            }
        },
        {
            "CopyContextToField": {
                "name": "CopyContextToField",
                "file_path": "Scripts/CopyContextToField/CopyContextToField.yml",
                "script_executions": [
                    "getContext",
                    "getIncidents",
                    "setIncident"
                ]
            }
        },
        {
            "CopyFileD2": {
                "name": "CopyFileD2",
                "file_path": "Scripts/script-CopyFileD2.yml",
                "tests": [
                    "No test - D2 test are not supported yet in content tests"
                ]
            }
        },
        {
            "CountArraySize": {
                "name": "CountArraySize",
                "file_path": "Scripts/script-CountArraySize.yml"
            }
        },
        {
            "CPBlockIP": {
                "name": "CPBlockIP",
                "file_path": "Scripts/script-CPBlockIP.yml",
                "deprecated": true,
                "depends_on": [
                    "checkpoint"
                ],
                "script_executions": [
                    "checkpoint"
                ],
                "tests": [
                    "blockip_test_playbook"
                ]
            }
        },
        {
            "CPCreateBackup": {
                "name": "CPCreateBackup",
                "file_path": "Scripts/script-CPCreateBackup.yml",
                "deprecated": true,
                "depends_on": [
                    "ssh"
                ],
                "script_executions": [
                    "ssh"
                ]
            }
        },
        {
            "CPDeleteRule": {
                "name": "CPDeleteRule",
                "file_path": "Scripts/script-CPDeleteRule.yml",
                "deprecated": true,
                "depends_on": [
                    "checkpoint"
                ],
                "script_executions": [
                    "checkpoint"
                ]
            }
        },
        {
            "CPSetRule": {
                "name": "CPSetRule",
                "file_path": "Scripts/script-CPSetRule.yml",
                "deprecated": true,
                "depends_on": [
                    "checkpoint"
                ],
                "script_executions": [
                    "checkpoint"
                ]
            }
        },
        {
            "CPShowAccessRulebase": {
                "name": "CPShowAccessRulebase",
                "file_path": "Scripts/script-CPShowAccessRulebase.yml",
                "deprecated": true,
                "depends_on": [
                    "checkpoint"
                ],
                "script_executions": [
                    "checkpoint"
                ]
            }
        },
        {
            "CPShowBackupStatus": {
                "name": "CPShowBackupStatus",
                "file_path": "Scripts/script-CPShowBackupStatus.yml",
                "deprecated": true,
                "depends_on": [
                    "ssh"
                ],
                "script_executions": [
                    "ssh"
                ]
            }
        },
        {
            "CPShowHosts": {
                "name": "CPShowHosts",
                "file_path": "Scripts/script-CPShowHosts.yml",
                "deprecated": true,
                "depends_on": [
                    "checkpoint"
                ],
                "script_executions": [
                    "checkpoint"
                ]
            }
        },
        {
            "CPTaskStatus": {
                "name": "CPTaskStatus",
                "file_path": "Scripts/script-CPTaskStatus.yml",
                "deprecated": true,
                "depends_on": [
                    "checkpoint"
                ],
                "script_executions": [
                    "checkpoint"
                ]
            }
        },
        {
            "CreateArray": {
                "name": "CreateArray",
                "file_path": "Scripts/script-CreateArray.yml"
            }
        },
        {
            "CreateBinaryFile": {
                "name": "CreateBinaryFile",
                "file_path": "TestPlaybooks/script-CreateBinaryFile.yml"
            }
        },
        {
            "CreateDuplicateIncident": {
                "name": "CreateDuplicateIncident",
                "file_path": "TestPlaybooks/script-CreateDuplicateIncident.yml",
                "script_executions": [
                    "createNewIncident"
                ]
            }
        },
        {
            "CreateEmailHtmlBody": {
                "name": "CreateEmailHtmlBody",
                "file_path": "Scripts/script-CreateEmailHtmlBody.yml",
                "tests": [
                    "CreateEmailHtmlBody_test_pb"
                ]
            }
        },
        {
            "CreateIndicatorsFromSTIX": {
                "name": "CreateIndicatorsFromSTIX",
                "file_path": "Scripts/CreateIndicatorsFromSTIX/CreateIndicatorsFromSTIX.yml",
                "script_executions": [
                    "StixParser",
                    "createNewIndicator"
                ],
                "tests": [
                    "CreateIndicatorFromSTIXTest"
                ]
            }
        },
        {
            "CrowdStrikeStreamingPreProcessing": {
                "name": "CrowdStrikeStreamingPreProcessing",
                "file_path": "Scripts/script-CrowdStrikeStreamingPreProcessing.yml",
                "script_executions": [
                    "addEntries",
                    "getIncidents"
                ]
            }
        },
        {
            "CrowdStrikeUrlParse": {
                "name": "CrowdStrikeUrlParse",
                "file_path": "Scripts/script-CrowdStrikeUrlParse.yml"
            }
        },
        {
            "CSActors": {
                "name": "CSActors",
                "file_path": "Scripts/script-CSActors.yml",
                "deprecated": true,
                "depends_on": [
                    "cs-actors"
                ]
            }
        },
        {
            "CSCountDevicesForIOC": {
                "name": "CSCountDevicesForIOC",
                "file_path": "Scripts/script-CSCountDevicesForIOC.yml",
                "deprecated": true,
                "depends_on": [
                    "cs-device-count-ioc"
                ]
            }
        },
        {
            "CSHuntByIOC": {
                "name": "CSHuntByIOC",
                "file_path": "Scripts/script-CSHuntByIOC.yml",
                "deprecated": true,
                "depends_on": [
                    "cs-device-ran-on"
                ],
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "CSIndicators": {
                "name": "CSIndicators",
                "file_path": "Scripts/script-CSIndicators.yml",
                "deprecated": true,
                "depends_on": [
                    "cs-indicators"
                ]
            }
        },
        {
            "CSVFeedApiModule": {
                "name": "CSVFeedApiModule",
                "file_path": "Packs/ApiModules/Scripts/CSVFeedApiModule/CSVFeedApiModule.yml",
                "pack": "ApiModules"
            }
        },
        {
            "CuckooDetonateFile": {
                "name": "CuckooDetonateFile",
                "file_path": "Scripts/script-CuckooDetonateFile.yml",
                "depends_on": [
                    "cuckoo-create-task-from-file"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "CuckooDetonateURL": {
                "name": "CuckooDetonateURL",
                "file_path": "Scripts/script-CuckooDetonateURL.yml",
                "depends_on": [
                    "cuckoo-create-task-from-url"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "CuckooDisplayReport": {
                "name": "CuckooDisplayReport",
                "file_path": "Scripts/script-CuckooDisplayReport.yml",
                "depends_on": [
                    "ck-report"
                ],
                "script_executions": [
                    "getEntry",
                    "getFilePath"
                ]
            }
        },
        {
            "CuckooGetReport": {
                "name": "CuckooGetReport",
                "file_path": "Scripts/script-CuckooGetReport.yml",
                "depends_on": [
                    "cuckoo-get-task-report"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "CuckooGetScreenshot": {
                "name": "CuckooGetScreenshot",
                "file_path": "Scripts/script-CuckooGetScreenshot.yml",
                "depends_on": [
                    "cuckoo-task-screenshot"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "CuckooTaskStatus": {
                "name": "CuckooTaskStatus",
                "file_path": "Scripts/script-CuckooTaskStatus.yml",
                "depends_on": [
                    "cuckoo-view-task"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Cut": {
                "name": "Cut",
                "file_path": "Scripts/script-Cut.yml",
                "tests": [
                    "CutTransformerTest"
                ]
            }
        },
        {
            "cveReputation": {
                "name": "cveReputation",
                "file_path": "Scripts/script-CveReputation.yml",
                "depends_on": [
                    "cve-search"
                ]
            }
        },
        {
            "CybereasonPreProcessingExample": {
                "name": "CybereasonPreProcessingExample",
                "file_path": "Scripts/script-CybereasonPreProcessing.yml",
                "script_executions": [
                    "getIncidents",
                    "setIncident"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "CYFileRep": {
                "name": "CYFileRep",
                "file_path": "Scripts/script-CYFileRep.yml",
                "depends_on": [
                    "cy-upload",
                    "file"
                ],
                "script_executions": [
                    "file",
                    "getEntry"
                ],
                "command_to_integration": {
                    "file": "cylance"
                },
                "tests": [
                    "No test - no instance"
                ]
            }
        },
        {
            "D2ActiveUsers": {
                "name": "D2ActiveUsers",
                "file_path": "Scripts/script-D2ActiveUsers.yml"
            }
        },
        {
            "D2Autoruns": {
                "name": "D2Autoruns",
                "file_path": "Scripts/script-D2Autoruns.yml"
            }
        },
        {
            "D2Drop": {
                "name": "D2Drop",
                "file_path": "Scripts/script-D2Drop.yml",
                "tests": [
                    "No test - D2 tests are not supported yet in content tests"
                ]
            }
        },
        {
            "D2Exec": {
                "name": "D2Exec",
                "file_path": "Scripts/script-D2Exec.yml"
            }
        },
        {
            "D2ExecuteCommand": {
                "name": "D2ExecuteCommand",
                "file_path": "Scripts/script-ExecuteCommandD2.yml"
            }
        },
        {
            "D2GetFile": {
                "name": "D2GetFile",
                "file_path": "Scripts/script-D2GetFile.yml"
            }
        },
        {
            "D2GetSystemLog": {
                "name": "D2GetSystemLog",
                "file_path": "Scripts/script-D2GetSystemLog.yml"
            }
        },
        {
            "D2Hardware": {
                "name": "D2Hardware",
                "file_path": "Scripts/script-D2Hardware.yml"
            }
        },
        {
            "D2O365ComplianceSearch": {
                "name": "D2O365ComplianceSearch",
                "file_path": "Scripts/script-D2O365ComplianceSearch.yml"
            }
        },
        {
            "D2O365SearchAndDelete": {
                "name": "D2O365SearchAndDelete",
                "file_path": "Scripts/script-D2O365SearchAndDelete.yml"
            }
        },
        {
            "D2PEDump": {
                "name": "D2PEDump",
                "file_path": "Scripts/script-D2PEDump.yml"
            }
        },
        {
            "D2Processes": {
                "name": "D2Processes",
                "file_path": "Scripts/script-D2Processes.yml"
            }
        },
        {
            "D2RegQuery": {
                "name": "D2RegQuery",
                "file_path": "Scripts/script-D2RegQuery.yml"
            }
        },
        {
            "D2Rekall": {
                "name": "D2Rekall",
                "file_path": "Scripts/script-D2Rekall.yml"
            }
        },
        {
            "D2Remove": {
                "name": "D2Remove",
                "file_path": "Scripts/D2Remove/D2Remove.yml",
                "script_executions": [
                    "d2_remove"
                ],
                "tests": [
                    "no test (impossible to mock)"
                ]
            }
        },
        {
            "D2Services": {
                "name": "D2Services",
                "file_path": "Scripts/script-D2Services.yml"
            }
        },
        {
            "D2Users": {
                "name": "D2Users",
                "file_path": "Scripts/script-D2Users.yml"
            }
        },
        {
            "D2Winpmem": {
                "name": "D2Winpmem",
                "file_path": "Scripts/script-D2Winpmem.yml"
            }
        },
        {
            "da330ce7-3a93-430c-8454-03b96cf5184e": {
                "name": "OktaCreateUser",
                "file_path": "Scripts/script-OktaCreateUser.yml",
                "deprecated": true,
                "depends_on": [
                    "okta-create-user"
                ]
            }
        },
        {
            "DamSensorDown": {
                "name": "DamSensorDown",
                "file_path": "Scripts/script-McafeeDAMSensorDown.yml",
                "depends_on": [
                    "dam-get-latest-by-rule"
                ],
                "script_executions": [
                    "setIncident"
                ]
            }
        },
        {
            "DataDomainReputation": {
                "name": "DataDomainReputation",
                "file_path": "Scripts/script-DataDomainReputation.yml",
                "fromversion": "3.1.0"
            }
        },
        {
            "DataDomainReputation": {
                "name": "DataDomainReputation",
                "file_path": "Scripts/script-DataDomainReputationOld.yml",
                "toversion": "3.0.1"
            }
        },
        {
            "DataHashReputation": {
                "name": "DataHashReputation",
                "file_path": "Scripts/script-DataHashReputation.yml",
                "deprecated": true,
                "depends_on": [
                    "file"
                ],
                "tests": [
                    "No test - deprecated old script"
                ]
            }
        },
        {
            "DataHashReputation": {
                "name": "DataHashReputation",
                "file_path": "Scripts/script-DataHashReputationOld.yml",
                "toversion": "3.0.1",
                "deprecated": true,
                "depends_on": [
                    "file"
                ]
            }
        },
        {
            "DataIPReputation": {
                "name": "DataIPReputation",
                "file_path": "Scripts/script-DataIPReputationOld.yml",
                "toversion": "3.0.1"
            }
        },
        {
            "DataIPReputation": {
                "name": "DataIPReputation",
                "file_path": "Scripts/script-DataIPReputation.yml",
                "deprecated": true
            }
        },
        {
            "DataURLReputation": {
                "name": "DataURLReputation",
                "file_path": "Scripts/script-DataURLReputationOld.yml",
                "toversion": "3.0.1"
            }
        },
        {
            "DataURLReputation": {
                "name": "DataURLReputation",
                "file_path": "Scripts/script-DataURLReputation.yml",
                "deprecated": true
            }
        },
        {
            "dbbdc2e4-6105-4ee9-8e83-563a4b991a89": {
                "name": "VirustotalIsMalicious",
                "file_path": "Scripts/script-VirustotalIsMalicious.yml",
                "deprecated": true,
                "depends_on": [
                    "file"
                ],
                "script_executions": [
                    "file"
                ],
                "command_to_integration": {
                    "file": "VirusTotal"
                }
            }
        },
        {
            "DBotAverageScore": {
                "name": "DBotAverageScore",
                "file_path": "Scripts/script-DBotAverageScore.yml"
            }
        },
        {
            "DBotBuildPhishingClassifier": {
                "name": "DBotBuildPhishingClassifier",
                "file_path": "Scripts/DBotBuildPhishingClassifier/DBotBuildPhishingClassifier.yml",
                "fromversion": "4.5.0",
                "script_executions": [
                    "DBotPreProcessTextData",
                    "DBotTrainTextClassifierV2",
                    "GetIncidentsByQuery"
                ],
                "tests": [
                    "Create Phishing Classifier V2 ML Test"
                ]
            }
        },
        {
            "DBotClosedIncidentsPercentage": {
                "name": "DBotClosedIncidentsPercentage",
                "file_path": "Scripts/script-DBotClosedIncidentsPercentage.yml"
            }
        },
        {
            "DBotPredictOutOfTheBox": {
                "name": "DBotPredictOutOfTheBox",
                "file_path": "Scripts/DBotPredictOutOfTheBox/DBotPredictOutOfTheBox.yml",
                "script_executions": [
                    "DBotPredictPhishingWords",
                    "GetMLModelEvaluation",
                    "createMLModel",
                    "evaluateMLModel",
                    "getMLModel"
                ],
                "tests": [
                    "DbotPredictOufOfTheBoxTest"
                ]
            }
        },
        {
            "DBotPredictPhishingEvaluation": {
                "name": "DBotPredictPhishingEvaluation",
                "file_path": "Scripts/script-DBotPredictPhishingEvaluation.yml",
                "fromversion": "4.1.0",
                "script_executions": [
                    "DBotPredictTextLabel",
                    "DBotPreparePhishingData",
                    "setIncident"
                ],
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        },
        {
            "DBotPredictPhishingLabel": {
                "name": "DBotPredictPhishingLabel",
                "file_path": "Scripts/DBotPredictPhishingLabel/DBotPredictPhishingLabel.yml",
                "fromversion": "4.1.0",
                "script_executions": [
                    "DBotPredictTextLabel"
                ],
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        },
        {
            "DBotPredictPhishingWords": {
                "name": "DBotPredictPhishingWords",
                "file_path": "Scripts/DBotPredictPhishingWords/DBotPredictPhishingWords.yml",
                "script_executions": [
                    "HighlightWords",
                    "WordTokenizerNLP",
                    "getList",
                    "getMLModel"
                ],
                "tests": [
                    "Create Phishing Classifier V2 ML Test"
                ]
            }
        },
        {
            "DBotPredictTextLabel": {
                "name": "DBotPredictTextLabel",
                "file_path": "Scripts/script-DBotPredictTextLabel.yml",
                "fromversion": "4.1.0",
                "script_executions": [
                    "WordTokenizer",
                    "getList"
                ],
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        },
        {
            "DBotPreparePhishingData": {
                "name": "DBotPreparePhishingData",
                "file_path": "Scripts/script-DBotPreparePhishingData.yml",
                "fromversion": "4.1.0",
                "script_executions": [
                    "WordTokenizer",
                    "createList",
                    "getContext",
                    "getIncidents"
                ],
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        },
        {
            "DBotPreProcessTextData": {
                "name": "DBotPreProcessTextData",
                "file_path": "Scripts/DBotPreprocessTextData/DBotPreprocessTextData.yml",
                "fromversion": "4.5.0",
                "script_executions": [
                    "WordTokenizerNLP"
                ],
                "tests": [
                    "Create Phishing Classifier V2 ML Test"
                ]
            }
        },
        {
            "DBotTrainTextClassifier": {
                "name": "DBotTrainTextClassifier",
                "file_path": "Scripts/script-DBotTrainTextClassifier.yml",
                "fromversion": "4.1.0",
                "script_executions": [
                    "createList",
                    "getFilePath"
                ],
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        },
        {
            "DBotTrainTextClassifierV2": {
                "name": "DBotTrainTextClassifierV2",
                "file_path": "Scripts/DBotTrainTextClassifierV2/DBotTrainTextClassifierV2.yml",
                "fromversion": "4.5.0",
                "script_executions": [
                    "GetMLModelEvaluation",
                    "createMLModel",
                    "evaluateMLModel"
                ],
                "tests": [
                    "Create Phishing Classifier V2 ML Test"
                ]
            }
        },
        {
            "DecodeMimeHeader": {
                "name": "DecodeMimeHeader",
                "file_path": "Scripts/script-DecodeMimeHeader.yml"
            }
        },
        {
            "DefaultIncidentClassifier": {
                "name": "DefaultIncidentClassifier",
                "file_path": "Scripts/script-DefaultIncidentClassifier.yml"
            }
        },
        {
            "DeleteContext": {
                "name": "DeleteContext",
                "file_path": "Scripts/script-DeleteConext.yml"
            }
        },
        {
            "DeleteIndicators": {
                "name": "DeleteIndicators",
                "file_path": "TestPlaybooks/script-DeleteIndicators.yml",
                "script_executions": [
                    "deleteIndicators"
                ]
            }
        },
        {
            "DemistoCreateList": {
                "name": "DemistoCreateList",
                "file_path": "Scripts/script-DemistoCreateList.yml",
                "depends_on": [
                    "demisto-api-post"
                ]
            }
        },
        {
            "DemistoDeleteIncident": {
                "name": "DemistoDeleteIncident",
                "file_path": "Scripts/script-DemistoDeleteIncident.yml",
                "deprecated": true,
                "depends_on": [
                    "demisto-api-post"
                ]
            }
        },
        {
            "DemistoGetIncidentTasksByState": {
                "name": "DemistoGetIncidentTasksByState",
                "file_path": "Scripts/script-DemistoGetIncidentTasksByState.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "DemistoLeaveAllInvestigations": {
                "name": "DemistoLeaveAllInvestigations",
                "file_path": "Scripts/script-DemistoLeaveAllInvestigations.yml",
                "depends_on": [
                    "demisto-api-post"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "DemistoLinkIncidents": {
                "name": "DemistoLinkIncidents",
                "file_path": "Scripts/script-DemistoLinkIncidents.yml",
                "depends_on": [
                    "demisto-api-post"
                ]
            }
        },
        {
            "DemistoLogsBundle": {
                "name": "DemistoLogsBundle",
                "file_path": "Scripts/script-DemistoLogsBundle.yml",
                "depends_on": [
                    "demisto-api-download"
                ]
            }
        },
        {
            "DemistoSendInvite": {
                "name": "DemistoSendInvite",
                "file_path": "Scripts/script-DemistoSendInvite.yml",
                "depends_on": [
                    "demisto-api-post",
                    "demisto-api-get"
                ]
            }
        },
        {
            "DemistoUploadFile": {
                "name": "DemistoUploadFile",
                "file_path": "Scripts/script-DemistoUploadFile.yml",
                "depends_on": [
                    "demisto-api-multipart"
                ],
                "tests": [
                    "DemistoUploadFileToIncident Test"
                ]
            }
        },
        {
            "DemistoUploadFileToIncident": {
                "name": "DemistoUploadFileToIncident",
                "file_path": "Scripts/script-DemistoUploadFileToIncident.yml",
                "depends_on": [
                    "demisto-api-multipart"
                ]
            }
        },
        {
            "DemistoVersion": {
                "name": "DemistoVersion",
                "file_path": "Scripts/DemistoVersion/DemistoVersion.yml",
                "fromversion": "5.0.0"
            }
        },
        {
            "DisplayHTML": {
                "name": "DisplayHTML",
                "file_path": "Scripts/script-DisplayHTML.yml"
            }
        },
        {
            "DockerHardeningCheck": {
                "name": "DockerHardeningCheck",
                "file_path": "Scripts/DockerHardeningCheck/DockerHardeningCheck.yml",
                "fromversion": "5.0.0"
            }
        },
        {
            "DocumentationAutomation": {
                "name": "DocumentationAutomation",
                "file_path": "Scripts/DocumentationAutomation/DocumentationAutomation.yml"
            }
        },
        {
            "DomainReputation": {
                "name": "DomainReputation",
                "file_path": "Scripts/script-DomainReputation.yml",
                "script_executions": [
                    "domain"
                ]
            }
        },
        {
            "DT": {
                "name": "DT",
                "file_path": "Scripts/script-DT.yml",
                "tests": [
                    "No tests - script used for testing"
                ]
            }
        },
        {
            "DumpJSON": {
                "name": "DumpJSON",
                "file_path": "Scripts/script-DumpJSON.yml"
            }
        },
        {
            "Elasticsearch": {
                "name": "Elasticsearch",
                "file_path": "Scripts/script-Elasticsearch.yml",
                "deprecated": true,
                "depends_on": [
                    "search"
                ],
                "script_executions": [
                    "search"
                ],
                "command_to_integration": {
                    "search": "elasticsearch"
                },
                "tests": [
                    "No test - deprecated"
                ]
            }
        },
        {
            "ElasticSearchDisplay": {
                "name": "ElasticSearchDisplay",
                "file_path": "Scripts/script-ElasticSearchDisplay.yml",
                "deprecated": true,
                "depends_on": [
                    "search"
                ],
                "command_to_integration": {
                    "search": "elasticsearch"
                },
                "tests": [
                    "No test - deprecated"
                ]
            }
        },
        {
            "EmailAskUser": {
                "name": "EmailAskUser",
                "file_path": "Scripts/script-EmailAskUser_ToV3.5.0.yml",
                "toversion": "3.1.0"
            }
        },
        {
            "EmailAskUser": {
                "name": "EmailAskUser",
                "file_path": "Scripts/script-EmailAskUser.yml",
                "fromversion": "4.0.0"
            }
        },
        {
            "EmailAskUser": {
                "name": "EmailAskUser",
                "file_path": "Scripts/script-EmailAskUser_ToV3.6.0.yml",
                "toversion": "3.6.0",
                "fromversion": "3.5.0"
            }
        },
        {
            "EmailAskUserResponse": {
                "name": "EmailAskUserResponse",
                "file_path": "Scripts/script-EmailAskUserResponse.yml"
            }
        },
        {
            "EmailDomainBlacklist": {
                "name": "EmailDomainBlacklist",
                "file_path": "Scripts/EmailDomainBlacklist/EmailDomainBlacklist.yml",
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "EmailDomainSquattingReputation": {
                "name": "EmailDomainSquattingReputation",
                "file_path": "Scripts/script-EmailDomainSquattingReputation.yml"
            }
        },
        {
            "EmailDomainWhitelist": {
                "name": "EmailDomainWhitelist",
                "file_path": "Scripts/EmailDomainWhitelist/EmailDomainWhitelist.yml",
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "emailFieldTriggered": {
                "name": "emailFieldTriggered",
                "file_path": "Scripts/script-emailFieldTriggered.yml"
            }
        },
        {
            "EmailReputation": {
                "name": "EmailReputation",
                "file_path": "Scripts/script-EmailReputation.yml",
                "script_executions": [
                    "email"
                ]
            }
        },
        {
            "EncodeToAscii": {
                "name": "EncodeToAscii",
                "file_path": "Scripts/script-EncodeToAscii.yml"
            }
        },
        {
            "EntryWidgetNumberHostsXDR": {
                "name": "EntryWidgetNumberHostsXDR",
                "file_path": "Packs/CortexXDR/Scripts/EntryWidgetNumberHostsXDR/EntryWidgetNumberHostsXDR.yml",
                "fromversion": "5.0.0",
                "tests": [
                    "No test - no need to test widget"
                ],
                "pack": "CortexXDR"
            }
        },
        {
            "EntryWidgetNumberUsersXDR": {
                "name": "EntryWidgetNumberUsersXDR",
                "file_path": "Packs/CortexXDR/Scripts/EntryWidgetNumberUsersXDR/EntryWidgetNumberUsersXDR.yml",
                "fromversion": "5.0.0",
                "tests": [
                    "No test - no need to test widget"
                ],
                "pack": "CortexXDR"
            }
        },
        {
            "EntryWidgetPieAlertsXDR": {
                "name": "EntryWidgetPieAlertsXDR",
                "file_path": "Packs/CortexXDR/Scripts/EntryWidgetPieAlertsXDR/EntryWidgetPieAlertsXDR.yml",
                "fromversion": "5.0.0",
                "tests": [
                    "No test - no need to test widget"
                ],
                "pack": "CortexXDR"
            }
        },
        {
            "EPOCheckLatestDAT": {
                "name": "EPOCheckLatestDAT",
                "file_path": "Scripts/script-EPOCheckLatestDAT.yml",
                "deprecated": true
            }
        },
        {
            "EPODetermineRepository": {
                "name": "EPODetermineRepository",
                "file_path": "Scripts/script-EPODetermineRepository.yml",
                "deprecated": true
            }
        },
        {
            "EPOFindSystem": {
                "name": "EPOFindSystem",
                "file_path": "Scripts/script-EPOFindSystem.yml",
                "depends_on": [
                    "epo-command"
                ]
            }
        },
        {
            "EPORepoList": {
                "name": "EPORepoList",
                "file_path": "Scripts/script-EPORepoList.yml",
                "deprecated": true,
                "depends_on": [
                    "epo-command"
                ]
            }
        },
        {
            "EPORepositoryComplianceCheck": {
                "name": "EPORepositoryComplianceCheck",
                "file_path": "Scripts/script-EPORepositoryComplianceCheck.yml",
                "deprecated": true,
                "depends_on": [
                    "epo-command"
                ]
            }
        },
        {
            "EPORetrieveCurrentDATVersion": {
                "name": "EPORetrieveCurrentDATVersion",
                "file_path": "Scripts/script-EPORetrieveCurrentDATVersion.yml",
                "deprecated": true,
                "depends_on": [
                    "epo-command"
                ]
            }
        },
        {
            "EPOUpdateEndpoints": {
                "name": "EPOUpdateEndpoints",
                "file_path": "Scripts/script-EPOUpdateEndpoints.yml",
                "deprecated": true,
                "depends_on": [
                    "epo-command"
                ]
            }
        },
        {
            "EPOUpdateRepository": {
                "name": "EPOUpdateRepository",
                "file_path": "Scripts/script-EPOUpdateRepository.yml",
                "deprecated": true,
                "depends_on": [
                    "epo-command"
                ]
            }
        },
        {
            "EsmExample": {
                "name": "EsmExample",
                "file_path": "Scripts/script-EsmExample.yml",
                "depends_on": [
                    "search"
                ],
                "command_to_integration": {
                    "search": "esm"
                }
            }
        },
        {
            "ExampleJSScript": {
                "name": "ExampleJSScript",
                "file_path": "Scripts/script-ExampleJSScript.yml"
            }
        },
        {
            "ExchangeAssignRole": {
                "name": "ExchangeAssignRole",
                "file_path": "Scripts/script-ExchangeAssignRole.yml"
            }
        },
        {
            "ExchangeDeleteIDsFromContext": {
                "name": "ExchangeDeleteIDsFromContext",
                "file_path": "Scripts/script-ExchangeDeleteIDsFromContext.yml",
                "deprecated": true,
                "depends_on": [
                    "ews-delete-items"
                ]
            }
        },
        {
            "ExchangeDeleteMail": {
                "name": "ExchangeDeleteMail",
                "file_path": "Scripts/script-ExchangeDeleteMail.yml"
            }
        },
        {
            "ExchangeSearch": {
                "name": "ExchangeSearch",
                "file_path": "Scripts/script-ExchangeSearch.yml",
                "deprecated": true,
                "depends_on": [
                    "ews-search-mailbox"
                ]
            }
        },
        {
            "ExchangeSearchMailbox": {
                "name": "ExchangeSearchMailbox",
                "file_path": "Scripts/script-ExchangeSearchMailbox.yml"
            }
        },
        {
            "ExecuteCommandGeneric": {
                "name": "ExecuteCommandGeneric",
                "file_path": "TestPlaybooks/script-ExecuteCommandGeneric.yml"
            }
        },
        {
            "ExifRead": {
                "name": "ExifRead",
                "file_path": "Scripts/script-ExifRead.yml"
            }
        },
        {
            "Exists": {
                "name": "Exists",
                "file_path": "Scripts/script-Exists.yml"
            }
        },
        {
            "ExpanseParseRawIncident": {
                "name": "ExpanseParseRawIncident",
                "file_path": "Packs/Expanse/Scripts/ExpanseParseRawIncident/ExpanseParseRawIncident.yml",
                "fromversion": "4.5.0",
                "pack": "Expanse"
            }
        },
        {
            "ExportMLModel": {
                "name": "ExportMLModel",
                "file_path": "Scripts/ExportMLModel/ExportMLModel.yml",
                "script_executions": [
                    "getMLModel"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "ExportToCSV": {
                "name": "ExportToCSV",
                "file_path": "Scripts/script-ExportToCSV.yml"
            }
        },
        {
            "ExposeIncidentOwner": {
                "name": "ExposeIncidentOwner",
                "file_path": "Scripts/script-ExposeIncidentOwner.yml"
            }
        },
        {
            "ExposeList": {
                "name": "ExposeList",
                "file_path": "Scripts/script-ExposeList.yml",
                "deprecated": true
            }
        },
        {
            "ExposeModules": {
                "name": "ExposeModules",
                "file_path": "Scripts/script-ExposeModules.yml",
                "deprecated": true
            }
        },
        {
            "ExposeUsers": {
                "name": "ExposeUsers",
                "file_path": "Scripts/script-ExposeUsers.yml",
                "deprecated": true
            }
        },
        {
            "ExtractDomain": {
                "name": "ExtractDomain",
                "file_path": "Scripts/script-ExtractDomainOld.yml",
                "toversion": "3.0.0"
            }
        },
        {
            "ExtractDomain": {
                "name": "ExtractDomain",
                "file_path": "Scripts/script-ExtractDomain.yml",
                "deprecated": true
            }
        },
        {
            "ExtractDomainAndFQDNFromUrlAndEmail": {
                "name": "ExtractDomainAndFQDNFromUrlAndEmail",
                "file_path": "Scripts/ExtractDomainAndFQDNFromUrlAndEmail/ExtractDomainAndFQDNFromUrlAndEmail.yml",
                "fromversion": "5.5.0",
                "tests": [
                    "ExtractDomainAndFQDNFromUrlAndEmail-Test"
                ]
            }
        },
        {
            "ExtractDomainFromURL": {
                "name": "ExtractDomainFromURL",
                "file_path": "Scripts/script-ExtractDomainFromURL.yml",
                "deprecated": true
            }
        },
        {
            "ExtractDomainFromUrlAndEmail": {
                "name": "ExtractDomainFromUrlAndEmail",
                "file_path": "Scripts/ExtractDomainFromUrlFormat/ExtractDomainFromUrlFormat.yml",
                "tests": [
                    "ExtractDomainFromEmailTest",
                    "ExtractDomainFromUrlAndEmail-Test"
                ]
            }
        },
        {
            "ExtractEmail": {
                "name": "ExtractEmail",
                "file_path": "Scripts/script-ExtractEmail.yml",
                "deprecated": true
            }
        },
        {
            "ExtractFQDNFromUrlAndEmail": {
                "name": "ExtractFQDNFromUrlAndEmail",
                "file_path": "Scripts/ExtractFQDNFromUrlAndEmail/ExtractFQDNFromUrlAndEmail.yml",
                "tests": [
                    "ExtractFQDNFromUrlAndEmail-Test"
                ]
            }
        },
        {
            "ExtractHash": {
                "name": "ExtractHash",
                "file_path": "Scripts/script-ExtractHash.yml",
                "deprecated": true
            }
        },
        {
            "ExtractHTMLTables": {
                "name": "ExtractHTMLTables",
                "file_path": "Scripts/script-ExtractHTMLTables.yml"
            }
        },
        {
            "ExtractIndicatorsFromTextFile": {
                "name": "ExtractIndicatorsFromTextFile",
                "file_path": "Scripts/ExtractIndicatorsFromTextFile/ExtractIndicatorsFromTextFile.yml",
                "fromversion": "4.1.0",
                "script_executions": [
                    "extractIndicators",
                    "getFilePath"
                ],
                "tests": [
                    "Extract Indicators From File - test"
                ]
            }
        },
        {
            "ExtractIndicatorsFromTextFile": {
                "name": "ExtractIndicatorsFromTextFile",
                "file_path": "Scripts/script-ExtractIndicatorsFromTextFile_4_0.yml",
                "toversion": "4.0.9",
                "fromversion": "3.6.0",
                "script_executions": [
                    "ExtractDomain",
                    "ExtractEmail",
                    "ExtractHash",
                    "ExtractIP",
                    "ExtractURL",
                    "getFilePath"
                ],
                "tests": [
                    "Extract Indicators From File - test"
                ]
            }
        },
        {
            "ExtractIndicatorsFromWordFile": {
                "name": "ExtractIndicatorsFromWordFile",
                "file_path": "Scripts/ExtractIndicatorsFromWordFile/ExtractIndicatorsFromWordFile.yml",
                "fromversion": "4.1.0",
                "script_executions": [
                    "extractIndicators",
                    "getFilePath"
                ]
            }
        },
        {
            "ExtractIP": {
                "name": "ExtractIP",
                "file_path": "Scripts/script-ExtractIP.yml",
                "deprecated": true
            }
        },
        {
            "ExtractURL": {
                "name": "ExtractURL",
                "file_path": "Scripts/script-ExtractURL.yml",
                "deprecated": true
            }
        },
        {
            "ExtraHopTrackIncidents": {
                "name": "ExtraHopTrackIncidents",
                "file_path": "Scripts/ExtraHopTrackIncidents/ExtraHopTrackIncidents.yml",
                "depends_on": [
                    "extrahop-track-ticket"
                ],
                "command_to_integration": {
                    "extrahop-track-ticket": "ExtraHop v2"
                },
                "tests": [
                    "ExtraHop_v2-Test"
                ]
            }
        },
        {
            "f99a85a6-c572-4c3a-8afd-5b4ac539000a": {
                "name": "WhileNotExistLoop",
                "file_path": "Scripts/script-WhileNotExistLoop.yml",
                "deprecated": true
            }
        },
        {
            "FailedInstances": {
                "name": "FailedInstances",
                "file_path": "Scripts/script-FailedInstances.yml",
                "fromversion": "4.0.0"
            }
        },
        {
            "FetchFileD2": {
                "name": "FetchFileD2",
                "file_path": "Scripts/script-FetchFileD2.yml"
            }
        },
        {
            "FetchFromInstance": {
                "name": "FetchFromInstance",
                "file_path": "Scripts/script-FetchFromInstance.yml",
                "fromversion": "4.0.0",
                "deprecated": true,
                "tests": [
                    "No test - cannot create a dummy integration inorder to test that"
                ]
            }
        },
        {
            "FetchIndicatorsFromFile": {
                "name": "FetchIndicatorsFromFile",
                "file_path": "Packs/FetchIndicatorsFromFile/Scripts/FetchIndicatorsFromFile/FetchIndicatorsFromFile.yml",
                "fromversion": "5.5.0",
                "script_executions": [
                    "createNewIndicator"
                ],
                "pack": "FetchIndicatorsFromFile"
            }
        },
        {
            "file_command_enrichment_test_script_helper": {
                "name": "file_command_enrichment_test_script_helper",
                "file_path": "TestPlaybooks/script-file_command_enrichment_test_script_helper.yml"
            }
        },
        {
            "FileCreateAndUpload": {
                "name": "FileCreateAndUpload",
                "file_path": "Scripts/script-FileCreateAndUpload.yml"
            }
        },
        {
            "FileReputation": {
                "name": "FileReputation",
                "file_path": "Scripts/script-FileReputation.yml",
                "script_executions": [
                    "file"
                ]
            }
        },
        {
            "FileToBase64List": {
                "name": "FileToBase64List",
                "file_path": "Scripts/FileToBase64List/FileToBase64List.yml",
                "fromversion": "4.1.0",
                "script_executions": [
                    "createList"
                ],
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "FilterByList": {
                "name": "FilterByList",
                "file_path": "Scripts/FilterByList/FilterByList.yml",
                "script_executions": [
                    "getList"
                ],
                "tests": [
                    "FilterByList - Test"
                ]
            }
        },
        {
            "findIncidentsWithIndicator": {
                "name": "findIncidentsWithIndicator",
                "file_path": "Scripts/script-findIncidentsWithIndicator.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "FindSimilarIncidents": {
                "name": "FindSimilarIncidents",
                "file_path": "Scripts/FindSimilarIncidents/FindSimilarIncidents.yml",
                "toversion": "4.1.0",
                "script_executions": [
                    "getContext",
                    "getIncidents"
                ],
                "tests": [
                    "dedup_-_generic_-_test"
                ]
            }
        },
        {
            "FindSimilarIncidents": {
                "name": "FindSimilarIncidents",
                "file_path": "Scripts/FindSimilarIncidentsV2/FindSimilarIncidentsV2.yml",
                "fromversion": "4.5.0",
                "script_executions": [
                    "getContext",
                    "getIncidents"
                ],
                "tests": [
                    "dedup_-_generic_-_test"
                ]
            }
        },
        {
            "FindSimilarIncidentsByText": {
                "name": "FindSimilarIncidentsByText",
                "file_path": "Scripts/FindSimilarIncidentsByText/FindSimilarIncidentsByText.yml",
                "script_executions": [
                    "WordTokenizerNLP",
                    "getIncidents"
                ],
                "tests": [
                    "dedup_-_generic_-_test"
                ]
            }
        },
        {
            "FireEyeDetonateFile": {
                "name": "FireEyeDetonateFile",
                "file_path": "Scripts/script-FireEyeDetonateFile.yml",
                "depends_on": [
                    "fe-submit",
                    "fe-submit-result",
                    "fe-submit-status"
                ],
                "script_executions": [
                    "IsIntegrationAvailable"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "FirstArrayElement": {
                "name": "FirstArrayElement",
                "file_path": "Scripts/FirstArrayElement/FirstArrayElement.yml",
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "FormattedDateToEpoch": {
                "name": "FormattedDateToEpoch",
                "file_path": "Scripts/FormattedDateToEpoch/FormattedDateToEpoch.yml",
                "tests": [
                    "FormattedDateToEpochTest"
                ]
            }
        },
        {
            "FormattingPerformance": {
                "name": "FormattingPerformance",
                "file_path": "TestPlaybooks/script-FormattingPerformance.yml",
                "script_executions": [
                    "extractIndicators"
                ]
            }
        },
        {
            "FPDeleteRule": {
                "name": "FPDeleteRule",
                "file_path": "Scripts/script-FPDeleteRule.yml",
                "depends_on": [
                    "ssh"
                ],
                "script_executions": [
                    "ssh"
                ]
            }
        },
        {
            "FPSetRule": {
                "name": "FPSetRule",
                "file_path": "Scripts/script-FPSetRule.yml",
                "depends_on": [
                    "ssh"
                ],
                "script_executions": [
                    "ssh"
                ]
            }
        },
        {
            "GDPRContactAuthorities": {
                "name": "GDPRContactAuthorities",
                "file_path": "Scripts/GDPRContactAuthorities/GDPRContactAuthorities.yml",
                "tests": [
                    "GDPRContactAuthorities Test"
                ]
            }
        },
        {
            "GenerateEmail": {
                "name": "GenerateEmail",
                "file_path": "TestPlaybooks/script-GenerateEmail.yml"
            }
        },
        {
            "GenerateImageFileEntry": {
                "name": "GenerateImageFileEntry",
                "file_path": "TestPlaybooks/script-GenerateImageFileEntry.yml"
            }
        },
        {
            "GenerateInvestigationSummaryReport": {
                "name": "GenerateInvestigationSummaryReport",
                "file_path": "Scripts/script-generateSummaryReport.yml",
                "fromversion": "3.5.0",
                "tests": [
                    "No test - No need"
                ]
            }
        },
        {
            "GenerateIP": {
                "name": "GenerateIP",
                "file_path": "TestPlaybooks/script-GenerateIP.yml"
            }
        },
        {
            "GeneratePassword": {
                "name": "GeneratePassword",
                "file_path": "Scripts/script-GeneratePassword.yml"
            }
        },
        {
            "GenerateRandomString": {
                "name": "GenerateRandomString",
                "file_path": "Scripts/script-GenerateRandomString.yml",
                "tests": [
                    "RandomStringGenerateTest"
                ]
            }
        },
        {
            "GenerateSummaryReports": {
                "name": "GenerateSummaryReports",
                "file_path": "Scripts/script-GenerateSummaryReports.yml",
                "fromversion": "4.1.0",
                "tests": [
                    "Send Investigation Summary Reports - Test"
                ]
            }
        },
        {
            "GenerateUUID": {
                "name": "GenerateUUID",
                "file_path": "TestPlaybooks/script-GenerateUUID.yml"
            }
        },
        {
            "GenericPollingScheduledTask": {
                "name": "GenericPollingScheduledTask",
                "file_path": "Scripts/script-GenericPollingScheduledTask.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "GetByIncidentId": {
                "name": "GetByIncidentId",
                "file_path": "Scripts/GetByIncidentId/GetByIncidentId.yml",
                "script_executions": [
                    "getContext"
                ],
                "tests": [
                    "No test - tested with unittest"
                ]
            }
        },
        {
            "GetContextValue": {
                "name": "GetContextValue",
                "file_path": "Scripts/script-GetContextValue.yml",
                "deprecated": true
            }
        },
        {
            "GetDockerImageLatestTag": {
                "name": "GetDockerImageLatestTag",
                "file_path": "Scripts/GetDockerImageLatestTag/GetDockerImageLatestTag.yml",
                "tests": [
                    "No test - no testplaybook, but unit tests exist"
                ]
            }
        },
        {
            "GetDuplicatesMl": {
                "name": "GetDuplicatesMl",
                "file_path": "Scripts/script-GetDuplicatesMl.yml",
                "fromversion": "3.5.0",
                "deprecated": true,
                "script_executions": [
                    "findIndicators",
                    "getIncidents"
                ]
            }
        },
        {
            "GetDuplicatesMlv2": {
                "name": "GetDuplicatesMlv2",
                "file_path": "Scripts/GetDuplicatesMlv2/GetDuplicatesMlv2.yml",
                "fromversion": "3.5.0",
                "script_executions": [
                    "findIndicators",
                    "getIncidents"
                ],
                "tests": [
                    "dedup_-_generic_-_test"
                ]
            }
        },
        {
            "GetEWSFolder": {
                "name": "GetEWSFolder",
                "file_path": "Scripts/GetEWSFolder/GetEWSFolder.yml",
                "tests": [
                    "Get EWS Folder Test"
                ]
            }
        },
        {
            "GetFieldsByIncidentType": {
                "name": "GetFieldsByIncidentType",
                "file_path": "Scripts/GetFieldsByIncidentType/GetFieldsByIncidentType.yml",
                "depends_on": [
                    "demisto-api-get"
                ],
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "GetFirstObject": {
                "name": "GetFirstObject",
                "file_path": "TestPlaybooks/script-GetFirstObject.yml"
            }
        },
        {
            "GetIncidentsByQuery": {
                "name": "GetIncidentsByQuery",
                "file_path": "Scripts/GetIncidentsByQuery/GetIncidentsByQuery.yml",
                "script_executions": [
                    "getContext",
                    "getIncidents"
                ],
                "tests": [
                    "Create Phishing Classifier V2 ML Test"
                ]
            }
        },
        {
            "GetIndicator": {
                "name": "GetIndicator",
                "file_path": "TestPlaybooks/script-GetIndicator.yml",
                "script_executions": [
                    "getIndicator"
                ]
            }
        },
        {
            "GetIndicatorDBotScore": {
                "name": "GetIndicatorDBotScore",
                "file_path": "Scripts/GetIndicatorDBotScore/GetIndicatorDBotScore.yml",
                "fromversion": "3.5.0",
                "script_executions": [
                    "getIndicator"
                ],
                "tests": [
                    "GetIndicatorDBotScore Test"
                ]
            }
        },
        {
            "GetLicenseID": {
                "name": "GetLicenseID",
                "file_path": "Packs/GetLicenseID/Scripts/GetLicenseID/GetLicenseID.yml",
                "pack": "GetLicenseID"
            }
        },
        {
            "getMlFeatures": {
                "name": "getMlFeatures",
                "file_path": "Scripts/script-getMlFeatures.yml",
                "fromversion": "3.5.0",
                "script_executions": [
                    "findIndicators",
                    "getIncidents"
                ]
            }
        },
        {
            "GetMLModelEvaluation": {
                "name": "GetMLModelEvaluation",
                "file_path": "Scripts/GetMLModelEvaluation/GetMLModelEvaluation.yml",
                "fromversion": "4.5.0",
                "tests": [
                    "Create Phishing Classifier V2 ML Test"
                ]
            }
        },
        {
            "GetServerURL": {
                "name": "GetServerURL",
                "file_path": "Packs/GetServerURL/Scripts/GetServerURL/GetServerURL.yml",
                "tests": [
                    "no test"
                ],
                "pack": "GetServerURL"
            }
        },
        {
            "GetStringsDistance": {
                "name": "GetStringsDistance",
                "file_path": "Scripts/script-GetStringsDistance.yml"
            }
        },
        {
            "GetTime": {
                "name": "GetTime",
                "file_path": "Scripts/script-GetTime.yml",
                "tests": [
                    "GetTime-Test",
                    "GetTime-ObjectVsStringTest"
                ]
            }
        },
        {
            "GetValuesOfMultipleFields": {
                "name": "GetValuesOfMultipleFields",
                "file_path": "Scripts/GetValuesOfMultipleFIelds/GetValuesOfMultipleFIelds.yml",
                "fromversion": "4.5.0",
                "tests": [
                    "GetValuesOfMultipleFIelds Test"
                ]
            }
        },
        {
            "GoogleappsGetUser": {
                "name": "GoogleappsGetUser",
                "file_path": "Scripts/script-GoogleappsGetUser.yml",
                "deprecated": true,
                "depends_on": [
                    "googleapps-get-user"
                ]
            }
        },
        {
            "GoogleappsGetUserRoles": {
                "name": "GoogleappsGetUserRoles",
                "file_path": "Scripts/script-GoogleappsGetUserRoles.yml",
                "deprecated": true,
                "depends_on": [
                    "googleapps-get-user-roles"
                ]
            }
        },
        {
            "GoogleappsGmailGetMail": {
                "name": "GoogleappsGmailGetMail",
                "file_path": "Scripts/script-GoogleappsGmailGetMail.yml",
                "deprecated": true,
                "depends_on": [
                    "googleapps-gmail-get-mail"
                ]
            }
        },
        {
            "GoogleappsGmailSearch": {
                "name": "GoogleappsGmailSearch",
                "file_path": "Scripts/script-GoogleappsGmailSearch.yml",
                "deprecated": true,
                "depends_on": [
                    "googleapps-gmail-search"
                ]
            }
        },
        {
            "GoogleappsListUsers": {
                "name": "GoogleappsListUsers",
                "file_path": "Scripts/script-GoogleappsListUsers.yml",
                "deprecated": true,
                "depends_on": [
                    "googleapps-list-users"
                ]
            }
        },
        {
            "GoogleappsRevokeUserRole": {
                "name": "GoogleappsRevokeUserRole",
                "file_path": "Scripts/script-GoogleappsRevokeUserRole.yml",
                "depends_on": [
                    "googleapps-revoke-user-role"
                ]
            }
        },
        {
            "GoogleAuthURL": {
                "name": "GoogleAuthURL",
                "file_path": "Scripts/script-GoogleAuthURL.yml"
            }
        },
        {
            "GrrGetFiles": {
                "name": "GrrGetFiles",
                "file_path": "Scripts/script-GrrGetFiles.yml",
                "depends_on": [
                    "grr_get_files"
                ],
                "script_executions": [
                    "grr_get_files"
                ]
            }
        },
        {
            "GrrGetFlows": {
                "name": "GrrGetFlows",
                "file_path": "Scripts/script-GrrGetFlows.yml",
                "depends_on": [
                    "grr_get_flows"
                ],
                "script_executions": [
                    "grr_get_flows"
                ]
            }
        },
        {
            "GrrGetHunt": {
                "name": "GrrGetHunt",
                "file_path": "Scripts/script-GrrGetHunt.yml",
                "depends_on": [
                    "grr_get_hunt"
                ],
                "script_executions": [
                    "grr_get_hunt"
                ]
            }
        },
        {
            "GrrGetHunts": {
                "name": "GrrGetHunts",
                "file_path": "Scripts/script-GrrGetHunts.yml",
                "depends_on": [
                    "grr_get_hunts"
                ],
                "script_executions": [
                    "grr_get_hunts"
                ]
            }
        },
        {
            "GrrSetFlows": {
                "name": "GrrSetFlows",
                "file_path": "Scripts/script-GrrSetFlows.yml",
                "depends_on": [
                    "grr_set_flows"
                ],
                "script_executions": [
                    "grr_set_flows"
                ]
            }
        },
        {
            "GrrSetHunts": {
                "name": "GrrSetHunts",
                "file_path": "Scripts/script-GrrSetHunts.yml",
                "depends_on": [
                    "grr_set_hunts"
                ],
                "script_executions": [
                    "grr_set_hunts"
                ]
            }
        },
        {
            "HelloWorldScript": {
                "name": "HelloWorldScript",
                "file_path": "Packs/HelloWorld/Scripts/HelloWorldScript/HelloWorldScript.yml",
                "pack": "HelloWorld"
            }
        },
        {
            "hideFieldsOnNewIncident": {
                "name": "hideFieldsOnNewIncident",
                "file_path": "Scripts/script-hideFieldsOnNewIncident.yml",
                "fromversion": "3.6.0"
            }
        },
        {
            "HighlightWords": {
                "name": "HighlightWords",
                "file_path": "Scripts/script-HighlightWords.yml",
                "tests": [
                    "HighlightWords_Test"
                ]
            }
        },
        {
            "HTMLDocsAutomation": {
                "name": "HTMLDocsAutomation",
                "file_path": "Scripts/HTMLDocsAutomation/HTMLDocsAutomation.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "http": {
                "name": "http",
                "file_path": "Scripts/script-http-old.yml",
                "toversion": "3.1.0"
            }
        },
        {
            "http": {
                "name": "http",
                "file_path": "Scripts/script-http.yml",
                "fromversion": "3.5.0"
            }
        },
        {
            "HTTPFeedApiModule": {
                "name": "HTTPFeedApiModule",
                "file_path": "Packs/ApiModules/Scripts/HTTPFeedApiModule/HTTPFeedApiModule.yml",
                "pack": "ApiModules"
            }
        },
        {
            "HTTPListRedirects": {
                "name": "HTTPListRedirects",
                "file_path": "Scripts/HTTPListRedirects/HTTPListRedirects.yml"
            }
        },
        {
            "IdentifyAttachedEmail": {
                "name": "IdentifyAttachedEmail",
                "file_path": "Scripts/IdentifyAttachedEmail/IdentifyAttachedEmail.yml",
                "script_executions": [
                    "getEntries",
                    "getEntry"
                ],
                "tests": [
                    "process_email_-_generic_-_test",
                    "Phishing v2 Test - Inline",
                    "Phishing v2 Test - Attachment"
                ]
            }
        },
        {
            "ImportMLModel": {
                "name": "ImportMLModel",
                "file_path": "Scripts/ImportMLModel/ImportMLModel.yml",
                "script_executions": [
                    "createMLModel",
                    "evaluateMLModel"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "ImpSfListEndpoints": {
                "name": "ImpSfListEndpoints",
                "file_path": "Scripts/script-ImpSfListEndpoints.yml",
                "depends_on": [
                    "imp-sf-list-endpoints"
                ]
            }
        },
        {
            "ImpSfRevokeUnaccessedDevices": {
                "name": "ImpSfRevokeUnaccessedDevices",
                "file_path": "Scripts/script-ImpSfRevokeUnaccessedDevices.yml",
                "depends_on": [
                    "ImpSfListEndpoints",
                    "ImpSfSetEndpointStatus"
                ],
                "script_executions": [
                    "ImpSfListEndpoints",
                    "ImpSfSetEndpointStatus",
                    "SendEmail"
                ],
                "tests": [
                    "No test - old script"
                ]
            }
        },
        {
            "ImpSfScheduleTask": {
                "name": "ImpSfScheduleTask",
                "file_path": "Scripts/script-ImpSfScheduleTask.yml",
                "depends_on": [
                    "scheduleEntry",
                    "ImpSfRevokeUnaccessedDevices"
                ],
                "script_executions": [
                    "scheduleEntry"
                ]
            }
        },
        {
            "ImpSfSetEndpointStatus": {
                "name": "ImpSfSetEndpointStatus",
                "file_path": "Scripts/script-ImpSfSetEndpointStatus.yml",
                "depends_on": [
                    "imp-sf-set-endpoint-status"
                ]
            }
        },
        {
            "IncapGetAppInfo": {
                "name": "IncapGetAppInfo",
                "file_path": "Scripts/script-IncapGetAppInfo.yml",
                "depends_on": [
                    "incap-get-app-info"
                ]
            }
        },
        {
            "IncapGetDomainApproverEmail": {
                "name": "IncapGetDomainApproverEmail",
                "file_path": "Scripts/script-IncapGetDomainApproverEmail.yml",
                "depends_on": [
                    "incap-get-domain-approver-email"
                ]
            }
        },
        {
            "IncapListSites": {
                "name": "IncapListSites",
                "file_path": "Scripts/script-IncapListSites.yml",
                "depends_on": [
                    "incap-list-sites"
                ]
            }
        },
        {
            "IncapScheduleTask": {
                "name": "IncapScheduleTask",
                "file_path": "Scripts/script-IncapScheduleTask.yml",
                "depends_on": [
                    "scheduleEntry",
                    "IncapWhitelistCompliance"
                ],
                "script_executions": [
                    "scheduleEntry"
                ]
            }
        },
        {
            "IncapWhitelistCompliance": {
                "name": "IncapWhitelistCompliance",
                "file_path": "Scripts/script-IncapWhitelistCompliance.yml",
                "depends_on": [
                    "incap-list-sites",
                    "SendEmail",
                    "RemoteExec",
                    "incap-get-domain-approver-email"
                ],
                "script_executions": [
                    "RemoteExec",
                    "SendEmail"
                ],
                "tests": [
                    "No test - old script"
                ]
            }
        },
        {
            "IncidentAddSystem": {
                "name": "IncidentAddSystem",
                "file_path": "Scripts/script-IncidentAddSystem.yml",
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "IncidentFields": {
                "name": "IncidentFields",
                "file_path": "Scripts/IncidentFields/IncidentFields.yml",
                "depends_on": [
                    "demisto-api-get"
                ],
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "IncidentSet": {
                "name": "IncidentSet",
                "file_path": "Scripts/script-IncidentSet.yml",
                "fromversion": "3.5.1",
                "deprecated": true,
                "script_executions": [
                    "setIncident",
                    "setOwner",
                    "setPlaybook",
                    "setStage"
                ]
            }
        },
        {
            "IncidentSet": {
                "name": "IncidentSet",
                "file_path": "Scripts/script-IncidentSet_3.5.0.yml",
                "toversion": "3.5.0",
                "script_executions": [
                    "setIncident",
                    "setOwner",
                    "setPlaybook",
                    "setStage"
                ]
            }
        },
        {
            "IncidentToContext": {
                "name": "IncidentToContext",
                "file_path": "Scripts/script-IncidentToContext.yml",
                "deprecated": true
            }
        },
        {
            "IndicatorMaliciousRatioCalculation": {
                "name": "IndicatorMaliciousRatioCalculation",
                "file_path": "Scripts/script-IndicatorMaliciousRatioCalculation.yml",
                "fromversion": "3.5.0",
                "script_executions": [
                    "findIndicators",
                    "getIncidents"
                ]
            }
        },
        {
            "IngestCSV": {
                "name": "IngestCSV",
                "file_path": "Scripts/script-IngestCSV.yml",
                "deprecated": true,
                "script_executions": [
                    "getEntries",
                    "getFilePath"
                ]
            }
        },
        {
            "InRange": {
                "name": "InRange",
                "file_path": "Scripts/script-InRange.yml"
            }
        },
        {
            "IntezerRunScanner": {
                "name": "IntezerRunScanner",
                "file_path": "Scripts/script-IntezerRunScanner.yml",
                "tests": [
                    "no test"
                ]
            }
        },
        {
            "IntezerScanHost": {
                "name": "IntezerScanHost",
                "file_path": "Scripts/IntezerScanHost/IntezerScanHost.yml",
                "script_executions": [
                    "IntezerRunScanner",
                    "createNewIndicator"
                ],
                "tests": [
                    "no test (Impossible to mock test)"
                ]
            }
        },
        {
            "InviteUser": {
                "name": "InviteUser",
                "file_path": "Scripts/script-InviteUser.yml",
                "deprecated": true,
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "IPExtract": {
                "name": "IPExtract",
                "file_path": "Scripts/script-IPExtract.yml",
                "deprecated": true
            }
        },
        {
            "IPInfoQuery": {
                "name": "IPInfoQuery",
                "file_path": "Scripts/script-IPInfoQuery.yml",
                "deprecated": true,
                "depends_on": [
                    "ipinfo_field"
                ],
                "script_executions": [
                    "ip",
                    "ipinfo_field"
                ]
            }
        },
        {
            "IPReputation": {
                "name": "IPReputation",
                "file_path": "Scripts/script-IPReputation.yml",
                "script_executions": [
                    "ip"
                ]
            }
        },
        {
            "IPToHost": {
                "name": "IPToHost",
                "file_path": "Scripts/script-IPToHost.yml"
            }
        },
        {
            "IPv4Blacklist": {
                "name": "IPv4Blacklist",
                "file_path": "Scripts/IPv4Blacklist/IPv4Blacklist.yml",
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "IPv4Whitelist": {
                "name": "IPv4Whitelist",
                "file_path": "Scripts/IPv4Whitelist/IPv4Whitelist.yml",
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "IsContextSet": {
                "name": "IsContextSet",
                "file_path": "Scripts/script-IsContextSet.yml",
                "deprecated": true
            }
        },
        {
            "IsEmailAddressInternal": {
                "name": "IsEmailAddressInternal",
                "file_path": "Scripts/script-IsEmailAddressInternal.yml"
            }
        },
        {
            "isError": {
                "name": "isError",
                "file_path": "Scripts/script-isError.yml"
            }
        },
        {
            "IsGreaterThan": {
                "name": "IsGreaterThan",
                "file_path": "Scripts/script-IsGreaterThan.yml"
            }
        },
        {
            "IsInCidrRanges": {
                "name": "IsInCidrRanges",
                "file_path": "Scripts/IsInCidrRanges/IsInCidrRanges.yml",
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "IsIntegrationAvailable": {
                "name": "IsIntegrationAvailable",
                "file_path": "Scripts/script-IsIntegrationAvailable.yml"
            }
        },
        {
            "IsInternalHostName": {
                "name": "IsInternalHostName",
                "file_path": "Scripts/IsInternalHostName/IsInternalHostName.yml",
                "fromversion": "4.5.0",
                "tests": [
                    "IsInternalHostName Test"
                ]
            }
        },
        {
            "IsIPInRanges": {
                "name": "IsIPInRanges",
                "file_path": "Scripts/script-IsIPInRanges.yml",
                "tests": [
                    "IP Enrichment - Generic v2 - Test"
                ]
            }
        },
        {
            "IsIPInSubnet": {
                "name": "IsIPInSubnet",
                "file_path": "Scripts/script-IsIPInSubnet.yml",
                "deprecated": true
            }
        },
        {
            "IsListExist": {
                "name": "IsListExist",
                "file_path": "Scripts/script-IsListExist.yml",
                "script_executions": [
                    "getList"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "IsMaliciousIndicatorFound": {
                "name": "IsMaliciousIndicatorFound",
                "file_path": "Scripts/script-IsMaliciousIndicatorFound.yml"
            }
        },
        {
            "IsNotInCidrRanges": {
                "name": "IsNotInCidrRanges",
                "file_path": "Scripts/IsNotInCidrRanges/IsNotInCidrRanges.yml",
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "IsRFC1918Address": {
                "name": "IsRFC1918Address",
                "file_path": "Scripts/IsRFC1918Address/IsRFC1918Address.yml",
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "IsTrue": {
                "name": "IsTrue",
                "file_path": "Scripts/script-IsTrue.yml"
            }
        },
        {
            "IsValueInArray": {
                "name": "IsValueInArray",
                "file_path": "Scripts/script-IsValueInArray.yml"
            }
        },
        {
            "JiraCreateIssue": {
                "name": "JiraCreateIssue",
                "file_path": "Scripts/script-JiraCreateIssue.yml",
                "deprecated": true,
                "depends_on": [
                    "jira-create-issue"
                ]
            }
        },
        {
            "JiraCreateIssue-example": {
                "name": "JiraCreateIssue-example",
                "file_path": "Scripts/script-JiraCreaetIssueGeneric.yml",
                "depends_on": [
                    "jira-create-issue",
                    "jira-delete-issue"
                ],
                "tests": [
                    "JiraCreateIssue-example-test"
                ]
            }
        },
        {
            "JiraGetIssue": {
                "name": "JiraGetIssue",
                "file_path": "Scripts/script-JiraGetIssue.yml",
                "deprecated": true,
                "depends_on": [
                    "jira-get-issue"
                ]
            }
        },
        {
            "JiraIssueAddComment": {
                "name": "JiraIssueAddComment",
                "file_path": "Scripts/script-JiraIssueAddComment.yml",
                "deprecated": true,
                "depends_on": [
                    "jira-issue-add-comment"
                ]
            }
        },
        {
            "JiraIssueAddLink": {
                "name": "JiraIssueAddLink",
                "file_path": "Scripts/script-JiraIssueAddLink.yml",
                "deprecated": true,
                "depends_on": [
                    "jira-issue-add-link"
                ]
            }
        },
        {
            "JiraIssueQuery": {
                "name": "JiraIssueQuery",
                "file_path": "Scripts/script-JiraIssueQuery.yml",
                "deprecated": true,
                "depends_on": [
                    "jira-issue-query"
                ]
            }
        },
        {
            "JiraIssueUploadFile": {
                "name": "JiraIssueUploadFile",
                "file_path": "Scripts/script-JiraIssueUploadFile.yml",
                "deprecated": true,
                "depends_on": [
                    "jira-issue-upload-file"
                ]
            }
        },
        {
            "JIRAPrintIssue": {
                "name": "JIRAPrintIssue",
                "file_path": "Scripts/script-JIRAPrintIssue.yml",
                "depends_on": [
                    "jira-get-issue"
                ]
            }
        },
        {
            "JoinIfSingleElementOnly": {
                "name": "JoinIfSingleElementOnly",
                "file_path": "Scripts/script-JoinIfSingleElementOnly.yml"
            }
        },
        {
            "JSONFeedApiModule": {
                "name": "JSONFeedApiModule",
                "file_path": "Packs/ApiModules/Scripts/JSONFeedApiModule/JSONFeedApiModule.yml",
                "pack": "ApiModules"
            }
        },
        {
            "JSONFileToCSV": {
                "name": "JSONFileToCSV",
                "file_path": "Scripts/JSONFileToCSV/JSONFileToCSV.yml",
                "tests": [
                    "JSONtoCSV-Test"
                ]
            }
        },
        {
            "JSONtoCSV": {
                "name": "JSONtoCSV",
                "file_path": "Scripts/script-JSONtoCSV.yml",
                "script_executions": [
                    "getEntry"
                ],
                "tests": [
                    "JSONtoCSV-Test"
                ]
            }
        },
        {
            "KeylightCreateIssue": {
                "name": "KeylightCreateIssue",
                "file_path": "Scripts/KeylightCreateRecord/KeylightCreateIssue.yml",
                "depends_on": [
                    "kl-get-component",
                    "kl-get-records"
                ],
                "command_to_integration": {
                    "kl-get-records": "Lockpath KeyLight v2",
                    "kl-get-component": "Lockpath KeyLight v2"
                }
            }
        },
        {
            "LanguageDetect": {
                "name": "LanguageDetect",
                "file_path": "Scripts/script-LanguageDetect.yml"
            }
        },
        {
            "LastArrayElement": {
                "name": "LastArrayElement",
                "file_path": "Scripts/LastArrayElement/LastArrayElement.yml",
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "LCMAcknowledgeHost": {
                "name": "LCMAcknowledgeHost",
                "file_path": "Scripts/script-LCMAcknowledgeHost.yml",
                "depends_on": [
                    "lcm-acknowledge-host"
                ],
                "script_executions": [
                    "LCMHosts"
                ]
            }
        },
        {
            "LCMDetectedEntities": {
                "name": "LCMDetectedEntities",
                "file_path": "Scripts/script-LCMDetectedEntities.yml",
                "depends_on": [
                    "lcm-entities"
                ]
            }
        },
        {
            "LCMDetectedIndicators": {
                "name": "LCMDetectedIndicators",
                "file_path": "Scripts/script-LCMDetectedIndicators.yml",
                "depends_on": [
                    "lcm-indicators"
                ]
            }
        },
        {
            "LCMHosts": {
                "name": "LCMHosts",
                "file_path": "Scripts/script-LCMHosts.yml"
            }
        },
        {
            "LCMIndicatorsForEntity": {
                "name": "LCMIndicatorsForEntity",
                "file_path": "Scripts/script-LCMIndicatorsForEntity.yml",
                "depends_on": [
                    "lcm-indicatorsforentity"
                ]
            }
        },
        {
            "LCMPathFinderScanHost": {
                "name": "LCMPathFinderScanHost",
                "file_path": "Scripts/script-LCMPathFinderScanHost.yml",
                "depends_on": [
                    "lcm-pathfinder-scan"
                ]
            }
        },
        {
            "LCMResolveHost": {
                "name": "LCMResolveHost",
                "file_path": "Scripts/script-LCMResolveHost.yml",
                "depends_on": [
                    "lcm-resolve-host"
                ]
            }
        },
        {
            "LCMSetHostComment": {
                "name": "LCMSetHostComment",
                "file_path": "Scripts/script-LCMSetHostComment.yml",
                "depends_on": [
                    "lcm-set-host-comment"
                ],
                "script_executions": [
                    "LCMHosts"
                ]
            }
        },
        {
            "LessThanPercentage": {
                "name": "LessThanPercentage",
                "file_path": "Scripts/script-LessThanPercentage.yml"
            }
        },
        {
            "LinkIncidentsWithRetry": {
                "name": "LinkIncidentsWithRetry",
                "file_path": "Scripts/script-LinkIncidentsWithRetry.yml",
                "script_executions": [
                    "linkIncidents"
                ]
            }
        },
        {
            "listExecutedCommands": {
                "name": "listExecutedCommands",
                "file_path": "Scripts/script-listExecutedCommands.yml"
            }
        },
        {
            "LoadJSON": {
                "name": "LoadJSON",
                "file_path": "Scripts/script-LoadJSON.yml",
                "tests": [
                    "JSONtoCSV-Test"
                ]
            }
        },
        {
            "LocateAttachment": {
                "name": "LocateAttachment",
                "file_path": "Scripts/script-LocateAttachment.yml",
                "deprecated": true,
                "script_executions": [
                    "getEntries"
                ]
            }
        },
        {
            "MaliciousRatioReputation": {
                "name": "MaliciousRatioReputation",
                "file_path": "Scripts/script-MaliciousRatioReputation.yml",
                "fromversion": "4.0.0",
                "script_executions": [
                    "findIndicators",
                    "maliciousRatio"
                ]
            }
        },
        {
            "MapValues": {
                "name": "MapValues",
                "file_path": "Scripts/script-MapValues.yml"
            }
        },
        {
            "MarkAsNoteByTag": {
                "name": "MarkAsNoteByTag",
                "file_path": "Scripts/script-MarkAsNoteByTag.yml",
                "script_executions": [
                    "getEntries",
                    "markAsNote"
                ]
            }
        },
        {
            "MarkRelatedIncidents": {
                "name": "MarkRelatedIncidents",
                "file_path": "Scripts/script-MarkRelatedIncidents.yml"
            }
        },
        {
            "MatchRegex": {
                "name": "MatchRegex",
                "file_path": "Scripts/script-MatchRegex.yml"
            }
        },
        {
            "MathUtil": {
                "name": "MathUtil",
                "file_path": "Scripts/script-MathUtil.yml"
            }
        },
        {
            "MattermostAskUser": {
                "name": "MattermostAskUser",
                "file_path": "Scripts/script-MattermostAskUser.yml",
                "depends_on": [
                    "mattermost-send"
                ],
                "script_executions": [
                    "addEntitlement"
                ]
            }
        },
        {
            "MD5Extract": {
                "name": "MD5Extract",
                "file_path": "Scripts/script-MD5Extract.yml",
                "deprecated": true
            }
        },
        {
            "MicrosoftApiModule": {
                "name": "MicrosoftApiModule",
                "file_path": "Packs/ApiModules/Scripts/MicrosoftApiModule/MicrosoftApiModule.yml",
                "pack": "ApiModules"
            }
        },
        {
            "MicrosoftTeamsAsk": {
                "name": "MicrosoftTeamsAsk",
                "file_path": "Scripts/MicrosoftTeamsAsk/MicrosoftTeamsAsk.yml",
                "fromversion": "5.0.0",
                "depends_on": [
                    "send-notification"
                ],
                "script_executions": [
                    "addEntitlement"
                ],
                "command_to_integration": {
                    "send-notification": "Microsoft Teams"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "MimecastFindEmail": {
                "name": "MimecastFindEmail",
                "file_path": "Scripts/script-MimecastFindEmail.yml",
                "depends_on": [
                    "mimecast-query"
                ]
            }
        },
        {
            "MimecastQuery": {
                "name": "MimecastQuery",
                "file_path": "Scripts/script-MimecastQuery.yml",
                "depends_on": [
                    "mimecast-query"
                ]
            }
        },
        {
            "misp_download_sample": {
                "name": "misp_download_sample",
                "file_path": "Scripts/script-misp_download_sample.yml",
                "deprecated": true,
                "tests": [
                    "MISP V2 Test"
                ]
            }
        },
        {
            "misp_upload_sample": {
                "name": "misp_upload_sample",
                "file_path": "Scripts/script-misp_upload_sample.yml",
                "deprecated": true,
                "script_executions": [
                    "getFilePath"
                ],
                "tests": [
                    "MISP V2 Test"
                ]
            }
        },
        {
            "NessusCreateScan": {
                "name": "NessusCreateScan",
                "file_path": "Scripts/script-NessusCreateScan.yml",
                "deprecated": true,
                "depends_on": [
                    "scan-create"
                ],
                "command_to_integration": {
                    "scan-create": "Nessus"
                }
            }
        },
        {
            "NessusGetReport": {
                "name": "NessusGetReport",
                "file_path": "Scripts/script-NessusGetReport.yml",
                "deprecated": true,
                "depends_on": [
                    "scan-report-download",
                    "scan-export-status",
                    "scan-export"
                ],
                "command_to_integration": {
                    "scan-export": "Nessus",
                    "scan-export-status": "Nessus",
                    "scan-report-download": "Nessus"
                }
            }
        },
        {
            "NessusHostDetails": {
                "name": "NessusHostDetails",
                "file_path": "Scripts/script-NessusHostDetails.yml",
                "deprecated": true,
                "depends_on": [
                    "scan-host-details"
                ],
                "command_to_integration": {
                    "scan-host-details": "Nessus"
                }
            }
        },
        {
            "NessusLaunchScan": {
                "name": "NessusLaunchScan",
                "file_path": "Scripts/script-NessusLaunchScan.yml",
                "deprecated": true,
                "depends_on": [
                    "scan-launch"
                ],
                "command_to_integration": {
                    "scan-launch": "Nessus"
                }
            }
        },
        {
            "NessusListScans": {
                "name": "NessusListScans",
                "file_path": "Scripts/script-NessusListScans.yml",
                "deprecated": true,
                "depends_on": [
                    "scans-list"
                ],
                "command_to_integration": {
                    "scans-list": "Nessus"
                }
            }
        },
        {
            "NessusScanDetails": {
                "name": "NessusScanDetails",
                "file_path": "Scripts/script-NessusScanDetails.yml",
                "deprecated": true,
                "depends_on": [
                    "scan-details"
                ],
                "command_to_integration": {
                    "scan-details": "Nessus"
                }
            }
        },
        {
            "NessusScanStatus": {
                "name": "NessusScanStatus",
                "file_path": "Scripts/script-NessusScanStatus.yml",
                "deprecated": true,
                "depends_on": [
                    "scan-details"
                ],
                "command_to_integration": {
                    "scan-details": "Nessus"
                }
            }
        },
        {
            "NessusShowEditorTemplates": {
                "name": "NessusShowEditorTemplates",
                "file_path": "Scripts/script-NessusShowEditorTemplates.yml",
                "deprecated": true,
                "depends_on": [
                    "nessus-get-scans-editors"
                ]
            }
        },
        {
            "NetwitnessQuery": {
                "name": "NetwitnessQuery",
                "file_path": "Scripts/script-NetwitnessQuery.yml",
                "depends_on": [
                    "nw-sdk-query"
                ]
            }
        },
        {
            "NetwitnessSAAddEventsToIncident": {
                "name": "NetwitnessSAAddEventsToIncident",
                "file_path": "Scripts/script-NetwitnessSAAddEventsToIncident.yml",
                "depends_on": [
                    "nw-add-events-to-incident"
                ]
            }
        },
        {
            "NetwitnessSACreateIncident": {
                "name": "NetwitnessSACreateIncident",
                "file_path": "Scripts/script-NetwitnessSACreateIncident.yml",
                "depends_on": [
                    "nw-create-incident"
                ]
            }
        },
        {
            "NetwitnessSAGetAvailableAssignees": {
                "name": "NetwitnessSAGetAvailableAssignees",
                "file_path": "Scripts/script-NetwitnessSAGetAvailableAssignees.yml",
                "depends_on": [
                    "nw-get-available-assignees"
                ]
            }
        },
        {
            "NetwitnessSAGetComponents": {
                "name": "NetwitnessSAGetComponents",
                "file_path": "Scripts/script-NetwitnessSAGetComponents.yml",
                "depends_on": [
                    "nw-get-components"
                ]
            }
        },
        {
            "NetwitnessSAGetEvents": {
                "name": "NetwitnessSAGetEvents",
                "file_path": "Scripts/script-NetwitnessSAGetEvents.yml",
                "depends_on": [
                    "nw-get-events"
                ]
            }
        },
        {
            "NetwitnessSAListIncidents": {
                "name": "NetwitnessSAListIncidents",
                "file_path": "Scripts/script-NetwitnessSAListIncidents.yml",
                "depends_on": [
                    "nw-list-incidents"
                ]
            }
        },
        {
            "NetwitnessSAUpdateIncident": {
                "name": "NetwitnessSAUpdateIncident",
                "file_path": "Scripts/script-NetwitnessSAUpdateIncident.yml",
                "deprecated": true,
                "depends_on": [
                    "nw-update-incident"
                ]
            }
        },
        {
            "NetwitnessSearch": {
                "name": "NetwitnessSearch",
                "file_path": "Scripts/script-NetwitnessSearch.yml",
                "depends_on": [
                    "nw-sdk-search"
                ]
            }
        },
        {
            "NexposeCreateIncidentsFromAssets": {
                "name": "NexposeCreateIncidentsFromAssets",
                "file_path": "Scripts/script-NexposeCreateIncidentsFromAssets.yml",
                "depends_on": [
                    "nexpose-get-asset"
                ],
                "script_executions": [
                    "createNewIncident",
                    "getIncidents"
                ]
            }
        },
        {
            "NexposeEmailParser": {
                "name": "NexposeEmailParser",
                "file_path": "Scripts/script-NexposeEmailParser.yml",
                "depends_on": [
                    "nexpose"
                ]
            }
        },
        {
            "NexposeEmailParserForVuln": {
                "name": "NexposeEmailParserForVuln",
                "file_path": "Scripts/script-NexposeEmailParserForVuln.yml",
                "depends_on": [
                    "nexpose"
                ]
            }
        },
        {
            "NexposeVulnExtractor": {
                "name": "NexposeVulnExtractor",
                "file_path": "Scripts/script-NexposeVulnExtractor.yml",
                "depends_on": [
                    "nexpose"
                ]
            }
        },
        {
            "NotInContextVerification": {
                "name": "NotInContextVerification",
                "file_path": "Scripts/script-NotInContextVerification.yml"
            }
        },
        {
            "NumberOfPhishingAttemptPerUser": {
                "name": "NumberOfPhishingAttemptPerUser",
                "file_path": "Scripts/NumberOfPhishingAttemptPerUser/NumberOfPhishingAttemptPerUser.yml",
                "fromversion": "5.0.0",
                "script_executions": [
                    "getIncidents"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "O365SearchEmails": {
                "name": "O365SearchEmails",
                "file_path": "Scripts/script-O365SearchEmails.yml",
                "script_executions": [
                    "D2O365ComplianceSearch",
                    "D2O365SearchAndDelete"
                ]
            }
        },
        {
            "OnboardingCleanup": {
                "name": "OnboardingCleanup",
                "file_path": "Scripts/script-OnboardingCleanup.yml",
                "script_executions": [
                    "closeInvestigation",
                    "deleteIndicators",
                    "getIncidents"
                ],
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "OSQueryBasicQuery": {
                "name": "OSQueryBasicQuery",
                "file_path": "Scripts/script-OSQueryBasicQuery.yml",
                "depends_on": [
                    "RemoteExec"
                ],
                "script_executions": [
                    "RemoteExec"
                ]
            }
        },
        {
            "OSQueryLoggedInUsers": {
                "name": "OSQueryLoggedInUsers",
                "file_path": "Scripts/script-OSQueryLoggedInUsers.yml",
                "depends_on": [
                    "OSQueryBasicQuery"
                ],
                "script_executions": [
                    "OSQueryBasicQuery"
                ]
            }
        },
        {
            "OSQueryOpenSockets": {
                "name": "OSQueryOpenSockets",
                "file_path": "Scripts/script-OSQueryOpenSockets.yml",
                "depends_on": [
                    "OSQueryBasicQuery"
                ],
                "script_executions": [
                    "OSQueryBasicQuery"
                ]
            }
        },
        {
            "OSQueryProcesses": {
                "name": "OSQueryProcesses",
                "file_path": "Scripts/script-OSQueryProcesses.yml",
                "depends_on": [
                    "OSQueryBasicQuery"
                ],
                "script_executions": [
                    "OSQueryBasicQuery"
                ]
            }
        },
        {
            "OSQueryUsers": {
                "name": "OSQueryUsers",
                "file_path": "Scripts/script-OSQueryUsers.yml",
                "depends_on": [
                    "OSQueryBasicQuery"
                ],
                "script_executions": [
                    "OSQueryBasicQuery"
                ]
            }
        },
        {
            "Osxcollector": {
                "name": "Osxcollector",
                "file_path": "Scripts/script-Osxcollector.yml"
            }
        },
        {
            "PadZeros": {
                "name": "PadZeros",
                "file_path": "Scripts/PadZeros/PadZeros.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "PagerDutyAlertOnIncident": {
                "name": "PagerDutyAlertOnIncident",
                "file_path": "Scripts/script-PagerDutyAlertOnIncident.yml",
                "depends_on": [
                    "PagerDuty-submit-event"
                ],
                "tests": [
                    "PagerDuty Test"
                ]
            }
        },
        {
            "PagerDutyAssignOnCallUser": {
                "name": "PagerDutyAssignOnCallUser",
                "file_path": "Scripts/script-PagerDutyAssignOnCallUser.yml",
                "depends_on": [
                    "PagerDuty-get-users-on-call-now"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "PanoramaBlockIP": {
                "name": "PanoramaBlockIP",
                "file_path": "Scripts/script-PanoramaBlockIP.yml",
                "deprecated": true,
                "depends_on": [
                    "panorama"
                ],
                "tests": [
                    "palo_alto_firewall_test_pb",
                    "blockip_test_playbook"
                ]
            }
        },
        {
            "PanoramaCommit": {
                "name": "PanoramaCommit",
                "file_path": "Scripts/script-PanoramaCommit.yml",
                "deprecated": true,
                "depends_on": [
                    "panorama"
                ],
                "tests": [
                    "palo_alto_firewall_test_pb"
                ]
            }
        },
        {
            "PanoramaConfig": {
                "name": "PanoramaConfig",
                "file_path": "Scripts/script-PanoramaConfig.yml",
                "deprecated": true,
                "depends_on": [
                    "panorama"
                ],
                "tests": [
                    "palo_alto_firewall_test_pb"
                ]
            }
        },
        {
            "PanoramaDynamicAddressGroup": {
                "name": "PanoramaDynamicAddressGroup",
                "file_path": "Scripts/script-PanoramaDynamicAddressGroup.yml",
                "deprecated": true,
                "tests": [
                    "palo_alto_firewall_test_pb"
                ]
            }
        },
        {
            "PanoramaMove": {
                "name": "PanoramaMove",
                "file_path": "Scripts/script-PanoramaMove.yml",
                "deprecated": true,
                "depends_on": [
                    "panorama"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "PanoramaPcaps": {
                "name": "PanoramaPcaps",
                "file_path": "Scripts/script-PanoramaPcaps.yml",
                "deprecated": true,
                "depends_on": [
                    "panorama"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "PanwIndicatorCreateQueries": {
                "name": "PanwIndicatorCreateQueries",
                "file_path": "Scripts/PanwIndicatorCreateQueries/PanwIndicatorCreateQueries.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ParseCSV": {
                "name": "ParseCSV",
                "file_path": "Scripts/ParseCSV/ParseCSV.yml",
                "script_executions": [
                    "getEntries"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "ParseEmailFile": {
                "name": "ParseEmailFile",
                "file_path": "Scripts/script-ParseEmailFile.yml",
                "deprecated": true,
                "script_executions": [
                    "getEntry",
                    "getFilePath"
                ]
            }
        },
        {
            "ParseEmailFiles": {
                "name": "ParseEmailFiles",
                "file_path": "Scripts/ParseEmailFiles/ParseEmailFiles.yml",
                "script_executions": [
                    "getEntry",
                    "getFilePath"
                ],
                "tests": [
                    "ParseEmailFiles-test"
                ]
            }
        },
        {
            "ParseEmailHeader": {
                "name": "ParseEmailHeaders",
                "file_path": "Scripts/script-ParseEmailHeaders.yml",
                "deprecated": true,
                "script_executions": [
                    "ParseEmailFiles"
                ]
            }
        },
        {
            "ParseExcel": {
                "name": "ParseExcel",
                "file_path": "Scripts/script-ParseExcel.yml",
                "script_executions": [
                    "getFilePath"
                ],
                "tests": [
                    "ParseExcel-test"
                ]
            }
        },
        {
            "ParseJSON": {
                "name": "ParseJSON",
                "file_path": "Scripts/script-ParseJSON.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ParseWordDoc": {
                "name": "ParseWordDoc",
                "file_path": "Scripts/script-ParseWordDoc.yml",
                "script_executions": [
                    "getFilePath"
                ]
            }
        },
        {
            "PcapHTTPExtractor": {
                "name": "PcapHTTPExtractor",
                "file_path": "Scripts/PcapHTTPExtractor/PcapHTTPExtractor.yml",
                "script_executions": [
                    "getEntries",
                    "getFilePath"
                ],
                "tests": [
                    "PcapHTTPExtractor-Test"
                ]
            }
        },
        {
            "PCAPMiner": {
                "name": "PCAPMiner",
                "file_path": "Scripts/script-PCAPMiner.yml",
                "script_executions": [
                    "getFilePath"
                ]
            }
        },
        {
            "PDFUnlocker": {
                "name": "PDFUnlocker",
                "file_path": "Scripts/script-PDFUnlocker.yml",
                "script_executions": [
                    "getFilePath"
                ]
            }
        },
        {
            "PhishingIncident": {
                "name": "PhishingIncident",
                "file_path": "TestPlaybooks/script-PhishingIncident.yml",
                "script_executions": [
                    "setIncident"
                ]
            }
        },
        {
            "PhishLabsPopulateIndicators": {
                "name": "PhishLabsPopulateIndicators",
                "file_path": "Scripts/PhishLabsPopulateIndicators/PhishLabsPopulateIndicators.yml",
                "script_executions": [
                    "createNewIndicator",
                    "deleteIndicators"
                ]
            }
        },
        {
            "Ping": {
                "name": "Ping",
                "file_path": "Scripts/script-Ping_4.5.yml",
                "toversion": "4.5.9",
                "tests": [
                    "Ping Test Playbook"
                ]
            }
        },
        {
            "Ping": {
                "name": "Ping",
                "file_path": "Scripts/Ping/Ping.yml",
                "fromversion": "5.0.0",
                "tests": [
                    "Ping Test Playbook"
                ]
            }
        },
        {
            "PopulateCriticalAssets": {
                "name": "PopulateCriticalAssets",
                "file_path": "Scripts/PopulateCriticalAssets/PopulateCriticalAssets.yml",
                "script_executions": [
                    "setIncident"
                ],
                "tests": [
                    "Calculate Severity - Generic v2 - Test"
                ]
            }
        },
        {
            "PortListenCheck": {
                "name": "PortListenCheck",
                "file_path": "Scripts/script-PortListenCheck.yml"
            }
        },
        {
            "PositiveDetectionsVSDetectionEngines": {
                "name": "PositiveDetectionsVSDetectionEngines",
                "file_path": "Scripts/PositiveDetectionsVSDetectionEngines/PositiveDetectionsVSDetectionEngines.yml",
                "fromversion": "5.0.0",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "PrettyPrint": {
                "name": "PrettyPrint",
                "file_path": "Scripts/PrettyPrint/PrettyPrint.yml",
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "Print": {
                "name": "Print",
                "file_path": "Scripts/script-Print.yml"
            }
        },
        {
            "PrintContext": {
                "name": "PrintContext",
                "file_path": "Scripts/script-PrintContext.yml"
            }
        },
        {
            "PrintErrorEntry": {
                "name": "PrintErrorEntry",
                "file_path": "Scripts/script-PrintErrorEntry.yml",
                "fromversion": "4.0.0"
            }
        },
        {
            "PrismaCloudComputeParseAuditAlert": {
                "name": "PrismaCloudComputeParseAuditAlert",
                "file_path": "Packs/PrismaCloudCompute/Scripts/PrismaCloudComputeParseAuditAlert/PrismaCloudComputeParseAuditAlert.yml",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "PrismaCloudComputeParseCloudDiscoveryAlert": {
                "name": "PrismaCloudComputeParseCloudDiscoveryAlert",
                "file_path": "Packs/PrismaCloudCompute/Scripts/PrismaCloudComputeParseCloudDiscoveryAlert/PrismaCloudComputeParseCloudDiscoveryAlert.yml",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "PrismaCloudComputeParseComplianceAlert": {
                "name": "PrismaCloudComputeParseComplianceAlert",
                "file_path": "Packs/PrismaCloudCompute/Scripts/PrismaCloudComputeParseComplianceAlert/PrismaCloudComputeParseComplianceAlert.yml",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "PrismaCloudComputeParseVulnerabilityAlert": {
                "name": "PrismaCloudComputeParseVulnerabilityAlert",
                "file_path": "Packs/PrismaCloudCompute/Scripts/PrismaCloudComputeParseVulnerabilityAlert/PrismaCloudComputeParseVulnerabilityAlert.yml",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "ProductJoin": {
                "name": "ProductJoin",
                "file_path": "Scripts/ProductJoin/ProductJoin.yml"
            }
        },
        {
            "ProofpointDecodeURL": {
                "name": "ProofpointDecodeURL",
                "file_path": "Scripts/ProofpointDecodeURL/ProofpointDecodeURL.yml",
                "deprecated": true,
                "script_executions": [
                    "UnEscapeURLs"
                ],
                "tests": [
                    "ProofpointDecodeURL-Test"
                ]
            }
        },
        {
            "ProvidesCommand": {
                "name": "ProvidesCommand",
                "file_path": "Scripts/ProvidesCommand/ProvidesCommand.yml",
                "depends_on": [
                    "demisto-api-post",
                    "demisto-api-get"
                ],
                "command_to_integration": {
                    "demisto-api-post": "Demisto REST API",
                    "demisto-api-get": "Demisto REST API"
                },
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "PTEnrich": {
                "name": "PTEnrich",
                "file_path": "Scripts/script-PTEnrich.yml",
                "depends_on": [
                    "pt-osint",
                    "pt-get-subdomains",
                    "pt-enrichment",
                    "pt-malware",
                    "pt-passive-dns",
                    "pt-ssl-cert",
                    "pt-whois"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "PublishEntriesToContext": {
                "name": "PublishEntriesToContext",
                "file_path": "Scripts/script-PublishEntriesToContext.yml"
            }
        },
        {
            "PWEventDetails": {
                "name": "PWEventDetails",
                "file_path": "Scripts/script-PWEventDetails.yml",
                "deprecated": true,
                "depends_on": [
                    "pw-event-get"
                ]
            }
        },
        {
            "PWEventPcapDownload": {
                "name": "PWEventPcapDownload",
                "file_path": "Scripts/script-PWEventPcapDownload.yml",
                "depends_on": [
                    "event-pcap-download"
                ],
                "command_to_integration": {
                    "event-pcap-download": "ProtectWise"
                },
                "tests": [
                    "Protectwise-Test"
                ]
            }
        },
        {
            "PWEventPcapInfo": {
                "name": "PWEventPcapInfo",
                "file_path": "Scripts/script-PWEventPcapInfo.yml",
                "deprecated": true,
                "depends_on": [
                    "event-pcap-info"
                ],
                "command_to_integration": {
                    "event-pcap-info": "ProtectWise"
                }
            }
        },
        {
            "PWEvents": {
                "name": "PWEvents",
                "file_path": "Scripts/script-PWEvents.yml",
                "deprecated": true,
                "depends_on": [
                    "search"
                ],
                "script_executions": [
                    "search"
                ],
                "command_to_integration": {
                    "search": "ProtectWise"
                }
            }
        },
        {
            "PWFindEvents": {
                "name": "PWFindEvents",
                "file_path": "Scripts/script-PWFindEvents.yml",
                "deprecated": true,
                "depends_on": [
                    "search"
                ],
                "script_executions": [
                    "search"
                ],
                "command_to_integration": {
                    "search": "ProtectWise"
                }
            }
        },
        {
            "PWObservationDetails": {
                "name": "PWObservationDetails",
                "file_path": "Scripts/script-PWObservationDetails.yml",
                "deprecated": true,
                "depends_on": [
                    "pw-observation-get"
                ]
            }
        },
        {
            "PWObservationPcapDownload": {
                "name": "PWObservationPcapDownload",
                "file_path": "Scripts/script-PWObservationPcapDownload.yml",
                "depends_on": [
                    "observation-pcap-download"
                ],
                "command_to_integration": {
                    "observation-pcap-download": "ProtectWise"
                },
                "tests": [
                    "Protectwise-Test"
                ]
            }
        },
        {
            "PWObservationPcapInfo": {
                "name": "PWObservationPcapInfo",
                "file_path": "Scripts/script-PWObservationPcapInfo.yml",
                "deprecated": true,
                "depends_on": [
                    "observation-pcap-info"
                ],
                "command_to_integration": {
                    "observation-pcap-info": "ProtectWise"
                }
            }
        },
        {
            "PWObservations": {
                "name": "PWObservations",
                "file_path": "Scripts/script-PWObservations.yml",
                "deprecated": true,
                "depends_on": [
                    "observation-search"
                ],
                "command_to_integration": {
                    "observation-search": "ProtectWise"
                }
            }
        },
        {
            "PWSensors": {
                "name": "PWSensors",
                "file_path": "Scripts/script-PWSensors.yml",
                "deprecated": true,
                "depends_on": [
                    "sensors"
                ],
                "script_executions": [
                    "sensors"
                ],
                "command_to_integration": {
                    "sensors": "ProtectWise"
                }
            }
        },
        {
            "PwshInvokeExpression": {
                "name": "PwshInvokeExpression",
                "file_path": "TestPlaybooks/script-PwshInvokeExpression.yml",
                "fromversion": "5.5.0"
            }
        },
        {
            "QRadarClassifier": {
                "name": "QRadarClassifier",
                "file_path": "Scripts/script-QRadarClassifier.yml",
                "deprecated": true,
                "depends_on": [
                    "qradar-searches"
                ]
            }
        },
        {
            "QRadarFullSearch": {
                "name": "QRadarFullSearch",
                "file_path": "Scripts/script-QRadarFullSearch.yml",
                "deprecated": true,
                "depends_on": [
                    "qradar-get-search",
                    "qradar-get-search-results",
                    "qradar-searches"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "QRadarGetCorrelationLogs": {
                "name": "QRadarGetCorrelationLogs",
                "file_path": "Scripts/QRadarGetCorrelationLogs/QRadarGetCorrelationLogs.yml",
                "depends_on": [
                    "qradar-searches"
                ],
                "script_executions": [
                    "QRadarFullSearch"
                ],
                "tests": [
                    "no tests"
                ]
            }
        },
        {
            "QRadarGetOffenseCorrelations": {
                "name": "QRadarGetOffenseCorrelations",
                "file_path": "Scripts/QRadarGetOffenseCorrelations/QRadarGetOffenseCorrelations.yml",
                "depends_on": [
                    "qradar-searches"
                ],
                "script_executions": [
                    "QRadarFullSearch"
                ],
                "tests": [
                    "no tests"
                ]
            }
        },
        {
            "QrFullSearch": {
                "name": "QrFullSearch",
                "file_path": "Scripts/script-QrFullSearch.yml",
                "deprecated": true,
                "depends_on": [
                    "QrGetSearchResults",
                    "qr-get-search",
                    "qr-searches"
                ],
                "script_executions": [
                    "QrGetSearchResults"
                ]
            }
        },
        {
            "QrGetSearch": {
                "name": "QrGetSearch",
                "file_path": "Scripts/script-QrGetSearch.yml",
                "deprecated": true,
                "depends_on": [
                    "qr-get-search"
                ]
            }
        },
        {
            "QrGetSearchResults": {
                "name": "QrGetSearchResults",
                "file_path": "Scripts/script-QrGetSearchResults.yml",
                "deprecated": true,
                "depends_on": [
                    "qr-get-search-results"
                ]
            }
        },
        {
            "QrOffenses": {
                "name": "QrOffenses",
                "file_path": "Scripts/script-QrOffenses.yml",
                "deprecated": true,
                "depends_on": [
                    "qr-offenses"
                ]
            }
        },
        {
            "QrSearches": {
                "name": "QrSearches",
                "file_path": "Scripts/script-QrSearches.yml",
                "deprecated": true,
                "depends_on": [
                    "qr-searches"
                ]
            }
        },
        {
            "QualysCreateIncidentFromReport": {
                "name": "QualysCreateIncidentFromReport",
                "file_path": "Scripts/script-QualysCreateIncidentFromReport.yml",
                "depends_on": [
                    "qualys-host-list"
                ],
                "script_executions": [
                    "createNewIncident",
                    "getIncidents"
                ]
            }
        },
        {
            "RaiseError": {
                "name": "RaiseError",
                "file_path": "TestPlaybooks/script-RaiseError.yml"
            }
        },
        {
            "ReadFile": {
                "name": "ReadFile",
                "file_path": "Scripts/ReadFile/ReadFile.yml",
                "script_executions": [
                    "getFilePath"
                ]
            }
        },
        {
            "ReadPDFFile": {
                "name": "ReadPDFFile",
                "file_path": "Scripts/script-ReadPDFFile_4_0.yml",
                "toversion": "4.0.9",
                "fromversion": "3.6.0",
                "script_executions": [
                    "getFilePath"
                ],
                "tests": [
                    "ReadPDFFile-Test"
                ]
            }
        },
        {
            "ReadPDFFile": {
                "name": "ReadPDFFile",
                "file_path": "Scripts/script-ReadPDFFile.yml",
                "fromversion": "4.1.0",
                "deprecated": true,
                "script_executions": [
                    "extractIndicators",
                    "getFilePath"
                ],
                "tests": [
                    "Extract Indicators From File - test"
                ]
            }
        },
        {
            "ReadPDFFileV2": {
                "name": "ReadPDFFileV2",
                "file_path": "Scripts/ReadPDFFileV2/ReadPDFFileV2.yml",
                "fromversion": "4.1.0",
                "script_executions": [
                    "extractIndicators"
                ],
                "tests": [
                    "Extract Indicators From File - Generic v2 - Test",
                    "ReadPDFFileV2-Test"
                ]
            }
        },
        {
            "RecordedFutureDomainRiskList": {
                "name": "RecordedFutureDomainRiskList",
                "file_path": "Scripts/script-RecordedFutureDomainRiskList.yml",
                "script_executions": [
                    "createNewIndicator",
                    "deleteIndicators"
                ],
                "tests": [
                    "No test - fetches indicators"
                ]
            }
        },
        {
            "RecordedFutureHashRiskList": {
                "name": "RecordedFutureHashRiskList",
                "file_path": "Scripts/script-RecordedFutureHashRiskList.yml",
                "script_executions": [
                    "createNewIndicator"
                ],
                "tests": [
                    "No test - fetches indicators"
                ]
            }
        },
        {
            "RecordedFutureIPRiskList": {
                "name": "RecordedFutureIPRiskList",
                "file_path": "Scripts/script-RecordedFutureIPRiskList.yml",
                "script_executions": [
                    "createNewIndicator",
                    "deleteIndicators"
                ],
                "tests": [
                    "No test - fetches indicators"
                ]
            }
        },
        {
            "RecordedFutureURLRiskList": {
                "name": "RecordedFutureURLRiskList",
                "file_path": "Scripts/script-RecordedFutureURLRiskList.yml",
                "script_executions": [
                    "createNewIndicator",
                    "deleteIndicators"
                ],
                "tests": [
                    "No test - fetches indicators"
                ]
            }
        },
        {
            "RecordedFutureVulnerabilityRiskList": {
                "name": "RecordedFutureVulnerabilityRiskList",
                "file_path": "Scripts/script-RecordedFutureVulnerabilityRiskList.yml",
                "script_executions": [
                    "createNewIndicator",
                    "deleteIndicators"
                ],
                "tests": [
                    "No test - fetches indicators"
                ]
            }
        },
        {
            "RegCollectValues": {
                "name": "RegCollectValues",
                "file_path": "Scripts/script-RegCollectValues.yml"
            }
        },
        {
            "RegexExtractAll": {
                "name": "RegexExtractAll",
                "file_path": "Scripts/RegexExtractAll/RegexExtractAll.yml",
                "tests": [
                    "No test - unit test"
                ]
            }
        },
        {
            "RegexGroups": {
                "name": "RegexGroups",
                "file_path": "Scripts/RegexGroups/RegexGroups.yml",
                "tests": [
                    "RegexGroups Test"
                ]
            }
        },
        {
            "RegPathReputationBasicLists": {
                "name": "RegPathReputationBasicLists",
                "file_path": "Scripts/script-RegPathReputationBasicLists.yml",
                "tests": [
                    "RegPathReputationBasicLists_test"
                ]
            }
        },
        {
            "RegProbeBasic": {
                "name": "RegProbeBasic",
                "file_path": "Scripts/script-RegProbeBasic.yml"
            }
        },
        {
            "RemoteExec": {
                "name": "RemoteExec",
                "file_path": "Scripts/script-RemoteExec.yml",
                "depends_on": [
                    "ssh"
                ]
            }
        },
        {
            "ReplaceMatchGroup": {
                "name": "ReplaceMatchGroup",
                "file_path": "Packs/ReplaceMatchGroup/Scripts/ReplaceMatchGroup/ReplaceMatchGroup.yml",
                "tests": [
                    "No test - unit test"
                ],
                "pack": "ReplaceMatchGroup"
            }
        },
        {
            "RepopulateFiles": {
                "name": "RepopulateFiles",
                "file_path": "Scripts/RepopulateFiles/RepopulateFiles.yml",
                "script_executions": [
                    "getEntries"
                ]
            }
        },
        {
            "ResolveShortenedURL": {
                "name": "ResolveShortenedURL",
                "file_path": "Scripts/script-ResolveShortenedURL.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ReverseList": {
                "name": "ReverseList",
                "file_path": "Scripts/script-ReverseList.yml"
            }
        },
        {
            "RSAArcherManualFetch": {
                "name": "RSAArcherManualFetch",
                "file_path": "Scripts/script-RSAArcherManualFetch.yml",
                "depends_on": [
                    "archer-manually-fetch-incident"
                ],
                "script_executions": [
                    "createNewIncident"
                ]
            }
        },
        {
            "RunDockerCommand": {
                "name": "RunDockerCommand",
                "file_path": "Scripts/script-RunDockerCommand.yml"
            }
        },
        {
            "RunPollingCommand": {
                "name": "RunPollingCommand",
                "file_path": "Scripts/script-RunPollingCommand.yml",
                "fromversion": "4.0.0",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "RunSqlQuery": {
                "name": "RunSqlQuery",
                "file_path": "Scripts/script-RunSqlQuery.yml",
                "deprecated": true,
                "depends_on": [
                    "query"
                ],
                "script_executions": [
                    "query"
                ]
            }
        },
        {
            "SalesforceAskUser": {
                "name": "SalesforceAskUser",
                "file_path": "Scripts/script-SalesforceAskUser.yml",
                "depends_on": [
                    "salesforce-push-comment"
                ],
                "script_executions": [
                    "addEntitlement"
                ]
            }
        },
        {
            "SandboxDetonateFile": {
                "name": "SandboxDetonateFile",
                "file_path": "Scripts/script-SandboxDetonateFile.yml",
                "script_executions": [
                    "CuckooDetonateFile",
                    "CuckooGetReport",
                    "CuckooTaskStatus",
                    "IsIntegrationAvailable",
                    "getEntry"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SaneDocReports": {
                "name": "SaneDocReports",
                "file_path": "Scripts/SaneDocReportV2/SaneDocReportV2.yml",
                "fromversion": "5.5.0",
                "deprecated": true,
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "SaneDocReports": {
                "name": "SaneDocReports",
                "file_path": "Scripts/SaneDocReport/SaneDocReport.yml",
                "toversion": "5.4.9",
                "fromversion": "5.0.0",
                "deprecated": true,
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "SanePdfReports": {
                "name": "SanePdfReports",
                "file_path": "Scripts/SanePdfReport/SanePdfReport.yml",
                "fromversion": "5.5.0",
                "deprecated": true,
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "SbDownload": {
                "name": "SbDownload",
                "file_path": "Scripts/script-SbDownload.yml",
                "depends_on": [
                    "sb-download"
                ]
            }
        },
        {
            "SbQuery": {
                "name": "SbQuery",
                "file_path": "Scripts/script-SbQuery.yml",
                "depends_on": [
                    "sb-query"
                ]
            }
        },
        {
            "SbQuota": {
                "name": "SbQuota",
                "file_path": "Scripts/script-SbQuota.yml",
                "depends_on": [
                    "sb-quota"
                ]
            }
        },
        {
            "SbUpload": {
                "name": "SbUpload",
                "file_path": "Scripts/script-SbUpload.yml",
                "depends_on": [
                    "sb-upload"
                ]
            }
        },
        {
            "ScheduleCommand": {
                "name": "ScheduleCommand",
                "file_path": "Scripts/script-ScheduleCommand.yml"
            }
        },
        {
            "ScheduleGenericPolling": {
                "name": "ScheduleGenericPolling",
                "file_path": "Scripts/script-ScheduleGenericPolling.yml",
                "fromversion": "4.0.0",
                "script_executions": [
                    "ScheduleCommand"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SCPPullFiles": {
                "name": "SCPPullFiles",
                "file_path": "Scripts/script-SCPPullFiles.yml",
                "depends_on": [
                    "copy-from"
                ]
            }
        },
        {
            "SearchIncidents": {
                "name": "SearchIncidents",
                "file_path": "Scripts/script-SearchIncidents.yml",
                "deprecated": true,
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SearchIncidentsV2": {
                "name": "SearchIncidentsV2",
                "file_path": "Scripts/SearchIncidentsV2/SearchIncidentsV2.yml",
                "script_executions": [
                    "getIncidents"
                ]
            }
        },
        {
            "SendEmail": {
                "name": "SendEmail",
                "file_path": "Scripts/script-SendEmail.yml",
                "deprecated": true,
                "depends_on": [
                    "send-mail"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SendEmailOnSLABreach": {
                "name": "SendEmailOnSLABreach",
                "file_path": "Scripts/script-SendEmailOnSLABreach.yml",
                "script_executions": [
                    "getUserByUsername"
                ],
                "tests": [
                    "No test - Can't test script that triggers on SLA breach. Need a field to trigger it and need a configured mail sender. Also errors aren't accounted."
                ]
            }
        },
        {
            "SendEmailToManager": {
                "name": "SendEmailToManager",
                "file_path": "Scripts/SendEmailToManager/SendEmailToManager.yml",
                "fromversion": "3.5.0",
                "depends_on": [
                    "send-mail",
                    "ad-search"
                ],
                "script_executions": [
                    "AdSearch",
                    "addEntitlement"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SendEmailToManager": {
                "name": "SendEmailToManager",
                "file_path": "Scripts/script-SendEmailToManager_ToV3.5.0.yml",
                "toversion": "3.1.0",
                "depends_on": [
                    "send-mail",
                    "ad-search"
                ],
                "script_executions": [
                    "AdSearch",
                    "addOneTimeEntitlement"
                ]
            }
        },
        {
            "SendMessageToOnlineUsers": {
                "name": "SendMessageToOnlineUsers",
                "file_path": "Scripts/script-SendMessageToOnlineUsers.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SEPCheckOutdatedEndpoints": {
                "name": "SEPCheckOutdatedEndpoints",
                "file_path": "Scripts/script-SEPCheckOutdatedEndpoints.yml",
                "depends_on": [
                    "sep-client-content"
                ],
                "tests": [
                    "No test - postpone for later"
                ]
            }
        },
        {
            "ServiceNowCreateIncident": {
                "name": "ServiceNowCreateIncident",
                "file_path": "Scripts/script-ServiceNowCreateIncident.yml",
                "depends_on": [
                    "servicenow-create-record",
                    "servicenow-query-table"
                ],
                "command_to_integration": {
                    "servicenow-create-record": "ServiceNow",
                    "servicenow-query-table": "ServiceNow"
                },
                "tests": [
                    "No test - Hibernating instance"
                ]
            }
        },
        {
            "ServiceNowQueryIncident": {
                "name": "ServiceNowQueryIncident",
                "file_path": "Scripts/script-ServiceNowQueryIncident.yml",
                "depends_on": [
                    "servicenow-query-table"
                ],
                "command_to_integration": {
                    "servicenow-query-table": "ServiceNow"
                },
                "tests": [
                    "No test - Hibernating instance"
                ]
            }
        },
        {
            "ServiceNowUpdateIncident": {
                "name": "ServiceNowUpdateIncident",
                "file_path": "Scripts/script-ServiceNowUpdateIncident.yml",
                "depends_on": [
                    "servicenow-query-table",
                    "servicenow-update-record"
                ],
                "command_to_integration": {
                    "servicenow-update-record": "ServiceNow",
                    "servicenow-query-table": "ServiceNow"
                },
                "tests": [
                    "No test - Hibernating instance"
                ]
            }
        },
        {
            "Set": {
                "name": "Set",
                "file_path": "Scripts/script-Set.yml",
                "tests": [
                    "Set - Test"
                ]
            }
        },
        {
            "SetAndHandleEmpty": {
                "name": "SetAndHandleEmpty",
                "file_path": "Scripts/SetAndHandleEmpty/SetAndHandleEmpty.yml",
                "fromversion": "4.5.0",
                "tests": [
                    "SetAndHandleEmpty test"
                ]
            }
        },
        {
            "SetByIncidentId": {
                "name": "SetByIncidentId",
                "file_path": "Scripts/script-SetByIncidentId.yml",
                "script_executions": [
                    "executeCommandAt"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SetContext": {
                "name": "SetContext",
                "file_path": "Scripts/script-SetContext.yml",
                "deprecated": true
            }
        },
        {
            "SetDateField": {
                "name": "SetDateField",
                "file_path": "Scripts/script-SetDateField.yml",
                "script_executions": [
                    "setIncident"
                ]
            }
        },
        {
            "SetIfEmpty": {
                "name": "SetIfEmpty",
                "file_path": "Scripts/SetIfEmpty/SetIfEmpty.yml"
            }
        },
        {
            "SetIncidentCustomFields": {
                "name": "SetIncidentCustomFields",
                "file_path": "Scripts/script-SetIncidentCustomFields.yml",
                "deprecated": true,
                "tests": [
                    "No test - script should be phased out of use"
                ]
            }
        },
        {
            "SetIPsTest": {
                "name": "SetIPsTest",
                "file_path": "TestPlaybooks/script-SetIPsTest.yml",
                "tests": [
                    "no test (it's a part of ip enrichment test playbook)"
                ]
            }
        },
        {
            "SetMultipleValues": {
                "name": "SetMultipleValues",
                "file_path": "Scripts/script-SetMultipleValues.yml"
            }
        },
        {
            "SetSeverityByScore": {
                "name": "SetSeverityByScore",
                "file_path": "Scripts/script-SetSeverityByScore.yml",
                "script_executions": [
                    "IncidentSet"
                ]
            }
        },
        {
            "SetTime": {
                "name": "SetTime",
                "file_path": "Scripts/script-SetTime.yml",
                "script_executions": [
                    "setIncident"
                ]
            }
        },
        {
            "ShowLocationOnMap": {
                "name": "ShowLocationOnMap",
                "file_path": "Scripts/ShowLocationOnMap/ShowLocationOnMap.yml",
                "fromversion": "5.0.0",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ShowOnMap": {
                "name": "ShowOnMap",
                "file_path": "Scripts/script-ShowOnMap.yml"
            }
        },
        {
            "ShowScheduledEntries": {
                "name": "ShowScheduledEntries",
                "file_path": "Scripts/script-ShowScheduledEntries.yml"
            }
        },
        {
            "SimpleRequest": {
                "name": "SimpleRequest",
                "file_path": "TestPlaybooks/script-SimpleRequest.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SimpleRequestExecutor": {
                "name": "SimpleRequestExecutor",
                "file_path": "TestPlaybooks/script-SimpleRequestExecutor.yml",
                "script_executions": [
                    "SimpleRequest"
                ]
            }
        },
        {
            "SimpleRequestGetter": {
                "name": "SimpleRequestGetter",
                "file_path": "TestPlaybooks/script-SimpleRequestGetter.yml",
                "script_executions": [
                    "getEntries"
                ]
            }
        },
        {
            "SlackAsk": {
                "name": "SlackAsk",
                "file_path": "Packs/Slack/Scripts/SlackAsk/SlackAsk.yml",
                "fromversion": "5.0.0",
                "depends_on": [
                    "send-notification"
                ],
                "script_executions": [
                    "addEntitlement"
                ],
                "tests": [
                    "no test - Untestable"
                ],
                "pack": "Slack"
            }
        },
        {
            "SlackAskUser": {
                "name": "SlackAskUser",
                "file_path": "Scripts/script-SlackAskUser_ToV3.5.0.yml",
                "toversion": "3.1.0",
                "depends_on": [
                    "slack-send"
                ],
                "script_executions": [
                    "addOneTimeEntitlement"
                ]
            }
        },
        {
            "SlackAskUser": {
                "name": "SlackAskUser",
                "file_path": "Scripts/SlackAskUser/SlackAskUser.yml",
                "toversion": "4.5.0",
                "fromversion": "3.5.0",
                "depends_on": [
                    "slack-send"
                ],
                "script_executions": [
                    "addEntitlement"
                ],
                "tests": [
                    "No test - entitlement"
                ]
            }
        },
        {
            "SlackAskUser": {
                "name": "SlackAskUser",
                "file_path": "Scripts/SlackAskUser_5.0/SlackAskUser.yml",
                "fromversion": "5.0.0",
                "deprecated": true,
                "depends_on": [
                    "slack-send"
                ],
                "script_executions": [
                    "addEntitlement"
                ],
                "tests": [
                    "no test - untestable"
                ]
            }
        },
        {
            "SlackMirror": {
                "name": "SlackMirror",
                "file_path": "Scripts/script-SlackMirror.yml",
                "deprecated": true,
                "depends_on": [
                    "slack-mirror-investigation"
                ]
            }
        },
        {
            "SlackSend": {
                "name": "SlackSend",
                "file_path": "Scripts/script-SlackSend.yml",
                "deprecated": true,
                "depends_on": [
                    "slack-send"
                ]
            }
        },
        {
            "Sleep": {
                "name": "Sleep",
                "file_path": "Scripts/script-Sleep.yml"
            }
        },
        {
            "SNListTickets": {
                "name": "SNListTickets",
                "file_path": "Scripts/script-SNListTickets.yml",
                "deprecated": true,
                "depends_on": [
                    "servicenow-incidents-query"
                ]
            }
        },
        {
            "SNOpenTicket": {
                "name": "SNOpenTicket",
                "file_path": "Scripts/script-SNOpenTicket.yml",
                "deprecated": true,
                "depends_on": [
                    "servicenow-incident-create"
                ]
            }
        },
        {
            "SNUpdateTicket": {
                "name": "SNUpdateTicket",
                "file_path": "Scripts/script-SNUpdateTicket.yml",
                "deprecated": true,
                "depends_on": [
                    "servicenow-incident-update"
                ]
            }
        },
        {
            "SplunkEmailParser": {
                "name": "SplunkEmailParser",
                "file_path": "Scripts/script-SplunkEmailParser.yml",
                "depends_on": [
                    "search"
                ],
                "command_to_integration": {
                    "search": "splunk"
                }
            }
        },
        {
            "SplunkPySearch": {
                "name": "SplunkPySearch",
                "file_path": "Scripts/script-SplunkPySearch.yml",
                "deprecated": true,
                "depends_on": [
                    "splunk-search"
                ]
            }
        },
        {
            "SplunkSearch": {
                "name": "SplunkSearch",
                "file_path": "Scripts/script-SplunkSearch.yml",
                "deprecated": true,
                "depends_on": [
                    "search"
                ],
                "command_to_integration": {
                    "search": "splunk"
                }
            }
        },
        {
            "SplunkSearchJsonPy": {
                "name": "SplunkSearchJsonPy",
                "file_path": "Scripts/script-SplunkSearchJsonPy.yml",
                "deprecated": true,
                "depends_on": [
                    "search"
                ],
                "script_executions": [
                    "search"
                ],
                "command_to_integration": {
                    "search": "splunk"
                }
            }
        },
        {
            "SSDeepReputation": {
                "name": "SSDeepReputation",
                "file_path": "Scripts/script-SSdeepReputation.yml",
                "script_executions": [
                    "findIndicators",
                    "getContext",
                    "similarSsdeep"
                ]
            }
        },
        {
            "SsdeepReputationTest": {
                "name": "SsdeepReputationTest",
                "file_path": "TestPlaybooks/script-SsdeepReputationTest.yml",
                "script_executions": [
                    "createNewIndicator",
                    "findIndicators"
                ]
            }
        },
        {
            "StaticAnalyze": {
                "name": "StaticAnalyze",
                "file_path": "Scripts/script-StaticAnalyze.yml"
            }
        },
        {
            "StixCreator": {
                "name": "StixCreator",
                "file_path": "Scripts/script-StixCreator.yml",
                "tests": [
                    "StixCreator-Test"
                ]
            }
        },
        {
            "StixParser": {
                "name": "StixParser",
                "file_path": "Scripts/StixParser/StixParser.yml",
                "tests": [
                    "STIXParserTest"
                ]
            }
        },
        {
            "StopScheduledTask": {
                "name": "StopScheduledTask",
                "file_path": "Scripts/script-StopScheduledTask.yml",
                "script_executions": [
                    "scheduleEntry"
                ]
            }
        },
        {
            "StopTimeToAssignOnOwnerChange": {
                "name": "StopTimeToAssignOnOwnerChange",
                "file_path": "Scripts/script-StopTimeToAssignOnOwnerChange.yml",
                "fromversion": "4.1.0",
                "script_executions": [
                    "stopTimer"
                ],
                "tests": [
                    "SLA Scripts - Test"
                ]
            }
        },
        {
            "StringContains": {
                "name": "StringContains",
                "file_path": "Scripts/script-StringContains.yml",
                "deprecated": true,
                "tests": [
                    "No test - deprecated, didn't have a test prior"
                ]
            }
        },
        {
            "StringContainsArray": {
                "name": "StringContainsArray",
                "file_path": "Scripts/script-StringContainsArray.yml",
                "tests": [
                    "StringContainsArray_test"
                ]
            }
        },
        {
            "StringLength": {
                "name": "StringLength",
                "file_path": "Scripts/script-StringLength.yml"
            }
        },
        {
            "StringReplace": {
                "name": "StringReplace",
                "file_path": "Scripts/script-StringReplace.yml"
            }
        },
        {
            "Strings": {
                "name": "Strings",
                "file_path": "Scripts/script-Strings.yml",
                "script_executions": [
                    "getFilePath"
                ]
            }
        },
        {
            "StripChars": {
                "name": "StripChars",
                "file_path": "Scripts/StripChar/StripChar.yml",
                "tests": [
                    "stripChars - Test"
                ]
            }
        },
        {
            "SumList": {
                "name": "SumList",
                "file_path": "Scripts/SumList/SumList.yml",
                "tests": [
                    "sumList - Test"
                ]
            }
        },
        {
            "TaniumApprovePendingActions": {
                "name": "TaniumApprovePendingActions",
                "file_path": "Scripts/script-TaniumApprovePendingActions.yml",
                "deprecated": true,
                "depends_on": [
                    "tn-get-object",
                    "tn-add-object"
                ]
            }
        },
        {
            "TaniumAskQuestion": {
                "name": "TaniumAskQuestion",
                "file_path": "Scripts/script-TaniumAskQuestion.yml",
                "deprecated": true,
                "depends_on": [
                    "tn-result-info",
                    "tn-result-data"
                ]
            }
        },
        {
            "TaniumAskQuestionComplex": {
                "name": "TaniumAskQuestionComplex",
                "file_path": "Scripts/script-TaniumAskQuestionComplex.yml",
                "deprecated": true,
                "depends_on": [
                    "tn-result-info",
                    "tn-add-question-complex",
                    "tn-result-data"
                ]
            }
        },
        {
            "TaniumDeployAction": {
                "name": "TaniumDeployAction",
                "file_path": "Scripts/script-TaniumDeployAction.yml",
                "deprecated": true,
                "depends_on": [
                    "tn-deploy-package"
                ]
            }
        },
        {
            "TaniumFilterComputersByIndexQueryFileDetails": {
                "name": "TaniumFilterComputersByIndexQueryFileDetails",
                "file_path": "Scripts/script-TaniumFilterComputersByIndexQueryFileDetails.yml",
                "depends_on": [
                    "tn-ask-manual-question"
                ]
            }
        },
        {
            "TaniumFindRunningProcesses": {
                "name": "TaniumFindRunningProcesses",
                "file_path": "Scripts/script-TaniumFindRunningProcesses.yml",
                "deprecated": true,
                "depends_on": [
                    "tn-result-info",
                    "tn-add-question-complex",
                    "tn-result-data"
                ]
            }
        },
        {
            "TaniumShowPendingActions": {
                "name": "TaniumShowPendingActions",
                "file_path": "Scripts/script-TaniumShowPendingActions.yml",
                "deprecated": true,
                "depends_on": [
                    "tn-get-object"
                ]
            }
        },
        {
            "TestCreateDuplicates": {
                "name": "TestCreateDuplicates",
                "file_path": "TestPlaybooks/script-TestCreateDuplicates.yml",
                "script_executions": [
                    "createNewIncident"
                ]
            }
        },
        {
            "TestCreateIncidents": {
                "name": "TestCreateIncidents",
                "file_path": "TestPlaybooks/script-TestCreateIncidents.yml",
                "script_executions": [
                    "createNewIncident"
                ]
            }
        },
        {
            "TestCreateIncidentsForPhishingClassifier": {
                "name": "TestCreateIncidentsForPhishingClassifier",
                "file_path": "TestPlaybooks/script-TestCreateIncidentsForPhishingClassifier.yml",
                "script_executions": [
                    "createList",
                    "createNewIncident"
                ]
            }
        },
        {
            "TestCreateTagTextFile": {
                "name": "TestCreateTagTextFile",
                "file_path": "TestPlaybooks/script-TestCreateTagTextFile.yml",
                "script_executions": [
                    "createList"
                ]
            }
        },
        {
            "TestCreateWordFile": {
                "name": "TestCreateWordFile",
                "file_path": "TestPlaybooks/script-TestCreateWordFile.yml"
            }
        },
        {
            "TestFormatTableValues": {
                "name": "TestFormatTableValues",
                "file_path": "TestPlaybooks/script-TestFormatTableValues.yml"
            }
        },
        {
            "TestMysqlQuery": {
                "name": "TestMysqlQuery",
                "file_path": "TestPlaybooks/script-TestMySQLQuery.yml",
                "depends_on": [
                    "query"
                ],
                "script_executions": [
                    "query"
                ],
                "command_to_integration": {
                    "query": "mysql"
                }
            }
        },
        {
            "TestPYCommonServer": {
                "name": "TestPYCommonServer",
                "file_path": "TestPlaybooks/script-TestPyCommonServer.yml"
            }
        },
        {
            "TestRegPathReputation": {
                "name": "TestRegPathReputation",
                "file_path": "TestPlaybooks/script-TestRegPathReputation.yml",
                "script_executions": [
                    "RegPathReputationBasicLists"
                ]
            }
        },
        {
            "TestXml2JSON": {
                "name": "TestXml2JSON",
                "file_path": "TestPlaybooks/script-TestXml2JSON.yml"
            }
        },
        {
            "TextFromHTML": {
                "name": "TextFromHTML",
                "file_path": "Scripts/script-TextFromHTML.yml"
            }
        },
        {
            "ThreatIntelManagementGetIncidentsPerFeed": {
                "name": "ThreatIntelManagementGetIncidentsPerFeed",
                "file_path": "Packs/ThreatIntelligenceManagement/Scripts/ThreatIntelligenceManagementGetIncidentsPerFeed/ThreatIntelligenceManagementGetIncidentsPerFeed.yml",
                "fromversion": "5.5.0",
                "script_executions": [
                    "getIncidents"
                ],
                "pack": "ThreatIntelligenceManagement"
            }
        },
        {
            "ticksToTime": {
                "name": "ticksToTime",
                "file_path": "Scripts/script-ticksToTime.yml"
            }
        },
        {
            "TimeStampToDate": {
                "name": "TimeStampToDate",
                "file_path": "Scripts/script-TimeStampToDate.yml"
            }
        },
        {
            "TopMaliciousRatioIndicators": {
                "name": "TopMaliciousRatioIndicators",
                "file_path": "Scripts/script-TopMaliciousRatioIndicators.yml",
                "fromversion": "4.0.0",
                "script_executions": [
                    "findIndicators",
                    "maliciousRatio"
                ]
            }
        },
        {
            "ToTable": {
                "name": "ToTable",
                "file_path": "Scripts/script-ToTable.yml"
            }
        },
        {
            "TrendmicroAlertStatus": {
                "name": "TrendmicroAlertStatus",
                "file_path": "Scripts/script-TrendmicroAlertStatus.yml",
                "depends_on": [
                    "trendmicro-alert-status"
                ]
            }
        },
        {
            "TrendmicroAntiMalwareEventRetrieve": {
                "name": "TrendmicroAntiMalwareEventRetrieve",
                "file_path": "Scripts/script-TrendmicroAntiMalwareEventRetrieve.yml",
                "depends_on": [
                    "trendmicro-anti-malware-event-retrieve"
                ]
            }
        },
        {
            "TrendMicroClassifier": {
                "name": "TrendMicroClassifier",
                "file_path": "Scripts/script-TrendMicroClassifier.yml",
                "depends_on": [
                    "trendmicro-alert-status"
                ]
            }
        },
        {
            "TrendMicroGetHostID": {
                "name": "TrendMicroGetHostID",
                "file_path": "Scripts/script-TrendMicroGetHostID.yml",
                "depends_on": [
                    "trendmicro-host-retrieve-all"
                ],
                "script_executions": [
                    "TrendmicroHostRetrieveAll"
                ]
            }
        },
        {
            "TrendMicroGetPolicyID": {
                "name": "TrendMicroGetPolicyID",
                "file_path": "Scripts/script-TrendMicroGetPolicyID.yml",
                "depends_on": [
                    "trendmicro-security-profile-retrieve-all"
                ],
                "script_executions": [
                    "TrendmicroSecurityProfileRetrieveAll"
                ]
            }
        },
        {
            "TrendmicroHostAntimalwareScan": {
                "name": "TrendmicroHostAntimalwareScan",
                "file_path": "Scripts/script-TrendmicroHostAntimalwareScan.yml",
                "depends_on": [
                    "trendmicro-host-antimalware-scan"
                ]
            }
        },
        {
            "TrendmicroHostRetrieveAll": {
                "name": "TrendmicroHostRetrieveAll",
                "file_path": "Scripts/script-TrendmicroHostRetrieveAll.yml",
                "depends_on": [
                    "trendmicro-host-retrieve-all"
                ]
            }
        },
        {
            "TrendmicroSecurityProfileAssignToHost": {
                "name": "TrendmicroSecurityProfileAssignToHost",
                "file_path": "Scripts/script-TrendmicroSecurityProfileAssignToHost.yml",
                "depends_on": [
                    "trendmicro-security-profile-assign-to-host"
                ]
            }
        },
        {
            "TrendmicroSecurityProfileRetrieveAll": {
                "name": "TrendmicroSecurityProfileRetrieveAll",
                "file_path": "Scripts/script-TrendmicroSecurityProfileRetrieveAll.yml",
                "depends_on": [
                    "trendmicro-security-profile-retrieve-all"
                ]
            }
        },
        {
            "TrendmicroSystemEventRetrieve": {
                "name": "TrendmicroSystemEventRetrieve",
                "file_path": "Scripts/script-TrendmicroSystemEventRetrieve.yml",
                "depends_on": [
                    "trendmicro-system-event-retrieve"
                ]
            }
        },
        {
            "TriagePhishing": {
                "name": "TriagePhishing",
                "file_path": "Scripts/script-TriagePhishing.yml",
                "deprecated": true
            }
        },
        {
            "UnEscapeIPs": {
                "name": "UnEscapeIPs",
                "file_path": "Scripts/script-UnEscapeIPs.yml",
                "tests": [
                    "UnEscapeIPs-Test"
                ]
            }
        },
        {
            "UnEscapeURLs": {
                "name": "UnEscapeURLs",
                "file_path": "Scripts/script-UnEscapeURLs.yml",
                "tests": [
                    "UnEscapeURL-Test"
                ]
            }
        },
        {
            "UnPackFile": {
                "name": "UnPackFile",
                "file_path": "Scripts/script-UnPackFile.yml",
                "script_executions": [
                    "getEntries",
                    "getFilePath"
                ]
            }
        },
        {
            "UnzipFile": {
                "name": "UnzipFile",
                "file_path": "Scripts/UnzipFile/UnzipFile.yml",
                "script_executions": [
                    "getEntries",
                    "getFilePath"
                ],
                "tests": [
                    "ZipFile-Test",
                    "UnzipFile-Test"
                ]
            }
        },
        {
            "URLDecode": {
                "name": "URLDecode",
                "file_path": "Scripts/script-URLDecode.yml",
                "tests": [
                    "URLDecode-Test"
                ]
            }
        },
        {
            "URLExtract": {
                "name": "URLExtract",
                "file_path": "Scripts/script-URLExtract.yml",
                "deprecated": true
            }
        },
        {
            "URLNumberOfAds": {
                "name": "URLNumberOfAds",
                "file_path": "Scripts/script-URLNumberOfAds.yml"
            }
        },
        {
            "URLReputation": {
                "name": "URLReputation",
                "file_path": "Scripts/script-URLReputation.yml",
                "script_executions": [
                    "url"
                ]
            }
        },
        {
            "UrlscanGetHttpTransactions": {
                "name": "UrlscanGetHttpTransactions",
                "file_path": "Scripts/script-urlscan-get-http-transactions.yml",
                "depends_on": [
                    "urlscan-poll-uri",
                    "urlscan-submit-url-command",
                    "urlscan-get-http-transaction-list"
                ],
                "command_to_integration": {
                    "urlscan-get-http-transaction-list": "urlscan.io",
                    "urlscan-submit-url-command": "urlscan.io",
                    "urlscan-poll-uri": "urlscan.io"
                }
            }
        },
        {
            "URLSSLVerification": {
                "name": "URLSSLVerification",
                "file_path": "Scripts/script-URLSSLVerification.yml"
            }
        },
        {
            "UserEnrichAD": {
                "name": "UserEnrichAD",
                "file_path": "Scripts/script-UserEnrichAD.yml",
                "depends_on": [
                    "ad-search"
                ],
                "script_executions": [
                    "ADGetUser"
                ],
                "command_to_integration": {
                    "ad-search": "activedir"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "UtilAnyResults": {
                "name": "UtilAnyResults",
                "file_path": "Scripts/script-UtilAnyResults.yml"
            }
        },
        {
            "ValidateErrorExistence": {
                "name": "ValidateErrorExistence",
                "file_path": "TestPlaybooks/script-ValidateErrorExistence.yml",
                "script_executions": [
                    "getEntries"
                ]
            }
        },
        {
            "VectraClassifier": {
                "name": "VectraClassifier",
                "file_path": "Scripts/script-VectraClassifier.yml",
                "deprecated": true,
                "depends_on": [
                    "vec-health"
                ]
            }
        },
        {
            "VectraDetections": {
                "name": "VectraDetections",
                "file_path": "Scripts/script-VectraDetections.yml",
                "deprecated": true,
                "depends_on": [
                    "vec-detections"
                ]
            }
        },
        {
            "VectraGetDetetctionsById": {
                "name": "VectraGetDetetctionsById",
                "file_path": "Scripts/script-VectraGetDetetctionsById.yml",
                "deprecated": true,
                "depends_on": [
                    "vec-get-detetctions-by-id"
                ]
            }
        },
        {
            "VectraGetHostById": {
                "name": "VectraGetHostById",
                "file_path": "Scripts/script-VectraGetHostById.yml",
                "deprecated": true,
                "depends_on": [
                    "vec-get-host-by-id"
                ]
            }
        },
        {
            "VectraHealth": {
                "name": "VectraHealth",
                "file_path": "Scripts/script-VectraHealth.yml",
                "deprecated": true,
                "depends_on": [
                    "vec-health"
                ]
            }
        },
        {
            "VectraHosts": {
                "name": "VectraHosts",
                "file_path": "Scripts/script-VectraHosts.yml",
                "deprecated": true,
                "depends_on": [
                    "vec-hosts"
                ]
            }
        },
        {
            "VectraSensors": {
                "name": "VectraSensors",
                "file_path": "Scripts/script-VectraSensors.yml",
                "deprecated": true,
                "depends_on": [
                    "vec-sensors"
                ]
            }
        },
        {
            "VectraSettings": {
                "name": "VectraSettings",
                "file_path": "Scripts/script-VectraSettings.yml",
                "deprecated": true,
                "depends_on": [
                    "vec-settings"
                ]
            }
        },
        {
            "VectraSummary": {
                "name": "VectraSummary",
                "file_path": "Scripts/script-VectraSummary.yml",
                "deprecated": true,
                "depends_on": [
                    "vec-health"
                ]
            }
        },
        {
            "VectraTriage": {
                "name": "VectraTriage",
                "file_path": "Scripts/script-VectraTriage.yml",
                "deprecated": true,
                "depends_on": [
                    "vec-triage"
                ]
            }
        },
        {
            "VerifyContext": {
                "name": "VerifyContext",
                "file_path": "Scripts/script-VerifyContext.yml",
                "deprecated": true,
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "VerifyContextFields": {
                "name": "VerifyContextFields",
                "file_path": "Scripts/script-VerifyContextFields.yml",
                "deprecated": true
            }
        },
        {
            "VerifyHumanReadableContains": {
                "name": "VerifyHumanReadableContains",
                "file_path": "Scripts/script-VerifyHumanReadableContains.yml"
            }
        },
        {
            "VerifyJSON": {
                "name": "VerifyJSON",
                "file_path": "Scripts/VerifyJSON/VerifyJSON.yml",
                "fromversion": "5.0.0"
            }
        },
        {
            "VerifyTableToMarkDown": {
                "name": "VerifyTableToMarkDown",
                "file_path": "TestPlaybooks/script-VerifyTableToMarkDown.yml"
            }
        },
        {
            "VerifyTreeToFlatObject": {
                "name": "VerifyTreeToFlatObject",
                "file_path": "TestPlaybooks/script-VerifyTreeToFlatObject.yml"
            }
        },
        {
            "VolApihooks": {
                "name": "VolApihooks",
                "file_path": "Scripts/script-VolApihooks.yml"
            }
        },
        {
            "Volatility": {
                "name": "Volatility",
                "file_path": "Scripts/script-Volatility.yml"
            }
        },
        {
            "VolConnscan": {
                "name": "VolConnscan",
                "file_path": "Scripts/script-VolConnscan.yml"
            }
        },
        {
            "VolDlllist": {
                "name": "VolDlllist",
                "file_path": "Scripts/script-VolDlllist.yml"
            }
        },
        {
            "VolGetProcWithMalNetConn": {
                "name": "VolGetProcWithMalNetConn",
                "file_path": "Scripts/script-VolGetProcWithMalNetConn.yml"
            }
        },
        {
            "VolImageinfo": {
                "name": "VolImageinfo",
                "file_path": "Scripts/script-VolImageinfo.yml"
            }
        },
        {
            "VolJson": {
                "name": "VolJson",
                "file_path": "Scripts/script-VolJson.yml"
            }
        },
        {
            "VolLDRModules": {
                "name": "VolLDRModules",
                "file_path": "Scripts/script-VolLDRModules.yml"
            }
        },
        {
            "VolMalfind": {
                "name": "VolMalfind",
                "file_path": "Scripts/script-VolMalfind.yml"
            }
        },
        {
            "VolMalfindDumpAgent": {
                "name": "VolMalfindDumpAgent",
                "file_path": "Scripts/script-VolMalfindDumpAgent.yml"
            }
        },
        {
            "VolNetworkConnections": {
                "name": "VolNetworkConnections",
                "file_path": "Scripts/script-VolNetworkConnections.yml"
            }
        },
        {
            "VolPSList": {
                "name": "VolPSList",
                "file_path": "Scripts/script-VolPSList.yml"
            }
        },
        {
            "VolRaw": {
                "name": "VolRaw",
                "file_path": "Scripts/script-VolRaw.yml"
            }
        },
        {
            "VolRunCmds": {
                "name": "VolRunCmds",
                "file_path": "Scripts/script-VolRunCmds.yml"
            }
        },
        {
            "WhereFieldEquals": {
                "name": "WhereFieldEquals",
                "file_path": "Scripts/script-WhereFieldEquals.yml"
            }
        },
        {
            "WhileLoop": {
                "name": "WhileLoop",
                "file_path": "Scripts/script-WhileLoop.yml",
                "deprecated": true
            }
        },
        {
            "Whois": {
                "name": "Whois",
                "file_path": "Scripts/script-Whois.yml",
                "toversion": "4.0.9",
                "deprecated": true,
                "depends_on": [
                    "whois"
                ]
            }
        },
        {
            "WhoisSummary": {
                "name": "WhoisSummary",
                "file_path": "Scripts/script-WhoisSummary.yml",
                "deprecated": true,
                "depends_on": [
                    "whois"
                ]
            }
        },
        {
            "WildfireReport": {
                "name": "WildfireReport",
                "file_path": "Scripts/script-WildfireReport.yml",
                "deprecated": true,
                "depends_on": [
                    "wildfire-report"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "WildfireUpload": {
                "name": "WildfireUpload",
                "file_path": "Scripts/script-WildfireUpload.yml",
                "deprecated": true,
                "depends_on": [
                    "wildfire-upload"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "WordTokenizer": {
                "name": "WordTokenizer",
                "file_path": "Scripts/script-WordTokenize_4.5.yml",
                "toversion": "4.5.9",
                "tests": [
                    "WordTokenizeTest"
                ]
            }
        },
        {
            "WordTokenizer": {
                "name": "WordTokenizer",
                "file_path": "Scripts/WordTokenizeTest/WordTokenizeTest.yml",
                "fromversion": "5.0.0",
                "tests": [
                    "WordTokenizeTest"
                ]
            }
        },
        {
            "WordTokenizerNLP": {
                "name": "WordTokenizerNLP",
                "file_path": "Scripts/WordTokenizerV2/WordTokenizer.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "XBInfo": {
                "name": "XBInfo",
                "file_path": "Scripts/script-XBInfo.yml"
            }
        },
        {
            "XBLockouts": {
                "name": "XBLockouts",
                "file_path": "Scripts/script-XBLockouts.yml",
                "depends_on": [
                    "xb-lockouts"
                ]
            }
        },
        {
            "XBNotable": {
                "name": "XBNotable",
                "file_path": "Scripts/script-XBNotable.yml",
                "depends_on": [
                    "xb-notable"
                ]
            }
        },
        {
            "XBTimeline": {
                "name": "XBTimeline",
                "file_path": "Scripts/script-XBTimeline.yml",
                "depends_on": [
                    "xb-timeline"
                ]
            }
        },
        {
            "XBTriggeredRules": {
                "name": "XBTriggeredRules",
                "file_path": "Scripts/script-XBTriggeredRules.yml",
                "depends_on": [
                    "xb-triggered-rules"
                ]
            }
        },
        {
            "XBUser": {
                "name": "XBUser",
                "file_path": "Scripts/script-XBUser.yml",
                "depends_on": [
                    "xb-user"
                ]
            }
        },
        {
            "XDRSyncScript": {
                "name": "XDRSyncScript",
                "file_path": "Packs/CortexXDR/Scripts/XDRSyncScript/XDRSyncScript.yml",
                "script_executions": [
                    "ScheduleCommand",
                    "StopScheduledTask",
                    "setIncident",
                    "setPlaybook"
                ],
                "tests": [
                    "No test - there are unit tests instead"
                ],
                "pack": "CortexXDR"
            }
        },
        {
            "YaraScan": {
                "name": "YaraScan",
                "file_path": "Scripts/YaraScan/YaraScan.yml",
                "script_executions": [
                    "getFilePath"
                ]
            }
        },
        {
            "ZipFile": {
                "name": "ZipFile",
                "file_path": "Scripts/ZipFile/ZipFile.yml",
                "script_executions": [
                    "getFilePath"
                ]
            }
        }
    ],
    "playbooks": [
        {
            "79b5d8a6-2636-480c-8e1c-a3ab2e58ffb5": {
                "name": "Detonate File - VMRay",
                "file_path": "Playbooks/playbook-VMRay-Detonate-File.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "vmray-upload-sample": "",
                    "vmray-get-sample": "",
                    "vmray-get-submission": "",
                    "vmray-get-analysis-by-sample": "",
                    "vmray-get-iocs": "",
                    "vmray-get-threat-indicators": ""
                }
            }
        },
        {
            "Access Investigation - Generic - NIST": {
                "name": "Access Investigation - Generic - NIST",
                "file_path": "Playbooks/playbook-NIST_-_Access_Investigation_-_Generic.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "GenerateInvestigationSummaryReport",
                    "ADGetUser"
                ],
                "implementing_playbooks": [
                    "IP Enrichment - Generic v2",
                    "Account Enrichment - Generic v2.1",
                    "NIST - Lessons Learned",
                    "Block IP - Generic v2"
                ],
                "command_to_integration": {
                    "ad-expire-password": "Active Directory Query v2",
                    "ad-disable-account": "",
                    "send-mail": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "access_investigation_-_generic": {
                "name": "Access Investigation - Generic",
                "file_path": "Playbooks/playbook-Access_Investigation_-_Generic.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "EmailAskUser",
                    "ADGetUser"
                ],
                "implementing_playbooks": [
                    "IP Enrichment - Generic",
                    "Account Enrichment - Generic"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "access_investigation_-_qradar": {
                "name": "Access Investigation - QRadar",
                "file_path": "Playbooks/playbook-Access_Investigation_-_QRadar.yml",
                "fromversion": "3.6.0",
                "implementing_playbooks": [
                    "Access Investigation - Generic",
                    "QRadar - Get offense correlations"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Accessdata_Dump_memory_for_malicious_process": {
                "name": "Accessdata: Dump memory for malicious process",
                "file_path": "Playbooks/playbook-Accessdata__Dump_memory_for_malicious_process.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "AccessdataCheckProcessExistsInSnapshot",
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "accessdata-legacyagent-get-processlist": "",
                    "accessdata-read-casefile": "Accessdata",
                    "accessdata-legacyagent-get-memorydump": "Accessdata",
                    "accessdata-get-jobstatus-processlist": "Accessdata",
                    "accessdata-get-jobstatus-memorydump": "Accessdata"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Account Enrichment": {
                "name": "Account Enrichment",
                "file_path": "Playbooks/playbook-Account_Enrichment.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Exists",
                    "ADGetUser"
                ],
                "tests": [
                    "No tests - Deprecated playbook"
                ]
            }
        },
        {
            "Account Enrichment": {
                "name": "Account Enrichment",
                "file_path": "Playbooks/playbook-Account_Enrichment_old.yml",
                "toversion": "3.1.0",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists",
                    "ADGetUser"
                ]
            }
        },
        {
            "Account Enrichment - Generic v2": {
                "name": "Account Enrichment - Generic v2",
                "file_path": "Playbooks/playbook-Account_Enrichment_-_Generic_v2.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "ADGetUser"
                ],
                "tests": [
                    "Account Enrichment - Generic v2 - Test"
                ]
            }
        },
        {
            "Account Enrichment - Generic v2.1": {
                "name": "Account Enrichment - Generic v2.1",
                "file_path": "Playbooks/playbook-Account_Enrichment_-_Generic_v2.1.yml",
                "fromversion": "4.1.0",
                "command_to_integration": {
                    "ad-get-user": ""
                },
                "tests": [
                    "Account Enrichment - Generic v2.1 - Test"
                ]
            }
        },
        {
            "account_enrichment_-_generic": {
                "name": "Account Enrichment - Generic",
                "file_path": "Playbooks/playbook-Account_Enrichment_-_Generic.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Exists",
                    "ADGetUser"
                ],
                "command_to_integration": {
                    "ad-get-user": ""
                }
            }
        },
        {
            "Active Directory - Get User Manager Details": {
                "name": "Active Directory - Get User Manager Details",
                "file_path": "Packs/Active_Directory_Query/Playbooks/playbook-Active_Directory_-_Get_User_Manager_Email.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Set"
                ],
                "command_to_integration": {
                    "ad-get-user": "Active Directory Query v2"
                },
                "tests": [
                    "Active Directory - Get User Manager Details - Test"
                ],
                "pack": "Active_Directory_Query"
            }
        },
        {
            "add_indicator_to_miner_-_palo_alto_mineMeld": {
                "name": "Add Indicator to Miner - Palo Alto MineMeld",
                "file_path": "Playbooks/playbook-Add_Indicator_to_Miner_-_Palo_Alto_MineMeld.yml",
                "fromversion": "4.0.0",
                "command_to_integration": {
                    "minemeld-add-to-miner": "Palo Alto Minemeld"
                },
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        },
        {
            "Akamai WAF - Activate Network Lists": {
                "name": "Akamai WAF - Activate Network Lists",
                "file_path": "Playbooks/playbook-Akamai_WAF_-_Activate_Network_Lists.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Print"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "akamai-activate-network-list": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Archer initiate incident": {
                "name": "Archer initiate incident",
                "file_path": "Playbooks/playbook-Archer_initiate_incident.yml",
                "fromversion": "3.5.0",
                "command_to_integration": {
                    "archer-get-file": "RSA Archer"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Arcsight - Get events related to the Case": {
                "name": "Arcsight - Get events related to the Case",
                "file_path": "Playbooks/playbook-Arcsight_-_Get_events_related_to_the_Case.yml",
                "implementing_scripts": [
                    "Exists",
                    "Set"
                ],
                "command_to_integration": {
                    "as-get-all-cases": "",
                    "as-get-case-event-ids": "",
                    "as-get-security-events": ""
                },
                "tests": [
                    "test Arcsight - Get events related to the Case"
                ]
            }
        },
        {
            "ArcSight Add Domain Indicators": {
                "name": "ArcSight Add Domain Indicators",
                "file_path": "Playbooks/playbook-ArcSight_Add_Domain_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "as-add-entries": "ArcSight ESM v2"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ArcSight Add Hash Indicators": {
                "name": "ArcSight Add Hash Indicators",
                "file_path": "Playbooks/playbook-ArcSight_Add_Hash_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "as-add-entries": "ArcSight ESM v2"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ArcSight Add IP Indicators": {
                "name": "ArcSight Add IP Indicators",
                "file_path": "Playbooks/playbook-ArcSight_Add_IP_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "as-add-entries": "ArcSight ESM v2"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ATD - Detonate File": {
                "name": "ATD - Detonate File",
                "file_path": "Playbooks/playbook-Detonate_File_-_McAfee_ATD.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "atd-get-report": "",
                    "atd-check-status": "",
                    "atd-file-upload": ""
                },
                "tests": [
                    "Test Playbook McAfee ATD",
                    "Detonate File - Generic Test"
                ]
            }
        },
        {
            "ATD - Detonate File": {
                "name": "ATD - Detonate File",
                "file_path": "Playbooks/playbook-ATD_Detonate_File_3_6.yml",
                "toversion": "3.6.0",
                "implementing_scripts": [
                    "Exists"
                ],
                "command_to_integration": {
                    "detonate-file": "McAfee Advanced Threat Defense"
                }
            }
        },
        {
            "Autofocus Query Samples, Sessions and Tags": {
                "name": "Autofocus Query Samples, Sessions and Tags",
                "file_path": "Playbooks/playbook-Autofocus_Query_Samples_and_Sessions.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "AutoFocusPolling"
                ],
                "command_to_integration": {
                    "autofocus-search-samples": "",
                    "autofocus-search-sessions": "",
                    "autofocus-top-tags-search": ""
                },
                "tests": [
                    "Autofocus Query Samples, Sessions and Tags Test Playbook"
                ]
            }
        },
        {
            "AutoFocusPolling": {
                "name": "AutoFocusPolling",
                "file_path": "Playbooks/playbook-AutoFocusPolling.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "RunPollingCommand",
                    "ScheduleGenericPolling"
                ],
                "tests": [
                    "Autofocus Query Samples, Sessions and Tags Test Playbook"
                ]
            }
        },
        {
            "Block File - Cybereason": {
                "name": "Block File - Cybereason",
                "file_path": "Playbooks/playbook-Block_File_-_Cybereason.yml",
                "fromversion": "4.5.0",
                "command_to_integration": {
                    "cybereason-prevent-file": "Cybereason"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Block File - Cylance Protect v2": {
                "name": "Block File - Cylance Protect v2",
                "file_path": "Playbooks/playbook-Block_File_-_Cylance_Protect_v2.yml",
                "fromversion": "4.5.0",
                "command_to_integration": {
                    "cylance-protect-add-hash-to-list": "Cylance Protect v2"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Block File - Generic v2": {
                "name": "Block File - Generic v2",
                "file_path": "Playbooks/playbook-Block_File_-_Generic_v2.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "Traps Quarantine Event",
                    "Block File - Cybereason",
                    "Block File - Carbon Black Response",
                    "Traps Blacklist File",
                    "Block File - Cylance Protect v2"
                ],
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        },
        {
            "Block Indicators - Generic v2": {
                "name": "Block Indicators - Generic v2",
                "file_path": "Playbooks/playbook-Block_Indicators_-_Generic_v2.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "Block Account - Generic",
                    "Block URL - Generic",
                    "Block File - Generic v2",
                    "Block IP - Generic v2"
                ],
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Block IOCs from CSV - External Dynamic List": {
                "name": "Block IOCs from CSV - External Dynamic List",
                "file_path": "Playbooks/playbook-Block_IOCs_from_CSV_-_External_Dynamic_List.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "ParseCSV"
                ],
                "implementing_playbooks": [
                    "PAN-OS - Block IP and URL - External Dynamic List",
                    "PAN-OS - Block Domain - External Dynamic List"
                ],
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Block IP - Generic v2": {
                "name": "Block IP - Generic v2",
                "file_path": "Playbooks/playbook-Block_IP_-_Generic_v2.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "PAN-OS - Block IP - Custom Block Rule",
                    "PAN-OS DAG Configuration",
                    "PAN-OS - Block IP - Static Address Group",
                    "PAN-OS - Block IP and URL - External Dynamic List",
                    "Add Indicator to Miner - Palo Alto MineMeld"
                ],
                "command_to_integration": {
                    "checkpoint-block-ip": "",
                    "zscaler-blacklist-ip": "Zscaler"
                },
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        },
        {
            "block_account_-_generic": {
                "name": "Block Account - Generic",
                "file_path": "Playbooks/playbook-Block_Account_-_Generic.yml",
                "fromversion": "4.0.0",
                "command_to_integration": {
                    "ad-disable-account": "activedir",
                    "panorama-register-user-tag": ""
                },
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        },
        {
            "block_endpoint_-_carbon_black_response": {
                "name": "Block Endpoint - Carbon Black Response",
                "file_path": "Playbooks/playbook-Block_Endpoint_-_Carbon_Black_Response.yml",
                "fromversion": "3.5.0",
                "command_to_integration": {
                    "cb-sensor-info": "carbonblack",
                    "cb-quarantine-device": "carbonblack"
                }
            }
        },
        {
            "block_file_-_carbon_black_response": {
                "name": "Block File - Carbon Black Response",
                "file_path": "Playbooks/playbook-Block_File_-_Carbon_Black_Response.yml",
                "fromversion": "4.0.0",
                "command_to_integration": {
                    "cb-block-hash": "",
                    "cb-get-hash-blacklist": ""
                },
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        },
        {
            "block_file_-_generic": {
                "name": "Block File - Generic",
                "file_path": "Playbooks/playbook-Block_File_-_Generic.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "Block File - Carbon Black Response"
                ],
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        },
        {
            "block_indicators_-_generic": {
                "name": "Block Indicators - Generic",
                "file_path": "Playbooks/playbook-Block_Indicators_-_Generic.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "Block IP - Generic",
                    "Block URL - Generic",
                    "Block File - Generic",
                    "Block Account - Generic",
                    "Block IP - Generic v2"
                ],
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        },
        {
            "block_ip_-_generic": {
                "name": "Block IP - Generic",
                "file_path": "Playbooks/playbook-Block_IP_-_Generic.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "PanoramaBlockIP"
                ],
                "implementing_playbooks": [
                    "Add Indicator to Miner - Palo Alto MineMeld"
                ],
                "command_to_integration": {
                    "checkpoint-block-ip": "",
                    "zscaler-blacklist-ip": "Zscaler"
                },
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        },
        {
            "block_url_-_generic": {
                "name": "Block URL - Generic",
                "file_path": "Playbooks/playbook-Block_URL_-_Generic.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "PAN-OS - Block IP and URL - External Dynamic List",
                    "PAN-OS - Block URL - Custom URL Category",
                    "Add Indicator to Miner - Palo Alto MineMeld"
                ],
                "command_to_integration": {
                    "zscaler-blacklist-url": ""
                },
                "tests": [
                    "block_indicators_-_generic_-_test"
                ]
            }
        },
        {
            "Brute Force Investigation - Generic": {
                "name": "Brute Force Investigation - Generic",
                "file_path": "Playbooks/playbook-Brute_Force_Investigation_-_Generic.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "GenerateInvestigationSummaryReport"
                ],
                "implementing_playbooks": [
                    "Calculate Severity - Critical Assets v2",
                    "IP Enrichment - Generic v2",
                    "Block Indicators - Generic v2",
                    "Isolate Endpoint - Generic",
                    "Account Enrichment - Generic v2.1"
                ],
                "command_to_integration": {
                    "ad-expire-password": "",
                    "send-mail": "",
                    "ad-disable-account": "",
                    "ad-enable-account": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Brute Force Investigation - Generic - SANS": {
                "name": "Brute Force Investigation - Generic - SANS",
                "file_path": "Playbooks/playbook-Brute_Force_Investigation_-_Generic_-_SANS.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "GenerateInvestigationSummaryReport"
                ],
                "implementing_playbooks": [
                    "SANS - Lessons Learned",
                    "Calculate Severity - Critical Assets v2",
                    "IP Enrichment - Generic v2",
                    "Block Indicators - Generic v2",
                    "Isolate Endpoint - Generic",
                    "Account Enrichment - Generic v2.1"
                ],
                "command_to_integration": {
                    "ad-expire-password": "",
                    "send-mail": "",
                    "ad-disable-account": "",
                    "ad-enable-account": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "C2SEC-Domain Scan": {
                "name": "C2SEC-Domain Scan",
                "file_path": "Playbooks/playbook-C2SEC-Domain_Scan.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "irisk-rescan-domain": "",
                    "irisk-get-domain-issues": "",
                    "irisk-get-scan-results": "",
                    "irisk-get-scan-status": ""
                },
                "tests": [
                    "No test - covered in the C2sec test"
                ]
            }
        },
        {
            "Calculate Severity - Critical Assets v2": {
                "name": "Calculate Severity - Critical Assets v2",
                "file_path": "Playbooks/playbook-Calculate_Severity_-_Critical_Assets_v2.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "PopulateCriticalAssets",
                    "Set"
                ],
                "tests": [
                    "Calculate Severity - Generic v2 - Test"
                ]
            }
        },
        {
            "Calculate Severity - Generic": {
                "name": "Calculate Severity - Generic",
                "file_path": "Playbooks/playbook-Calculate_Severity_-_Generic_3_5.yml",
                "toversion": "3.5.1",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Exists",
                    "StringContains"
                ]
            }
        },
        {
            "Calculate Severity - Generic": {
                "name": "Calculate Severity - Generic",
                "file_path": "Playbooks/playbook-Calculate_Severity_-_Generic_3_1.yml",
                "toversion": "3.1.0",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists",
                    "Print",
                    "StringContains"
                ],
                "tests": [
                    "No test - tested manually"
                ]
            }
        },
        {
            "Calculate Severity - Generic": {
                "name": "Calculate Severity - Generic",
                "file_path": "Playbooks/playbook-Calculate_Severity_-_Generic.yml",
                "fromversion": "3.6.0",
                "implementing_playbooks": [
                    "Calculate Severity - 3rd-party integrations",
                    "Calculate Severity - Critical assets",
                    "Calculate Severity - Indicators DBotScore"
                ],
                "tests": [
                    "no test"
                ]
            }
        },
        {
            "Calculate Severity - Generic v2": {
                "name": "Calculate Severity - Generic v2",
                "file_path": "Playbooks/playbook-Calculate_Severity_-_Generic_v2.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "Calculate Severity By Highest DBotScore",
                    "Calculate Severity - Critical Assets v2",
                    "Calculate Severity By Email Authenticity"
                ],
                "tests": [
                    "Calculate Severity - Generic v2 - Test"
                ]
            }
        },
        {
            "Calculate Severity - Standard": {
                "name": "Calculate Severity - Standard",
                "file_path": "Playbooks/playbook-Calculate_Severity_-_Standard.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "Calculate Severity By Highest DBotScore"
                ],
                "tests": [
                    "Calculate Severity - Standard - Test"
                ]
            }
        },
        {
            "Calculate Severity By Email Authenticity": {
                "name": "Calculate Severity By Email Authenticity",
                "file_path": "Playbooks/playbook-Calculate_Severity_By_Email_Authenticity.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Set"
                ],
                "tests": [
                    "Calculate Severity - Generic v2 - Test"
                ]
            }
        },
        {
            "Calculate Severity By Highest DBotScore": {
                "name": "Calculate Severity By Highest DBotScore",
                "file_path": "Playbooks/playbook-Calculate_Severity_By_Highest_DBotScore.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Set"
                ],
                "tests": [
                    "Calculate Severity - Standard - Test"
                ]
            }
        },
        {
            "calculate_severity_-_3rd-party_integrations": {
                "name": "Calculate Severity - 3rd-party integrations",
                "file_path": "Playbooks/playbook-Calculate_Severity_-_3rd-party_integrations.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "Set"
                ]
            }
        },
        {
            "calculate_severity_-_critical_assets": {
                "name": "Calculate Severity - Critical assets",
                "file_path": "Playbooks/playbook-Calculate_Severity_-_Critical_assets.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "tests": [
                    "calculate_severity_-_critical_assets_-_test"
                ]
            }
        },
        {
            "calculate_severity_-_critical_assets": {
                "name": "Calculate Severity - Critical assets",
                "file_path": "Playbooks/playbook-Calculate_Severity_-_Critical_assets_3_6.yml",
                "toversion": "3.6.1",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "Exists",
                    "StringContains",
                    "Set"
                ]
            }
        },
        {
            "calculate_severity_-_indicators_dbotscore": {
                "name": "Calculate Severity - Indicators DBotScore",
                "file_path": "Playbooks/playbook-Calculate_Severity_-_Indicators_DBotScore.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "Set"
                ]
            }
        },
        {
            "Carbon Black Rapid IOC Hunting": {
                "name": "Carbon Black Rapid IOC Hunting",
                "file_path": "Playbooks/playbook-Carbon_Black_Rapid_IOC_Hunting.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists",
                    "CBFindHash"
                ]
            }
        },
        {
            "Claroty Incident": {
                "name": "Claroty Incident",
                "file_path": "Packs/Claroty/Playbooks/playbook-Claroty_Incident.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "claroty-query-alerts": "",
                    "claroty-resolve-alert": ""
                },
                "tests": [
                    "No Test"
                ],
                "pack": "Claroty"
            }
        },
        {
            "Claroty Manage Asset CVEs": {
                "name": "Claroty Manage Asset CVEs",
                "file_path": "Packs/Claroty/Playbooks/playbook-Claroty_Manage_Asset_CVEs.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "claroty-get-assets": "",
                    "Set": "Set"
                },
                "tests": [
                    "No Test"
                ],
                "pack": "Claroty"
            }
        },
        {
            "close_incident_if_duplicate_found": {
                "name": "DeDup incidents",
                "file_path": "Playbooks/playbook-DeDup_incidents.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "CloseInvestigationAsDuplicate",
                    "FindSimilarIncidents"
                ],
                "tests": [
                    "test_similar_incidents"
                ]
            }
        },
        {
            "Code42 Exfiltration Playbook": {
                "name": "Code42 Exfiltration Playbook",
                "file_path": "Packs/Code42/Playbooks/playbook-Code42_Exfiltration_Playbook.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "Active Directory - Get User Manager Details"
                ],
                "command_to_integration": {
                    "code42-alert-resolve": "",
                    "cs-falcon-search-device": "CrowdstrikeFalcon",
                    "jira-create-issue": "jira-v2",
                    "send-mail": "",
                    "cs-falcon-contain-host": ""
                },
                "tests": [
                    "No Test"
                ],
                "pack": "Code42"
            }
        },
        {
            "Code42 File Search": {
                "name": "Code42 File Search",
                "file_path": "Packs/Code42/Playbooks/playbook-Code42_File_Search.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "code42-securitydata-search": ""
                },
                "pack": "Code42"
            }
        },
        {
            "Convert file hash to corresponding hashes": {
                "name": "Convert file hash to corresponding hashes",
                "file_path": "Playbooks/playbook-Convert_file_hash_to_corresponding_hashes.yml",
                "fromversion": "4.5.0",
                "command_to_integration": {
                    "file": ""
                },
                "tests": [
                    "Test Convert file hash to corresponding hashes"
                ]
            }
        },
        {
            "Cortex XDR - Isolate Endpoint": {
                "name": "Cortex XDR - Isolate Endpoint",
                "file_path": "Packs/CortexXDR/Playbooks/playbook-Cortex_XDR_-_Isolate_Endpoint.yml",
                "fromversion": "4.5.0",
                "command_to_integration": {
                    "xdr-isolate-endpoint": "Cortex XDR - IR"
                },
                "tests": [
                    "No Test"
                ],
                "pack": "CortexXDR"
            }
        },
        {
            "Cortex XDR - Port Scan": {
                "name": "Cortex XDR - Port Scan",
                "file_path": "Packs/CortexXDR/Playbooks/Cortex_XDR_-_Port_Scan.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "StopScheduledTask",
                    "IsIPInRanges",
                    "XDRSyncScript",
                    "SetAndHandleEmpty"
                ],
                "implementing_playbooks": [
                    "Calculate Severity - Generic v2",
                    "PANW - Hunting and threat detection by indicator type V2",
                    "Block File - Generic v2",
                    "Isolate Endpoint - Generic",
                    "IP Enrichment - Internal - Generic v2",
                    "Block IP - Generic v2"
                ],
                "command_to_integration": {
                    "send-mail": "",
                    "xdr-update-incident": "",
                    "xdr-get-endpoints": ""
                },
                "tests": [
                    "no test"
                ],
                "pack": "CortexXDR"
            }
        },
        {
            "Cortex XDR Incident Handling": {
                "name": "Cortex XDR Incident Handling",
                "file_path": "Playbooks/playbook-Cortex_XDR_Incident_Handling.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "XDRSyncScript",
                    "StopScheduledTask"
                ],
                "implementing_playbooks": [
                    "Calculate Severity - Standard",
                    "Palo Alto Networks - Malware Remediation"
                ],
                "command_to_integration": {
                    "xdr-update-incident": "",
                    "autofocus-sample-analysis": ""
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Cortex XDR Incident Handling": {
                "name": "Cortex XDR Incident Handling",
                "file_path": "Packs/CortexXDR/Playbooks/Cortex_XDR_Incident_Handling.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "XDRSyncScript",
                    "StopScheduledTask"
                ],
                "implementing_playbooks": [
                    "Calculate Severity - Standard",
                    "Palo Alto Networks - Malware Remediation"
                ],
                "command_to_integration": {
                    "xdr-update-incident": "",
                    "autofocus-sample-analysis": ""
                },
                "tests": [
                    "No Test"
                ],
                "pack": "CortexXDR"
            }
        },
        {
            "Cortex XDR Incident Sync": {
                "name": "Cortex XDR Incident Sync",
                "file_path": "Playbooks/playbook-PaloAltoNetworks_Cortex_XDR_Incident_Sync.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "XDRSyncScript",
                    "StopScheduledTask"
                ],
                "command_to_integration": {
                    "xdr-update-incident": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Cortex XDR Incident Sync": {
                "name": "Cortex XDR Incident Sync",
                "file_path": "Packs/CortexXDR/Playbooks/PaloAltoNetworks_Cortex_XDR_Incident_Sync.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "XDRSyncScript",
                    "StopScheduledTask"
                ],
                "command_to_integration": {
                    "xdr-update-incident": ""
                },
                "tests": [
                    "No test"
                ],
                "pack": "CortexXDR"
            }
        },
        {
            "CrowdStrike Falcon Sandbox - Detonate file": {
                "name": "CrowdStrike Falcon Sandbox - Detonate file",
                "file_path": "Playbooks/playbook-Detonate_File_-_CrowdStrike_Falcon_Sandbox_3_6_0.yml",
                "toversion": "3.6.0",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Set"
                ],
                "command_to_integration": {
                    "crowdstrike-detonate-file": "VxStream"
                }
            }
        },
        {
            "CrowdStrike Falcon Sandbox - Detonate file": {
                "name": "CrowdStrike Falcon Sandbox - Detonate file",
                "file_path": "Playbooks/playbook-Detonate_File_-_CrowdStrike_Falcon_Sandbox.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "crowdstrike-scan": "VxStream",
                    "crowdstrike-submit-sample": "VxStream"
                },
                "tests": [
                    "VxStream Test"
                ]
            }
        },
        {
            "crowdstrike_endpoint_enrichment": {
                "name": "CrowdStrike Endpoint Enrichment",
                "file_path": "Playbooks/playbook-CrowdStrike_Endpoint_Enrichment.yml",
                "fromversion": "3.5.0",
                "command_to_integration": {
                    "cs-device-details": "",
                    "cs-device-search": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "CVE Enrichment - Generic v2": {
                "name": "CVE Enrichment - Generic v2",
                "file_path": "Playbooks/playbook-CVE_Enrichment_-_Generic_v2.yml",
                "fromversion": "4.5.0",
                "command_to_integration": {
                    "cve-search": "XFE",
                    "vulndb-get-vuln-by-cve-id": "VulnDB"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "cve_enrichment_-_generic": {
                "name": "CVE Enrichment - Generic",
                "file_path": "Playbooks/playbook-CVE_Enrichment_-_Generic.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "cveReputation"
                ],
                "command_to_integration": {
                    "cve-search": "XFE"
                }
            }
        },
        {
            "Cymulate Immediate Threats": {
                "name": "Cymulate Immediate Threats",
                "file_path": "Packs/Cymulate/Playbooks/playbook-Cymulate_Immediate_Threats.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "cymulate-get-incident-info": ""
                },
                "tests": [
                    "No tests"
                ],
                "pack": "Cymulate"
            }
        },
        {
            "D2 - Endpoint data collection": {
                "name": "D2 - Endpoint data collection",
                "file_path": "Playbooks/playbook-D2_-_Endpoint_data_collection.yml",
                "implementing_scripts": [
                    "IncidentAddSystem",
                    "AreValuesEqual",
                    "FetchFileD2",
                    "ActiveUsersD2",
                    "Exists",
                    "D2ExecuteCommand"
                ],
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "DBot Create Phishing Classifier V2": {
                "name": "DBot Create Phishing Classifier V2",
                "file_path": "Playbooks/playbook-DBot_Create_Phishing_Classifier_V2.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "GetIncidentsByQuery",
                    "Base64ListToFile",
                    "DBotPreProcessTextData",
                    "DBotTrainTextClassifierV2"
                ],
                "tests": [
                    "Create Phishing Classifier V2 ML Test"
                ]
            }
        },
        {
            "DBot Create Phishing Classifier V2 Job": {
                "name": "DBot Create Phishing Classifier V2 Job",
                "file_path": "Playbooks/playbook-DBot_Create_Phishing_Classifier_V2_Job.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "DBot Create Phishing Classifier V2"
                ],
                "tests": [
                    "Create Phishing Classifier V2 ML Test"
                ]
            }
        },
        {
            "dbot_indicator_enrichment_-_generic": {
                "name": "DBot Indicator Enrichment - Generic",
                "file_path": "Playbooks/playbook-DBot_Indicator_Enrichment_-_Generic.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "GetIndicatorDBotScore"
                ],
                "tests": [
                    "no test"
                ]
            }
        },
        {
            "DBotCreatePhishingClassifier": {
                "name": "DBot Create Phishing Classifier",
                "file_path": "Playbooks/playbook-DBotCreatePhishingClassifier.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "DBotPredictPhishingEvaluation",
                    "Base64ListToFile",
                    "DBotTrainTextClassifier",
                    "DBotPreparePhishingData"
                ],
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        },
        {
            "DBotCreatePhishingClassifierJob": {
                "name": "DBot Create Phishing Classifier Job",
                "file_path": "Playbooks/playbook-DBotCreatePhishingClassifierJob.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "DBot Create Phishing Classifier"
                ],
                "tests": [
                    "CreatePhishingClassifierMLTest"
                ]
            }
        },
        {
            "Dedup - Generic v2": {
                "name": "Dedup - Generic v2",
                "file_path": "Playbooks/playbook-Dedup_-_Generic_v2.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "FindSimilarIncidentsByText",
                    "CloseInvestigationAsDuplicate",
                    "GetDuplicatesMlv2",
                    "FindSimilarIncidents"
                ],
                "tests": [
                    "Dedup - Generic v2 - Test"
                ]
            }
        },
        {
            "dedup_-_generic": {
                "name": "Dedup - Generic",
                "file_path": "Playbooks/playbook-Dedup_-_Generic.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "FindSimilarIncidentsByText",
                    "CloseInvestigationAsDuplicate",
                    "GetDuplicatesMlv2",
                    "FindSimilarIncidents"
                ],
                "tests": [
                    "dedup_-_generic_-_test"
                ]
            }
        },
        {
            "dedup_incidents_-_ml": {
                "name": "DeDup incidents - ML",
                "file_path": "Playbooks/playbook-DeDup_incidents_-_ML.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "CloseInvestigationAsDuplicate",
                    "Print",
                    "GetDuplicatesMlv2"
                ],
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Demisto_Self-Defense_-_Account_policy_monitoring_playbook": {
                "name": "Demisto Self-Defense - Account policy monitoring playbook",
                "file_path": "Playbooks/playbook-Demisto_Self-Defense_-_Account_policy_monitoring_playbook.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "CloseInvestigation"
                ],
                "command_to_integration": {
                    "demisto-api-get": "Demisto REST API",
                    "slack-send": "slack",
                    "TwilioSendSMS": "Twilio"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Detonate File - ANYRUN": {
                "name": "Detonate File - ANYRUN",
                "file_path": "Playbooks/playbook-Detonate_File_-_ANYRUN.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "anyrun-run-analysis": "ANYRUN",
                    "anyrun-get-report": "ANYRUN"
                }
            }
        },
        {
            "Detonate File - BitDam": {
                "name": "Detonate File - BitDam",
                "file_path": "Playbooks/playbook-BitDam_Scan_File.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "bitdam-get-verdict": "",
                    "bitdam-upload-file": ""
                },
                "tests": [
                    "Detonate File - BitDam Test"
                ]
            }
        },
        {
            "Detonate File - Cuckoo": {
                "name": "Detonate File - Cuckoo",
                "file_path": "Playbooks/playbook-Detonate_File_-_Cuckoo.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Sleep"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "cuckoo-create-task-from-file": "",
                    "cuckoo-get-task-report": "",
                    "cuckoo-view-task": "",
                    "cuckoo-task-screenshot": ""
                },
                "tests": [
                    "CuckooTest"
                ]
            }
        },
        {
            "Detonate File - FireEye AX": {
                "name": "Detonate File - FireEye AX",
                "file_path": "Playbooks/playbook-Detonate_File_-_FireEye_AX.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "fe-submit": "fireeye",
                    "fe-submit-result": "fireeye"
                },
                "tests": [
                    "Detonate File - FireEye AX - Test"
                ]
            }
        },
        {
            "Detonate File - Generic": {
                "name": "Detonate File - Generic",
                "file_path": "Playbooks/playbook-Detonate_File_-_Generic.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "Detonate File - VMRay",
                    "Detonate File - HybridAnalysis",
                    "ATD - Detonate File",
                    "CrowdStrike Falcon Sandbox - Detonate file",
                    "WildFire - Detonate file",
                    "Detonate File - ThreatGrid",
                    "Detonate File - Lastline v2",
                    "Detonate File - FireEye AX",
                    "Detonate File - Cuckoo",
                    "Detonate File - JoeSecurity",
                    "Detonate File - SNDBOX",
                    "Detonate File - ANYRUN"
                ],
                "tests": [
                    "Detonate File - Generic Test"
                ]
            }
        },
        {
            "Detonate File - Generic": {
                "name": "Detonate File - Generic",
                "file_path": "Playbooks/playbook-Detonate_File_-_Generic_3_6_0.yml",
                "toversion": "3.6.0",
                "fromversion": "3.5.0",
                "implementing_playbooks": [
                    "CrowdStrike Falcon Sandbox - Detonate file",
                    "WildFire - Detonate file"
                ]
            }
        },
        {
            "Detonate File - HybridAnalysis": {
                "name": "Detonate File - HybridAnalysis",
                "file_path": "Playbooks/playbook-Detonate_File_-_HybridAnalysis.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "hybrid-analysis-submit-sample": "",
                    "hybrid-analysis-scan": ""
                },
                "tests": [
                    "Detonate File - HybridAnalysis - Test"
                ]
            }
        },
        {
            "Detonate File - Lastline": {
                "name": "Detonate File - Lastline",
                "file_path": "Playbooks/playbook-Detonate_File_-_Lastline.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "lastline-get-report": "",
                    "lastline-upload-file": "",
                    "lastline-check-status": ""
                },
                "tests": [
                    "Detonate File - Generic Test"
                ]
            }
        },
        {
            "Detonate File - Lastline v2": {
                "name": "Detonate File - Lastline v2",
                "file_path": "Playbooks/playbook-Detonate_File_-_Lastline_v2.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "lastline-get-report": "",
                    "lastline-upload-file": "",
                    "lastline-check-status": ""
                },
                "tests": [
                    "Detonate File - Generic Test"
                ]
            }
        },
        {
            "Detonate File - SNDBOX": {
                "name": "Detonate File - SNDBOX",
                "file_path": "Playbooks/playbook-Detonate_File_-_SNDBOX.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "sndbox-download-report": "",
                    "sndbox-analysis-info": "",
                    "sndbox-analysis-submit-sample": ""
                },
                "tests": [
                    "Detonate File - SNDBOX - Test"
                ]
            }
        },
        {
            "Detonate File - Symantec Blue Coat Content and Malware Analysis Beta": {
                "name": "Detonate File - Symantec Blue Coat Content and Malware Analysis Beta",
                "file_path": "Beta_Integrations/playbook-SymantecBlueCoatMalwareAnalysis_DetonateFile.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Sleep",
                    "Set"
                ],
                "command_to_integration": {
                    "symantec-cma-get-report": "",
                    "symantec-cma-upload-file": ""
                }
            }
        },
        {
            "Detonate File - ThreatStream": {
                "name": "Detonate File - ThreatStream",
                "file_path": "Playbooks/playbook-Detonate_File_-_ThreatStream.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "threatstream-analysis-report": "",
                    "threatstream-submit-to-sandbox": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Detonate File - Trend Micro Deep Discovery Analyzer Beta": {
                "name": "Detonate File - Trend Micro Deep Discovery Analyzer Beta",
                "file_path": "Beta_Integrations/playbook-TrendMicro_DDA_DetonateFile.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "trendmicro-dda-upload-file": "",
                    "trendmicro-dda-check-status": "",
                    "trendmicro-dda-get-report": ""
                },
                "tests": [
                    "No Test - run \"Test Playbook TrendMicroDDA\" manually"
                ]
            }
        },
        {
            "Detonate File From URL - ANYRUN": {
                "name": "Detonate File From URL - ANYRUN",
                "file_path": "Playbooks/playbook-Detonate_File_From_URL_-_ANYRUN.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "anyrun-run-analysis": "ANYRUN",
                    "anyrun-get-report": "ANYRUN"
                }
            }
        },
        {
            "Detonate files": {
                "name": "Detonate files",
                "file_path": "Playbooks/playbook-Detonate_files_V3_1_0.yml",
                "toversion": "3.1.0",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists",
                    "Print",
                    "SandboxDetonateFile"
                ],
                "tests": [
                    "No tests - Deprecated playbook"
                ]
            }
        },
        {
            "Detonate URL - ANYRUN": {
                "name": "Detonate URL - ANYRUN",
                "file_path": "Playbooks/playbook-Detonate_URL_-_ANYRUN.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "anyrun-run-analysis": "ANYRUN",
                    "anyrun-get-report": "ANYRUN"
                }
            }
        },
        {
            "Detonate URL - Cuckoo": {
                "name": "Detonate URL - Cuckoo",
                "file_path": "Playbooks/playbook-Detonate_URL_-_Cuckoo.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Sleep"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "cuckoo-create-task-from-url": "",
                    "cuckoo-get-task-report": "",
                    "cuckoo-view-task": ""
                },
                "tests": [
                    "CuckooTest"
                ]
            }
        },
        {
            "Detonate URL - Lastline": {
                "name": "Detonate URL - Lastline",
                "file_path": "Playbooks/playbook-Detonate_URL_-_Lastline.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "lastline-upload-url": "",
                    "lastline-get-report": "",
                    "lastline-check-status": ""
                },
                "tests": [
                    "Detonate URL - Generic Test"
                ]
            }
        },
        {
            "Detonate URL - Lastline v2": {
                "name": "Detonate URL - Lastline v2",
                "file_path": "Playbooks/playbook-Detonate_URL_-_Lastline_v2.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "lastline-upload-url": "",
                    "lastline-get-report": "",
                    "lastline-check-status": ""
                },
                "tests": [
                    "Detonate URL - Generic Test"
                ]
            }
        },
        {
            "Detonate URL - Phish.AI": {
                "name": "Detonate URL - Phish.AI",
                "file_path": "Playbooks/playbook-Detonate_URL_-_PhishAI.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "phish-ai-check-status": "",
                    "phish-ai-scan-url": ""
                },
                "tests": [
                    "Test-Detonate URL - Phish.AI"
                ]
            }
        },
        {
            "Detonate URL - Symantec Blue Coat Content and Malware Analysis Beta": {
                "name": "Detonate URL - Symantec Blue Coat Content and Malware Analysis Beta",
                "file_path": "Beta_Integrations/playbook-SymantecBlueCoatMalwareAnalysis_DetonateURL.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Sleep"
                ],
                "command_to_integration": {
                    "symantec-cma-get-report": "",
                    "symantec-cma-upload-url": ""
                }
            }
        },
        {
            "Detonate URL - ThreatStream": {
                "name": "Detonate URL - ThreatStream",
                "file_path": "Playbooks/playbook-Detonate_URL_-_ThreatStream.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "threatstream-submit-to-sandbox": "",
                    "threatstream-analysis-report": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Detonate URL - Trend Micro Deep Discovery Analyzer Beta": {
                "name": "Detonate URL - Trend Micro Deep Discovery Analyzer Beta",
                "file_path": "Beta_Integrations/playbook-TrendMicro_DDA_DetonateURL.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "trendmicro-dda-upload-url": "",
                    "trendmicro-dda-check-status": "",
                    "trendmicro-dda-get-report": ""
                },
                "tests": [
                    "No Test - run \"Test Playbook TrendMicroDDA\" manually"
                ]
            }
        },
        {
            "Detonate URL - WildFire-v2": {
                "name": "Detonate URL - WildFire-v2",
                "file_path": "Playbooks/playbook-Detonate_URL_-_WildFire-v2.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "wildfire-upload-file-url": "WildFire-v2",
                    "wildfire-report": "WildFire-v2",
                    "wildfire-upload-url": "WildFire-v2"
                },
                "tests": [
                    "Detonate URL - WildFire-v2 - Test"
                ]
            }
        },
        {
            "detonate_file_-_threatgrid": {
                "name": "Detonate File - ThreatGrid",
                "file_path": "Playbooks/playbook-Detonate_File_-_ThreatGrid.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "threat-grid-get-samples-state": "",
                    "threat-grid-upload-sample": ""
                },
                "tests": [
                    "Detonate File - Generic Test"
                ]
            }
        },
        {
            "detonate_file_from_url_-_joesecurity": {
                "name": "Detonate File From URL - JoeSecurity",
                "file_path": "Playbooks/playbook-Detonate_File_From_URL_-_JoeSecurity.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "joe-analysis-submit-sample": "Joe Security",
                    "joe-download-report": "Joe Security"
                }
            }
        },
        {
            "detonate_file_from_url_-_wildfire": {
                "name": "Detonate File From URL - WildFire",
                "file_path": "Playbooks/playbook-Detonate_File_From_URL_-_WildFire.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "wildfire-upload-file-url": "",
                    "wildfire-report": ""
                },
                "tests": [
                    "Wildfire Test"
                ]
            }
        },
        {
            "detonate_url_-_crowdstrike": {
                "name": "Detonate URL - CrowdStrike",
                "file_path": "Playbooks/playbook-Detonate_URL_-_CrowdStrike.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "crowdstrike-scan": "VxStream",
                    "crowdstrike-submit-url": "VxStream"
                },
                "tests": [
                    "Test-Detonate URL - Crowdstrike"
                ]
            }
        },
        {
            "detonate_url_-_generic": {
                "name": "Detonate URL - Generic",
                "file_path": "Playbooks/playbook-Detonate_URL_-_Generic.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "Detonate URL - Cuckoo",
                    "Detonate URL - JoeSecurity",
                    "Detonate URL - ANYRUN",
                    "Detonate URL - Lastline v2",
                    "Detonate URL - CrowdStrike",
                    "Detonate URL - ThreatGrid",
                    "Detonate URL - McAfee ATD"
                ],
                "tests": [
                    "Detonate URL - Generic Test"
                ]
            }
        },
        {
            "detonate_url_-_joesecurity": {
                "name": "Detonate URL - JoeSecurity",
                "file_path": "Playbooks/playbook-Detonate_URL_-_JoeSecurity.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "joe-analysis-submit-url": "Joe Security",
                    "joe-download-report": "Joe Security",
                    "joe-analysis-info": "Joe Security"
                },
                "tests": [
                    "Detonate URL - Generic Test"
                ]
            }
        },
        {
            "detonate_url_-_mcafee_atd": {
                "name": "Detonate URL - McAfee ATD",
                "file_path": "Playbooks/playbook-Detonate_URL_-_McAfee_ATD.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "atd-file-upload": "",
                    "atd-get-report": "",
                    "atd-check-status": ""
                },
                "tests": [
                    "Test Playbook McAfee ATD",
                    "Detonate URL - Generic Test"
                ]
            }
        },
        {
            "detonate_url_-_threatgrid": {
                "name": "Detonate URL - ThreatGrid",
                "file_path": "Playbooks/playbook-Detonate_URL_-_ThreatGrid.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "threat-grid-get-samples-state": "Threat Grid",
                    "threat-grid-upload-sample": "Threat Grid",
                    "threat-grid-url-to-file": "Threat Grid"
                },
                "tests": [
                    "Detonate URL - Generic Test"
                ]
            }
        },
        {
            "detonatefile_-_joesecurity": {
                "name": "Detonate File - JoeSecurity",
                "file_path": "Playbooks/playbook-Detonate_File_-_JoeSecurity.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "joe-analysis-submit-sample": "Joe Security",
                    "joe-download-report": "Joe Security",
                    "joe-analysis-info": "Joe Security"
                },
                "tests": [
                    "Detonate File - Generic Test"
                ]
            }
        },
        {
            "Digital Defense FrontlineVM - Old Vulnerabilities Found": {
                "name": "Digital Defense FrontlineVM - Old Vulnerabilities Found",
                "file_path": "Playbooks/playbook-Digital_Defense_FrontlineVM_-_Old_Vulnerabilities_Found.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Print"
                ],
                "command_to_integration": {
                    "frontline-get-vulns": "Digital Defense FrontlineVM"
                },
                "tests": [
                    "No test - manual task"
                ]
            }
        },
        {
            "Digital Defense FrontlineVM - PAN-OS block assets": {
                "name": "Digital Defense FrontlineVM - PAN-OS block assets",
                "file_path": "Playbooks/playbook-Digital_Defense_FrontlineVM_-_PAN-OS_block_assets.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Print",
                    "ScheduleGenericPolling",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "PAN-OS - Block IP and URL - External Dynamic List"
                ],
                "command_to_integration": {
                    "panorama-query-logs": "Panorama",
                    "panorama-get-logs": "Panorama",
                    "frontline-get-vulns": "Digital Defense FrontlineVM",
                    "panorama-check-logs-status": ""
                },
                "tests": [
                    "No test - manual task"
                ]
            }
        },
        {
            "Digital Defense FrontlineVM - Scan Asset Not Recently Scanned": {
                "name": "Digital Defense FrontlineVM - Scan Asset Not Recently Scanned",
                "file_path": "Playbooks/playbook-Digital_Defense_FrontlineVM_-_Scan_Asset_Not_Recently_Scanned.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Print"
                ],
                "command_to_integration": {
                    "frontline-get-assets": "",
                    "frontline-scan-asset": ""
                }
            }
        },
        {
            "Domain Enrichment - Generic v2": {
                "name": "Domain Enrichment - Generic v2",
                "file_path": "Playbooks/playbook-Domain_Enrichment_-_Generic_v2.yml",
                "fromversion": "4.1.0",
                "command_to_integration": {
                    "vt-private-get-domain-report": "VirusTotal - Private API",
                    "umbrella-domain-categorization": ""
                },
                "tests": [
                    "Domain Enrichment - Generic v2 - Test"
                ]
            }
        },
        {
            "domain_enrichment_generic": {
                "name": "Domain Enrichment - Generic",
                "file_path": "Playbooks/playbook-Domain_Enrichment_-_Generic_3_5.yml",
                "toversion": "3.5.1",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "DomainReputation"
                ]
            }
        },
        {
            "domain_enrichment_generic": {
                "name": "Domain Enrichment - Generic",
                "file_path": "Playbooks/playbook-Domain_Enrichment_-_Generic.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "DomainReputation"
                ],
                "command_to_integration": {
                    "vt-private-get-domain-report": "VirusTotal - Private API"
                },
                "tests": [
                    "No test (test is old and uses virustotal which has quota problems. The v2 playbook has a better test)"
                ]
            }
        },
        {
            "Email Address Enrichment - Generic v2": {
                "name": "Email Address Enrichment - Generic v2",
                "file_path": "Playbooks/playbook-Email_Address_Enrichment_-_Generic_v2.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Exists",
                    "IsEmailAddressInternal",
                    "EmailDomainSquattingReputation",
                    "ADGetUser"
                ],
                "tests": [
                    "Email Address Enrichment - Generic v2 - Test"
                ]
            }
        },
        {
            "Email Address Enrichment - Generic v2.1": {
                "name": "Email Address Enrichment - Generic v2.1",
                "file_path": "Playbooks/playbook-Email_Address_Enrichment_-_Generic_v2.1.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Exists",
                    "IsEmailAddressInternal",
                    "EmailDomainSquattingReputation"
                ],
                "command_to_integration": {
                    "ad-get-user": ""
                },
                "tests": [
                    "Email Address Enrichment - Generic v2.1 - Test"
                ]
            }
        },
        {
            "email_address_enrichment_-_generic": {
                "name": "Email Address Enrichment - Generic",
                "file_path": "Playbooks/playbook-Email_Address_Enrichment_-_Generic.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "EmailReputation",
                    "IsEmailAddressInternal",
                    "ADGetUser",
                    "EmailDomainSquattingReputation",
                    "Exists"
                ],
                "tests": [
                    "No test - deprecated. use V2.1 instead."
                ]
            }
        },
        {
            "email_address_enrichment_-_generic": {
                "name": "Email Address Enrichment - Generic",
                "file_path": "Playbooks/playbook-Email_Address_Enrichment_-_Generic_3_5.yml",
                "toversion": "3.5.1",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "EmailReputation",
                    "IsEmailAddressInternal",
                    "ADGetUser",
                    "EmailDomainSquattingReputation",
                    "Exists"
                ]
            }
        },
        {
            "Employee Offboarding - Delegate": {
                "name": "Employee Offboarding - Delegate",
                "file_path": "Playbooks/playbook-Employee_Offboarding_-_Delegate.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "gmail-set-autoreply": "",
                    "gmail-delegate-user-mailbox": "",
                    "send-mail": ""
                },
                "tests": [
                    "no test"
                ]
            }
        },
        {
            "Employee Offboarding - Gather User Information": {
                "name": "Employee Offboarding - Gather User Information",
                "file_path": "Playbooks/playbook-Employee_Offboarding_-_Gather_User_Information.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "GeneratePassword",
                    "SetAndHandleEmpty",
                    "Set"
                ],
                "command_to_integration": {
                    "gmail-get-user-roles": "",
                    "gmail-get-user": "",
                    "okta-search": "",
                    "ad-get-user": "",
                    "duoadmin-get-devices-by-user": "",
                    "googleapps-get-devices-for-user": "",
                    "servicenow-query-table": "",
                    "gmail-get-role": ""
                },
                "tests": [
                    "no test"
                ]
            }
        },
        {
            "Employee Offboarding - Retain & Delete": {
                "name": "Employee Offboarding - Retain & Delete",
                "file_path": "Playbooks/playbook-Employee_Offboarding_-_Retain_&_Delete.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "gvault-create-matter": "",
                    "gvault-create-hold": "",
                    "ad-disable-account": "",
                    "ad-delete-user": "",
                    "gmail-delete-user": "",
                    "gvault-delete-hold": "",
                    "ad-add-to-group": "",
                    "gvault-matter-update-state": "",
                    "send-mail": ""
                },
                "tests": [
                    "no test"
                ]
            }
        },
        {
            "Employee Offboarding - Revoke Permissions": {
                "name": "Employee Offboarding - Revoke Permissions",
                "file_path": "Playbooks/playbook-Employee_Offboarding_-_Revoke_Permissions.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "gmail-revoke-user-role": "",
                    "gmail-hide-user-in-directory": "",
                    "googleapps-device-action": "google",
                    "gmail-set-password": "",
                    "okta-deactivate-user": "",
                    "duoadmin-dissociate-device-from-user": "",
                    "ad-set-new-password": ""
                },
                "tests": [
                    "no test"
                ]
            }
        },
        {
            "Endpoint data collection": {
                "name": "Endpoint data collection",
                "file_path": "Playbooks/playbook-Endpoint_data_collection.yml",
                "implementing_scripts": [
                    "AreValuesEqual"
                ],
                "implementing_playbooks": [
                    "D2 - Endpoint data collection",
                    "Sentinel One - Endpoint data collection",
                    "MAR - Endpoint data collection"
                ],
                "tests": [
                    "No tests - Need to add"
                ]
            }
        },
        {
            "Endpoint Enrichment - Cylance Protect v2": {
                "name": "Endpoint Enrichment - Cylance Protect v2",
                "file_path": "Playbooks/playbook-Endpoint_Enrichment_-_Cylance_Protect_v2.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Set"
                ],
                "command_to_integration": {
                    "cylance-protect-get-devices": "Cylance Protect v2"
                },
                "tests": [
                    "no test (tested as part of Endpoint Enrichment v2.1)"
                ]
            }
        },
        {
            "Endpoint Enrichment - Generic v2": {
                "name": "Endpoint Enrichment - Generic v2",
                "file_path": "Playbooks/playbook-Endpoint_Enrichment_-_Generic_v2.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Exists",
                    "ADGetComputer"
                ],
                "implementing_playbooks": [
                    "CrowdStrike Endpoint Enrichment"
                ],
                "command_to_integration": {
                    "epo-find-system": "epo",
                    "cb-sensor-info": "carbonblack",
                    "cylance-protect-get-devices": "Cylance Protect"
                },
                "tests": [
                    "Endpoint Enrichment - Generic v2 - Test"
                ]
            }
        },
        {
            "Endpoint Enrichment - Generic v2.1": {
                "name": "Endpoint Enrichment - Generic v2.1",
                "file_path": "Playbooks/playbook-Endpoint_Enrichment_-_Generic_v2.1.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Exists"
                ],
                "implementing_playbooks": [
                    "Endpoint Enrichment - Cylance Protect v2"
                ],
                "command_to_integration": {
                    "epo-find-system": "epo",
                    "cb-sensor-info": "carbonblack-v2",
                    "ad-get-computer": "Active Directory Query v2",
                    "cs-device-search": "",
                    "cs-device-details": "",
                    "extrahop-device-search": ""
                },
                "tests": [
                    "Endpoint Enrichment - Generic v2.1 - Test"
                ]
            }
        },
        {
            "Endpoint Malware Investigation - Generic": {
                "name": "Endpoint Malware Investigation - Generic",
                "file_path": "Playbooks/playbook-Endpoint_Malware_Investigation_-_Generic.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "GenerateInvestigationSummaryReport"
                ],
                "implementing_playbooks": [
                    "File Enrichment - Generic v2",
                    "Calculate Severity - Generic v2",
                    "Retrieve File from Endpoint - Generic",
                    "Detonate File - Generic",
                    "Block Indicators - Generic v2",
                    "Isolate Endpoint - Generic",
                    "Endpoint Enrichment - Generic v2.1"
                ],
                "command_to_integration": {
                    "send-mail": ""
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "endpoint_enrichment_-_generic": {
                "name": "Endpoint Enrichment - Generic",
                "file_path": "Playbooks/playbook-Endpoint_Enrichment_-_Generic.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Exists",
                    "EPOFindSystem",
                    "ADGetComputer"
                ],
                "implementing_playbooks": [
                    "CrowdStrike Endpoint Enrichment"
                ],
                "command_to_integration": {
                    "so-agents-query": "SentinelOne",
                    "cb-sensor-info": "carbonblack",
                    "cylance-protect-get-devices": "Cylance Protect"
                }
            }
        },
        {
            "Enrich DXL with ATD verdict": {
                "name": "Enrich DXL with ATD verdict",
                "file_path": "Playbooks/playbook-Enrich_DXL_with_ATD_verdict.yml",
                "implementing_scripts": [
                    "Exists",
                    "CloseInvestigation"
                ],
                "implementing_playbooks": [
                    "ATD - Detonate File"
                ],
                "command_to_integration": {
                    "dxl-send-event": "McAfee DXL"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Enrich McAfee DXL using 3rd party sandbox": {
                "name": "Enrich McAfee DXL using 3rd party sandbox",
                "file_path": "Playbooks/playbook-Enrich_McAfee_DXL_using_3rd_party_sandbox.yml",
                "implementing_scripts": [
                    "Exists",
                    "CloseInvestigation"
                ],
                "implementing_playbooks": [
                    "WildFire - Detonate file"
                ],
                "command_to_integration": {
                    "dxl-send-event": "McAfee DXL"
                },
                "tests": [
                    "Wildfire Test"
                ]
            }
        },
        {
            "Enrichment Playbook": {
                "name": "Enrichment Playbook",
                "file_path": "Playbooks/playbook-Enrichment_Playbook.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Print",
                    "FileReputation",
                    "IPReputation",
                    "Exists",
                    "URLReputation"
                ],
                "tests": [
                    "No tests - Deprecated playbook"
                ]
            }
        },
        {
            "Entity Enrichment - Generic v2": {
                "name": "Entity Enrichment - Generic v2",
                "file_path": "Playbooks/playbook-Entity_Enrichment_-_Generic_v2.yml",
                "fromversion": "4.1.0",
                "implementing_playbooks": [
                    "Email Address Enrichment - Generic v2.1",
                    "File Enrichment - Generic v2",
                    "IP Enrichment - Generic v2",
                    "Endpoint Enrichment - Generic v2.1",
                    "URL Enrichment - Generic v2",
                    "Account Enrichment - Generic v2.1",
                    "Domain Enrichment - Generic v2"
                ],
                "tests": [
                    "no test - each enrichment sub-playbook has or will have its own test"
                ]
            }
        },
        {
            "Entity Enrichment - Phishing v2": {
                "name": "Entity Enrichment - Phishing v2",
                "file_path": "Playbooks/playbook-Entity_Enrichment_-_Phishing_v2.yml",
                "fromversion": "4.1.0",
                "implementing_playbooks": [
                    "Email Address Enrichment - Generic v2.1",
                    "File Enrichment - Generic v2",
                    "IP Enrichment - External - Generic v2",
                    "URL Enrichment - Generic v2",
                    "Domain Enrichment - Generic v2"
                ],
                "tests": [
                    "no test - each entity has or will have its own test"
                ]
            }
        },
        {
            "entity_enrichment_generic": {
                "name": "Entity Enrichment - Generic",
                "file_path": "Playbooks/playbook-Entity_Enrichment_-_3_5.yml",
                "toversion": "3.5.1",
                "fromversion": "3.5.0",
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic",
                    "Email Address Enrichment - Generic",
                    "URL Enrichment - Generic",
                    "Domain Enrichment - Generic",
                    "Account Enrichment - Generic",
                    "IP Enrichment - Generic",
                    "DBot Indicator Enrichment - Generic",
                    "File Enrichment - Generic"
                ]
            }
        },
        {
            "entity_enrichment_generic": {
                "name": "Entity Enrichment - Generic",
                "file_path": "Playbooks/playbook-Entity_Enrichment_-_Generic.yml",
                "fromversion": "3.6.0",
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic",
                    "Email Address Enrichment - Generic",
                    "URL Enrichment - Generic",
                    "Domain Enrichment - Generic",
                    "Account Enrichment - Generic",
                    "IP Enrichment - Generic",
                    "File Enrichment - Generic"
                ],
                "tests": [
                    "no test - each enrichment sub-playbook has or will have its own test"
                ]
            }
        },
        {
            "Exchange 2016 Search and Delete": {
                "name": "Exchange 2016 Search and Delete",
                "file_path": "Playbooks/playbook-Exchange_2016_Search_and_Delete.yml",
                "fromversion": "4.1.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "exchange2016-start-compliance-search": "",
                    "exchange2016-get-compliance-search": "",
                    "exchange2016-purge-compliance-search-results": "",
                    "exchange2016-get-compliance-search-purge-status": "",
                    "exchange2016-remove-compliance-search": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ExpanseParseRawIncident": {
                "name": "Expanse Incident Playbook",
                "file_path": "Packs/Expanse/Playbooks/Expanse_Incident_Playbook.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "ExpanseParseRawIncident"
                ],
                "pack": "Expanse"
            }
        },
        {
            "Extract Indicators From File - Generic v2": {
                "name": "Extract Indicators From File - Generic v2",
                "file_path": "Playbooks/playbook-Extract_Indicators_From_File_-_Generic_v2.yml",
                "toversion": "4.4.9",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "ExtractIndicatorsFromTextFile",
                    "ExtractIndicatorsFromWordFile",
                    "Set",
                    "ReadPDFFileV2"
                ],
                "command_to_integration": {
                    "image-ocr-extract-text": ""
                },
                "tests": [
                    "Extract Indicators From File - Generic v2 - Test"
                ]
            }
        },
        {
            "Extract Indicators From File - Generic v2": {
                "name": "Extract Indicators From File - Generic v2",
                "file_path": "Playbooks/playbook-Extract_Indicators_From_File_-_Generic_v2_4_5.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "ConvertFile",
                    "ExtractIndicatorsFromTextFile",
                    "Set",
                    "ReadPDFFileV2",
                    "ExtractIndicatorsFromWordFile"
                ],
                "command_to_integration": {
                    "image-ocr-extract-text": ""
                },
                "tests": [
                    "Extract Indicators From File - Generic v2 - Test"
                ]
            }
        },
        {
            "extract_indicators_-_generic": {
                "name": "Extract Indicators - Generic",
                "file_path": "Playbooks/playbook-Extract_Indicators_-_Generic.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "ExtractHash",
                    "ExtractURL",
                    "ExtractIP",
                    "ExtractEmail",
                    "ExtractDomain"
                ],
                "tests": [
                    "No tests - Deprecated"
                ]
            }
        },
        {
            "extract_indicators_from_file_-_generic": {
                "name": "Extract Indicators From File - Generic",
                "file_path": "Playbooks/playbook-Extract_Indicators_From_File_-_Generic_4_0.yml",
                "toversion": "4.0.9",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "ReadPDFFile",
                    "ExtractIndicatorsFromTextFile",
                    "Set"
                ]
            }
        },
        {
            "extract_indicators_from_file_-_generic": {
                "name": "Extract Indicators From File - Generic",
                "file_path": "Playbooks/playbook-Extract_Indicators_From_File_-_Generic.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "ReadPDFFile",
                    "ExtractIndicatorsFromTextFile",
                    "ExtractIndicatorsFromWordFile",
                    "Set"
                ],
                "tests": [
                    "No test - deprecated playbook"
                ]
            }
        },
        {
            "ExtraHop - CVE-2019-0708 (BlueKeep)": {
                "name": "ExtraHop - CVE-2019-0708 (BlueKeep)",
                "file_path": "Playbooks/playbook-ExtraHop_-_CVE-2019-0708_(BlueKeep).yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Exists"
                ],
                "implementing_playbooks": [
                    "ExtraHop - Get Peers by Host",
                    "Block IP - Generic v2"
                ],
                "command_to_integration": {
                    "cve-search": "CVE Search",
                    "extrahop-query-records": "",
                    "extrahop-search-packets": ""
                },
                "tests": [
                    "ExtraHop_v2-Test"
                ]
            }
        },
        {
            "ExtraHop - Default": {
                "name": "ExtraHop - Default",
                "file_path": "Playbooks/playbook-ExtraHop_-_Default.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Exists"
                ],
                "implementing_playbooks": [
                    "ExtraHop - Ticket Tracking",
                    "ExtraHop - CVE-2019-0708 (BlueKeep)"
                ],
                "tests": [
                    "ExtraHop_v2-Test"
                ]
            }
        },
        {
            "ExtraHop - Get Peers by Host": {
                "name": "ExtraHop - Get Peers by Host",
                "file_path": "Playbooks/playbook-ExtraHop_-_Get_Peers_by_Host.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Exists"
                ],
                "command_to_integration": {
                    "extrahop-get-peers": "",
                    "extrahop-device-search": "",
                    "extrahop-get-activity-map": ""
                },
                "tests": [
                    "ExtraHop_v2-Test"
                ]
            }
        },
        {
            "ExtraHop - Ticket Tracking": {
                "name": "ExtraHop - Ticket Tracking",
                "file_path": "Playbooks/playbook-ExtraHop_-_Ticket_Tracking.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "SearchIncidents",
                    "Exists"
                ],
                "command_to_integration": {
                    "extrahop-track-ticket": ""
                },
                "tests": [
                    "ExtraHop_v2-Test"
                ]
            }
        },
        {
            "Failed Login Playbook - Slack v2": {
                "name": "Failed Login Playbook - Slack v2",
                "file_path": "Packs/Slack/Playbooks/playbook-FailedLogin_SlackV2.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "SlackAsk"
                ],
                "command_to_integration": {
                    "ad-expire-password": "",
                    "send-notification": ""
                },
                "tests": [
                    "no test - manual task"
                ],
                "pack": "Slack"
            }
        },
        {
            "Failed Login Playbook With Slack": {
                "name": "Failed Login Playbook With Slack",
                "file_path": "Playbooks/playbook-Failed_Login_With_Slack_Playbook.yml",
                "toversion": "4.5.0",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "ADExpirePassword",
                    "CloseInvestigation",
                    "IncidentSet",
                    "SlackAskUser"
                ],
                "command_to_integration": {
                    "slack-send": "slack"
                },
                "tests": [
                    "no test - manual task"
                ]
            }
        },
        {
            "Failed Login Playbook With Slack": {
                "name": "Failed Login Playbook With Slack",
                "file_path": "Playbooks/playbook-Failed_Login_With_Slack_Playbook_5.0.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "ADExpirePassword",
                    "CloseInvestigation",
                    "IncidentSet",
                    "SlackAskUser"
                ],
                "command_to_integration": {
                    "slack-send": "slack"
                },
                "tests": [
                    "no test - manual task"
                ]
            }
        },
        {
            "File Enrichment - Generic": {
                "name": "File Enrichment - Generic",
                "file_path": "Playbooks/playbook-File_Enrichment_-_Generic.yml",
                "fromversion": "3.6.0",
                "implementing_playbooks": [
                    "File Enrichment - Virus Total Private API",
                    "File Enrichment - File reputation"
                ],
                "command_to_integration": {
                    "cylance-protect-get-threat": "Cylance Protect v2"
                },
                "tests": [
                    "no test (new v2 playbook has an updated test)"
                ]
            }
        },
        {
            "File Enrichment - Generic": {
                "name": "File Enrichment - Generic",
                "file_path": "Playbooks/playbook-File_Enrichment_-_Generic_3_5.yml",
                "toversion": "3.5.1",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "FileReputation"
                ]
            }
        },
        {
            "File Enrichment - Generic v2": {
                "name": "File Enrichment - Generic v2",
                "file_path": "Playbooks/playbook-File_Enrichment_-_Generic_v2.yml",
                "fromversion": "4.1.0",
                "implementing_playbooks": [
                    "File Enrichment - Virus Total Private API"
                ],
                "command_to_integration": {
                    "cylance-protect-get-threat": "Cylance Protect v2"
                },
                "tests": [
                    "File Enrichment - Generic v2 - Test"
                ]
            }
        },
        {
            "file_enrichment_-_file_reputation": {
                "name": "File Enrichment - File reputation",
                "file_path": "Playbooks/playbook-File_Enrichment_-_File_reputation.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "FileReputation"
                ]
            }
        },
        {
            "file_enrichment_-_virus_total_private_api": {
                "name": "File Enrichment - Virus Total Private API",
                "file_path": "Playbooks/playbook-File_Enrichment_-_Virus_Total_Private_API.yml",
                "fromversion": "3.6.0",
                "command_to_integration": {
                    "vt-private-check-file-behaviour": "VirusTotal - Private API",
                    "vt-private-get-file-report": "VirusTotal - Private API"
                },
                "tests": [
                    "No test - need to add test"
                ]
            }
        },
        {
            "FireEye Helix Archive Search": {
                "name": "FireEye Helix Archive Search",
                "file_path": "Playbooks/playbook-FireEye_Helix_Archive_Search.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "fireeye-helix-archive-search": "",
                    "fireeye-helix-archive-search-get-results": ""
                },
                "tests": [
                    "No test - No instance"
                ]
            }
        },
        {
            "GDPR Breach Notification": {
                "name": "GDPR Breach Notification",
                "file_path": "Playbooks/playbook-GDPR_Breach_Notification.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "GDPRContactAuthorities",
                    "Print",
                    "GenerateInvestigationSummaryReport"
                ],
                "command_to_integration": {
                    "send-mail": ""
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "GenericPolling": {
                "name": "GenericPolling",
                "file_path": "Playbooks/playbook-GenericPolling.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "RunPollingCommand",
                    "ScheduleGenericPolling"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Get File Sample By Hash - Cylance Protect v2": {
                "name": "Get File Sample By Hash - Cylance Protect v2",
                "file_path": "Playbooks/playbook-Get_File_Sample_By_Hash_-_Cylance_Protect_v2.yml",
                "fromversion": "4.0.0",
                "command_to_integration": {
                    "cylance-protect-download-threat": "Cylance Protect v2"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Get File Sample By Hash - Generic v2": {
                "name": "Get File Sample By Hash - Generic v2",
                "file_path": "Playbooks/playbook-Get_File_Sample_By_Hash_-_Generic_v2.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "Get File Sample By Hash - Carbon Black Enterprise Response",
                    "Get File Sample By Hash - Cylance Protect v2"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Get File Sample From Hash - Carbon Black Enterprise Response": {
                "name": "Get File Sample From Hash - Carbon Black Enterprise Response",
                "file_path": "Playbooks/playbook-Get_File_Sample_From_Hash_-_Carbon_Black_Enterprise_Response.yml",
                "toversion": "3.1.0",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists"
                ],
                "command_to_integration": {
                    "cb-binary-get": "carbonblack"
                }
            }
        },
        {
            "Get File Sample From Hash - Cylance Protect": {
                "name": "Get File Sample From Hash - Cylance Protect",
                "file_path": "Playbooks/playbook-Get_File_Sample_From_Hash_-_Cylance_Protect.yml",
                "toversion": "3.1.0",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists",
                    "http",
                    "UnzipFile"
                ],
                "command_to_integration": {
                    "cylance-protect-download-threat": "Cylance Protect"
                }
            }
        },
        {
            "Get File Sample From Hash - Generic": {
                "name": "Get File Sample From Hash - Generic",
                "file_path": "Playbooks/playbook-Get_File_Sample_From_Hash_-_Generic.yml",
                "toversion": "3.1.0",
                "implementing_playbooks": [
                    "Get File Sample From Hash - Cylance Protect",
                    "Get File Sample From Hash - Carbon Black Enterprise Response"
                ]
            }
        },
        {
            "Get Mails By Folder Pathes": {
                "name": "Get Mails By Folder Pathes",
                "file_path": "Playbooks/playbook-Get_Mails_By_Folder_Pathes.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "GetEWSFolder",
                    "DBotPreProcessTextData",
                    "FileToBase64List"
                ],
                "tests": [
                    "Get EWS Folder Test"
                ]
            }
        },
        {
            "get_file_sample_by_hash_-_carbon_black_enterprise_Response": {
                "name": "Get File Sample By Hash - Carbon Black Enterprise Response",
                "file_path": "Playbooks/playbook-Get_File_Sample_By_Hash_-_Carbon_Black_Enterprise_Response.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Exists"
                ],
                "command_to_integration": {
                    "cb-binary-get": "carbonblack"
                }
            }
        },
        {
            "get_file_sample_by_hash_-_cylance_protect": {
                "name": "Get File Sample By Hash - Cylance Protect",
                "file_path": "Playbooks/playbook-Get_File_Sample_By_Hash_-_Cylance_Protect.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Exists",
                    "http",
                    "UnzipFile"
                ],
                "command_to_integration": {
                    "cylance-protect-download-threat": "Cylance Protect"
                }
            }
        },
        {
            "get_file_sample_by_hash_-_generic": {
                "name": "Get File Sample By Hash - Generic",
                "file_path": "Playbooks/playbook-Get_File_Sample_By_Hash_-_Generic.yml",
                "fromversion": "3.5.0",
                "implementing_playbooks": [
                    "Get File Sample By Hash - Cylance Protect",
                    "Get File Sample By Hash - Carbon Black Enterprise Response"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "get_file_sample_from_path_-_carbon_black_enterprise_response": {
                "name": "Get File Sample From Path - Carbon Black Enterprise Response",
                "file_path": "Playbooks/playbook-Get_File_Sample_From_Path_-_Carbon_Black_Enterprise_Response.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Exists",
                    "CBLiveGetFile"
                ]
            }
        },
        {
            "get_file_sample_from_path_-_d2": {
                "name": "Get File Sample From Path - D2",
                "file_path": "Playbooks/playbook-Get_File_Sample_From_Path_-_D2.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "FetchFileD2",
                    "IncidentAddSystem"
                ]
            }
        },
        {
            "get_file_sample_from_path_-_generic": {
                "name": "Get File Sample From Path - Generic",
                "file_path": "Playbooks/playbook-Get_File_Sample_From_Path_-_Generic.yml",
                "fromversion": "3.5.0",
                "implementing_playbooks": [
                    "Get File Sample From Path - D2",
                    "Get File Sample From Path - Carbon Black Enterprise Response"
                ],
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "get_original_email_-_ews": {
                "name": "Get Original Email - EWS",
                "file_path": "Playbooks/playbook-Get_Original_Email_-_EWS.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "command_to_integration": {
                    "ews-search-mailbox": "EWS v2",
                    "ews-get-items": "EWS v2",
                    "ews-get-attachment": "EWS v2"
                },
                "tests": [
                    "Phishing test - attachment",
                    "Phishing test - Inline"
                ]
            }
        },
        {
            "get_original_email_-_generic": {
                "name": "Get Original Email - Generic",
                "file_path": "Playbooks/playbook-Get_Original_Email_-_Generic.yml",
                "fromversion": 4.0,
                "implementing_playbooks": [
                    "Get Original Email - EWS",
                    "Get Original Email - Gmail"
                ],
                "tests": [
                    "Phishing test - attachment",
                    "Phishing test - Inline"
                ]
            }
        },
        {
            "get_original_email_-_gmail": {
                "name": "Get Original Email - Gmail",
                "file_path": "Playbooks/playbook-Get_Original_Email_-_Gmail.yml",
                "fromversion": 4.0,
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "command_to_integration": {
                    "gmail-get-mail": "Gmail",
                    "gmail-search": "Gmail",
                    "gmail-get-attachments": "Gmail"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Google-Vault-Display-Results": {
                "name": "Google Vault - Display Results",
                "file_path": "Playbooks/playbook-Display_Results_-_GVault.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "PrintErrorEntry"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "gvault-get-mail-results": "",
                    "gvault-export-status": "",
                    "gvault-download-results": "",
                    "gvault-get-groups-results": "",
                    "gvault-get-drive-results": ""
                },
                "tests": [
                    "Google_Vault-Search_And_Display_Results_test"
                ]
            }
        },
        {
            "Google-Vault-Search-Drive": {
                "name": "Google Vault - Search Drive",
                "file_path": "Playbooks/playbook-GVault_-_Search_Drive.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "PrintErrorEntry"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "gvault-create-export-drive": "",
                    "gvault-get-drive-results": "",
                    "gvault-export-status": "",
                    "gvault-download-results": ""
                },
                "tests": [
                    "Google_Vault-Search_And_Display_Results_test"
                ]
            }
        },
        {
            "Google-Vault-Search-Groups": {
                "name": "Google Vault - Search Groups",
                "file_path": "Playbooks/playbook-GVault_-_Search_Groups.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "PrintErrorEntry"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "gvault-create-export-groups": "",
                    "gvault-get-groups-results": "",
                    "gvault-export-status": "",
                    "gvault-download-results": ""
                },
                "tests": [
                    "Google_Vault-Search_And_Display_Results_test"
                ]
            }
        },
        {
            "Google-Vault-Search-Mail": {
                "name": "Google Vault - Search Mail",
                "file_path": "Playbooks/playbook-GVault_-_Search_Mail.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "PrintErrorEntry"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "gvault-create-export-mail": "",
                    "gvault-get-mail-results": "",
                    "gvault-export-status": "",
                    "gvault-download-results": ""
                },
                "tests": [
                    "Google_Vault-Search_And_Display_Results_test"
                ]
            }
        },
        {
            "Hunt for bad IOCs": {
                "name": "Hunt for bad IOCs",
                "file_path": "Playbooks/playbook-Hunt_for_bad_IOCs.yml",
                "fromversion": "2.5.0",
                "implementing_playbooks": [
                    "Carbon Black Rapid IOC Hunting",
                    "CrowdStrike Rapid IOC Hunting",
                    "TIE - IOC Hunt",
                    "Carbon black Protection Rapid IOC Hunting"
                ],
                "tests": [
                    "No test - no instance"
                ]
            }
        },
        {
            "Hybrid-analysis quick-scan": {
                "name": "Hybrid-analysis quick-scan",
                "file_path": "Playbooks/playbook-Hybrid-analysis_quick-scan.yml",
                "fromversion": "4.1.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "hybrid-analysis-quick-scan-url": "",
                    "hybrid-analysis-quick-scan-url-results": ""
                },
                "tests": [
                    "HybridAnalysis-Test"
                ]
            }
        },
        {
            "Illuminate Integration Demonstration": {
                "name": "Illuminate Integration Demonstration",
                "file_path": "Playbooks/playbook-illuminate_Integration_Demonstration.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "ParseJSON"
                ],
                "command_to_integration": {
                    "domain": "illuminate",
                    "email": "illuminate",
                    "url": "illuminate",
                    "file": "illuminate",
                    "illuminate-enrich-http-request": "illuminate",
                    "illuminate-enrich-ipv6": "",
                    "illuminate-enrich-mutex": "illuminate",
                    "illuminate-enrich-string": "illuminate",
                    "ip": "illuminate"
                }
            }
        },
        {
            "Impossible Traveler": {
                "name": "Impossible Traveler",
                "file_path": "Packs/ImpossibleTraveler/Playbooks/playbook-Impossible_Traveller.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "CalculateTimeDifference",
                    "CalculateGeoDistance",
                    "EmailAskUser",
                    "Set"
                ],
                "implementing_playbooks": [
                    "IP Enrichment - Generic v2",
                    "Block IP - Generic v2"
                ],
                "command_to_integration": {
                    "ad-disable-account": "",
                    "ip": "",
                    "ad-get-user": "",
                    "rasterize": ""
                },
                "tests": [
                    "Impossible Traveler - Test"
                ],
                "pack": "ImpossibleTraveler"
            }
        },
        {
            "Incident Enrichment": {
                "name": "Incident Enrichment",
                "file_path": "Playbooks/playbook-Incident_Enrichment.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "ExtractHash",
                    "ExtractURL",
                    "ExtractIP"
                ],
                "implementing_playbooks": [
                    "Enrichment Playbook"
                ],
                "tests": [
                    "No tests - Deprecated"
                ]
            }
        },
        {
            "Indeni Demo": {
                "name": "Indeni Demo",
                "file_path": "Packs/Indeni/Playbooks/playbook-Indeni_Demo.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "JiraCreateIssue-example"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "indeni-get-device-info": "Indeni",
                    "indeni-get-alert-info": "Indeni",
                    "indeni-get-alert-summary": "Indeni",
                    "indeni-post-note": "Indeni",
                    "indeni-archive-issue": "Indeni",
                    "jira-get-issue": "jira-v2"
                },
                "tests": [
                    "No tests - Demo playbook"
                ],
                "pack": "Indeni"
            }
        },
        {
            "Indicator Pivoting - DomainTools Iris": {
                "name": "Indicator Pivoting - DomainTools Iris",
                "file_path": "Playbooks/playbook-Indicator_Pivoting-DomainTools_Iris.yml",
                "fromversion": "4.1.0",
                "command_to_integration": {
                    "domaintoolsiris-pivot": "DomainTools Iris"
                },
                "tests": [
                    "DomainTools Iris - Test"
                ]
            }
        },
        {
            "Intezer - Analyze by hash": {
                "name": "Intezer - Analyze by hash",
                "file_path": "Playbooks/playbook-Intezer_-_Analyze_by_hash.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "intezer-analyze-by-hash": "Intezer v2",
                    "intezer-get-analysis-result": "Intezer v2"
                },
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "Intezer - Analyze Uploaded file": {
                "name": "Intezer - Analyze Uploaded file",
                "file_path": "Playbooks/playbook-Intezer_-_Analyze_Uploaded_file.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "intezer-analyze-by-file": "",
                    "intezer-get-analysis-result": "Intezer v2"
                },
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "Intezer - scan host": {
                "name": "Intezer - scan host",
                "file_path": "Playbooks/playbook-Intezer_-_scan_host.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Exists",
                    "IncidentAddSystem",
                    "IntezerScanHost",
                    "AreValuesEqual"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "intezer-get-analysis-result": "Intezer v2",
                    "D2Remove": "D2Remove"
                },
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "IP Enrichment - External - Generic v2": {
                "name": "IP Enrichment - External - Generic v2",
                "file_path": "Playbooks/playbook-IP_Enrichment_-_External_-_Generic_v2.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "IPToHost",
                    "IsIPInRanges"
                ],
                "command_to_integration": {
                    "vt-private-get-ip-report": "VirusTotal - Private API",
                    "threat-crowd-ip": ""
                },
                "tests": [
                    "IP Enrichment - Generic v2 - Test"
                ]
            }
        },
        {
            "IP Enrichment - Generic v2": {
                "name": "IP Enrichment - Generic v2",
                "file_path": "Playbooks/playbook-IP_Enrichment_-_Generic_v2.yml",
                "fromversion": "4.1.0",
                "implementing_playbooks": [
                    "IP Enrichment - External - Generic v2",
                    "IP Enrichment - Internal - Generic v2"
                ],
                "tests": [
                    "IP Enrichment - Generic v2 - Test"
                ]
            }
        },
        {
            "IP Enrichment - Internal - Generic v2": {
                "name": "IP Enrichment - Internal - Generic v2",
                "file_path": "Playbooks/playbook-IP_Enrichment_-_Internal_-_Generic_v2.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "IPToHost",
                    "IsIPInRanges"
                ],
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic v2"
                ],
                "tests": [
                    "IP Enrichment - Generic v2 - Test"
                ]
            }
        },
        {
            "ip_enrichment_generic": {
                "name": "IP Enrichment - Generic",
                "file_path": "Playbooks/playbook-IP_Enrichment_-_Generic.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "IPReputation",
                    "IPToHost",
                    "IsIPInRanges"
                ],
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic"
                ],
                "command_to_integration": {
                    "vt-private-get-ip-report": "VirusTotal - Private API"
                },
                "tests": [
                    "No test - deprecated. use V2.1 instead."
                ]
            }
        },
        {
            "ip_enrichment_generic": {
                "name": "IP Enrichment - Generic",
                "file_path": "Playbooks/playbook-IP_Enrichment_-_Generic_3_5.yml",
                "toversion": "3.5.1",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Exists",
                    "IPReputation",
                    "IsIPInRanges"
                ]
            }
        },
        {
            "Isolate Endpoint - Generic": {
                "name": "Isolate Endpoint - Generic",
                "file_path": "Playbooks/playbook-Isolate_Endpoint_-_Generic.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "Block Endpoint - Carbon Black Response",
                    "Traps Isolate Endpoint",
                    "Cortex XDR - Isolate Endpoint"
                ],
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "IT - Employee Offboarding": {
                "name": "IT - Employee Offboarding",
                "file_path": "Playbooks/playbook-IT_-_Employee_Offboarding.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "Employee Offboarding - Retain & Delete",
                    "Employee Offboarding - Delegate",
                    "Employee Offboarding - Gather User Information",
                    "Wait Until Datetime",
                    "Employee Offboarding - Revoke Permissions"
                ],
                "tests": [
                    "no test"
                ]
            }
        },
        {
            "IT - Employee Offboarding - Manual": {
                "name": "IT - Employee Offboarding - Manual",
                "file_path": "Playbooks/playbook-IT_-_Employee_Offboarding_-_Manual.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "Wait Until Datetime"
                ],
                "tests": [
                    "no test"
                ]
            }
        },
        {
            "Kenna - Search and Handle Asset Vulnerabilities": {
                "name": "Kenna - Search and Handle Asset Vulnerabilities",
                "file_path": "Playbooks/playbook-Kenna_-_Vulnerability_Handling.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "GenerateInvestigationSummaryReport"
                ],
                "command_to_integration": {
                    "kenna-search-vulnerabilities": "",
                    "kenna-get-asset-vulnerabilities": "",
                    "kenna-search-assets": "",
                    "kenna-search-fixes": "",
                    "kenna-update-asset": ""
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "malware_investigation-_generic": {
                "name": "Malware Investigation - Generic",
                "file_path": "Playbooks/playbook-Malware_Investigation_-_Generic.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "CloseInvestigation"
                ],
                "implementing_playbooks": [
                    "Entity Enrichment - Generic",
                    "Malware Investigation - Generic - Setup",
                    "Detonate File - Generic",
                    "Calculate Severity - Generic"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "malware_investigation-_generic": {
                "name": "Malware Investigation - Generic",
                "file_path": "Playbooks/playbook-Malware_Investigation_-_Generic_v3.5.yml",
                "toversion": "3.6.0",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "CloseInvestigation"
                ],
                "implementing_playbooks": [
                    "Entity Enrichment - Generic",
                    "Detonate File - Generic",
                    "Calculate Severity - Generic",
                    "Malware Investigation - Generic - Setup",
                    "Extract Indicators - Generic"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "malware_investigation-_generic_-_setup": {
                "name": "Malware Investigation - Generic - Setup",
                "file_path": "Playbooks/playbook-Malware_Investigation_-_Generic_-_Setup.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "Get File Sample From Path - Generic",
                    "Get File Sample By Hash - Generic",
                    "Search Endpoints By Hash - Generic"
                ],
                "tests": [
                    "No test - Need to do"
                ]
            }
        },
        {
            "MAR - Endpoint data collection": {
                "name": "MAR - Endpoint data collection",
                "file_path": "Playbooks/playbook-MAR_-_Endpoint_data_collection.yml",
                "implementing_scripts": [
                    "Exists",
                    "EPOFindSystem"
                ],
                "command_to_integration": {
                    "mar-search-multiple": "McAfee Active Response"
                },
                "tests": [
                    "No tests - Need to add"
                ]
            }
        },
        {
            "NetOps - Firewall Version and Content Upgrade": {
                "name": "NetOps - Firewall Version and Content Upgrade",
                "file_path": "Playbooks/playbook-NetOps_-_Firewall_Version_Content_Upgrade.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "panorama-download-latest-content-update": "Panorama",
                    "panorama-content-update-download-status": "Panorama",
                    "panorama-install-latest-content-update": "Panorama",
                    "panorama-content-update-install-status": "Panorama",
                    "panorama-check-latest-panos-software": "Panorama",
                    "panorama-download-panos-version": "Panorama",
                    "panorama-install-panos-version": "Panorama",
                    "panorama-install-panos-status": "Panorama",
                    "panorama-device-reboot": "Panorama",
                    "panorama-download-panos-status": "Panorama"
                },
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "NetOps - Upgrade PAN-OS Firewall Device": {
                "name": "NetOps - Upgrade PAN-OS Firewall Device",
                "file_path": "Playbooks/playbook-NetOps_-_Firewall_Upgrade.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "NetOps - Firewall Version and Content Upgrade"
                ],
                "command_to_integration": {
                    "panorama-show-device-version": "Panorama"
                },
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "NetSec - Palo Alto Networks DUG - Tag User": {
                "name": "NetSec - Palo Alto Networks DUG - Tag User",
                "file_path": "Playbooks/playbook-NetSec_-_Palo_Alto_Networks_DUG_-_Tag_User.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "IsListExist"
                ],
                "command_to_integration": {
                    "panorama-register-user-tag": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "NIST - Handling an Incident Template": {
                "name": "NIST - Handling an Incident Template",
                "file_path": "Playbooks/playbook-NIST_-_Handling_an_Incident.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "NIST - Lessons Learned"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "NIST - Lessons Learned2": {
                "name": "NIST - Lessons Learned",
                "file_path": "Playbooks/playbook-NIST_-_Lessons_Learned.yml",
                "fromversion": "5.0.0",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Office 365 Search and Delete": {
                "name": "Office 365 Search and Delete",
                "file_path": "Playbooks/playbook-Office_365_Search_and_Delete.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "ews-o365-start-compliance-search": "",
                    "ews-o365-get-compliance-search": "",
                    "ews-o365-purge-compliance-search-results": "",
                    "ews-o365-remove-compliance-search": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Palo Alto Networks - Endpoint Malware Investigation": {
                "name": "Palo Alto Networks - Endpoint Malware Investigation",
                "file_path": "Playbooks/playbook-Palo_Alto_Networks_-_Endpoint_Malware_Investigation.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "Traps Retrieve And Download Files",
                    "Palo Alto Networks - Malware Remediation",
                    "WildFire - Detonate file",
                    "PANW - Hunting and threat detection by indicator type",
                    "Calculate Severity - Standard",
                    "Traps Isolate Endpoint"
                ],
                "command_to_integration": {
                    "autofocus-sample-analysis": "AutoFocus V2",
                    "file": "Palo Alto Minemeld",
                    "domain": "Palo Alto Minemeld",
                    "ip": "Palo Alto Minemeld",
                    "url": "Palo Alto Minemeld",
                    "traps-get-endpoint-by-id": "Traps",
                    "traps-event-update": "Traps"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Palo Alto Networks - Malware Remediation": {
                "name": "Palo Alto Networks - Malware Remediation",
                "file_path": "Playbooks/playbook-Palo_Alto_Networks_-_Malware_Remediation.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "PAN-OS - Block IP - Custom Block Rule",
                    "PAN-OS - Block URL - Custom URL Category",
                    "PAN-OS DAG Configuration",
                    "PAN-OS - Block IP - Static Address Group",
                    "Traps Quarantine Event",
                    "Cortex XDR - Isolate Endpoint",
                    "PAN-OS - Block IP and URL - External Dynamic List",
                    "PAN-OS - Block Domain - External Dynamic List",
                    "Traps Blacklist File",
                    "Traps Isolate Endpoint",
                    "Add Indicator to Miner - Palo Alto MineMeld"
                ],
                "tests": [
                    "Palo Alto Networks - Malware Remediation Test"
                ]
            }
        },
        {
            "PAN-OS - Add Static Routes": {
                "name": "PAN-OS - Add Static Routes",
                "file_path": "Playbooks/playbook-PAN-OS_-_Add_Static_Routes.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "PanoramaCommitConfiguration"
                ],
                "command_to_integration": {
                    "panorama-add-static-route": "",
                    "panorama-list-static-routes": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "PAN-OS - Block Domain - External Dynamic List": {
                "name": "PAN-OS - Block Domain - External Dynamic List",
                "file_path": "Playbooks/playbook-PAN-OS_-_Block_Domain_-_External_Dynamic_List.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "PAN-OS EDL Setup"
                ],
                "command_to_integration": {
                    "pan-os-edl-update": "",
                    "panorama-refresh-edl": "",
                    "panorama": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "PAN-OS - Block IP - Custom Block Rule": {
                "name": "PAN-OS - Block IP - Custom Block Rule",
                "file_path": "Playbooks/playbook-PAN-OS_-_Block_IP_-_Custom_Block_Rule.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "PAN-OS Commit Configuration"
                ],
                "command_to_integration": {
                    "panorama-custom-block-rule": "",
                    "panorama-create-address": ""
                },
                "tests": [
                    "PAN-OS - Block IP - Custom Block Rule Test"
                ]
            }
        },
        {
            "PAN-OS - Block IP - Static Address Group": {
                "name": "PAN-OS - Block IP - Static Address Group",
                "file_path": "Playbooks/playbook-PAN-OS_-_Block_IP_-_Static_Address_Group.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "PAN-OS Commit Configuration"
                ],
                "command_to_integration": {
                    "panorama-get-address-group": "",
                    "panorama-edit-address-group": "",
                    "panorama-create-address": ""
                },
                "tests": [
                    "PAN-OS - Block IP - Static Address Group Test"
                ]
            }
        },
        {
            "PAN-OS - Block IP and URL - External Dynamic List": {
                "name": "PAN-OS - Block IP and URL - External Dynamic List",
                "file_path": "Playbooks/playbook-PAN-OS_-_Block_IP_and_URL_-_External_Dynamic_List.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "PAN-OS EDL Setup v2"
                ],
                "command_to_integration": {
                    "pan-os-edl-update": "",
                    "panorama-refresh-edl": "",
                    "panorama": ""
                },
                "tests": [
                    "PAN-OS - Block IP and URL - External Dynamic List Test"
                ]
            }
        },
        {
            "PAN-OS - Block URL - Custom URL Category": {
                "name": "PAN-OS - Block URL - Custom URL Category",
                "file_path": "Playbooks/playbook-PAN-OS_-_Block_URL_-_Custom_URL_Category.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "PAN-OS Commit Configuration"
                ],
                "command_to_integration": {
                    "panorama-create-custom-url-category": "",
                    "panorama-custom-block-rule": "",
                    "panorama-get-custom-url-category": "",
                    "panorama-edit-custom-url-category": ""
                },
                "tests": [
                    "PAN-OS - Block URL - Custom URL Category Test"
                ]
            }
        },
        {
            "PAN-OS - Create Or Edit EDL Rule": {
                "name": "PAN-OS - Create Or Edit EDL Rule",
                "file_path": "Playbooks/playbook-PAN-OS_-_Create_Or_Edit_EDL_Rule.yml",
                "fromversion": "4.0.0",
                "command_to_integration": {
                    "panorama-edit-rule": "Panorama",
                    "panorama-create-rule": "Panorama",
                    "panorama-move-rule": "Panorama",
                    "panorama-get-edl": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "PAN-OS - Create Or Edit Rule": {
                "name": "PAN-OS - Create Or Edit Rule",
                "file_path": "Playbooks/playbook-PAN-OS_-_Create_Or_Edit_Rule.yml",
                "fromversion": "4.0.0",
                "command_to_integration": {
                    "panorama-list-rules": "Panorama",
                    "panorama-edit-rule": "Panorama",
                    "panorama-create-rule": "Panorama",
                    "panorama-move-rule": "Panorama"
                }
            }
        },
        {
            "PAN-OS - Delete Static Routes": {
                "name": "PAN-OS - Delete Static Routes",
                "file_path": "Playbooks/playbook-PAN-OS_-_Delete_Static_Routes.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "PanoramaCommitConfiguration"
                ],
                "command_to_integration": {
                    "panorama-delete-static-route": "",
                    "panorama-list-static-routes": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "PAN-OS Commit Configuration": {
                "name": "PAN-OS Commit Configuration",
                "file_path": "Playbooks/playbook-Pan-OS_Commit_Configuration.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "PrintErrorEntry"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "panorama-commit": "",
                    "panorama-push-to-device-group": "",
                    "panorama-commit-status": "",
                    "panorama-push-status": "",
                    "panorama": "Panorama"
                }
            }
        },
        {
            "PAN-OS DAG Configuration": {
                "name": "PAN-OS DAG Configuration",
                "file_path": "Playbooks/playbook-PAN-OS_DAG_Configuration.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "AreValuesEqual"
                ],
                "implementing_playbooks": [
                    "PAN-OS - Create Or Edit Rule",
                    "PAN-OS Commit Configuration"
                ],
                "command_to_integration": {
                    "panorama-list-address-groups": "",
                    "panorama-register-ip-tag": "",
                    "panorama-create-address-group": ""
                }
            }
        },
        {
            "PAN-OS EDL Setup": {
                "name": "PAN-OS EDL Setup",
                "file_path": "Playbooks/playbook-PAN-OS_EDL_Setup.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "AreValuesEqual"
                ],
                "implementing_playbooks": [
                    "PAN-OS - Create Or Edit Rule",
                    "PAN-OS Commit Configuration"
                ],
                "command_to_integration": {
                    "pan-os-edl-get-external-file-metadata": "",
                    "pan-os-edl-update-from-external-file": "",
                    "pan-os-edl-update": "",
                    "panorama-create-edl": ""
                }
            }
        },
        {
            "PAN-OS EDL Setup v2": {
                "name": "PAN-OS EDL Setup v2",
                "file_path": "Playbooks/playbook-PAN-OS_EDL_Setup_v2.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "AreValuesEqual"
                ],
                "implementing_playbooks": [
                    "PAN-OS - Create Or Edit EDL Rule",
                    "PAN-OS Commit Configuration"
                ],
                "command_to_integration": {
                    "pan-os-edl-get-external-file-metadata": "",
                    "pan-os-edl-update-from-external-file": "",
                    "pan-os-edl-update": "",
                    "panorama-create-edl": "",
                    "panorama": "",
                    "panorama-get-edl": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "PAN-OS Log Forwarding Setup And Configuration": {
                "name": "PAN-OS Log Forwarding Setup And Configuration",
                "file_path": "Playbooks/playbook-PAN-OS_Log_Forwarding_Setup_And_Maintenance.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "Set"
                ],
                "implementing_playbooks": [
                    "PAN-OS Commit Configuration"
                ],
                "command_to_integration": {
                    "panorama-list-rules": "",
                    "panorama-edit-rule": ""
                },
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "PAN-OS Query Logs For Indicators": {
                "name": "PAN-OS Query Logs For Indicators",
                "file_path": "Playbooks/playbook-PAN-OS_Query_Logs_For_Indicators.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "panorama-query-logs": "",
                    "panorama-get-logs": "",
                    "panorama-check-logs-status": ""
                },
                "tests": [
                    "PAN-OS Query Logs For Indicators Test"
                ]
            }
        },
        {
            "Panorama Query Logs": {
                "name": "Panorama Query Logs",
                "file_path": "Playbooks/playbook-Panorama_Query_Logs.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "panorama-query-logs": "",
                    "panorama-get-logs": "",
                    "panorama-check-logs-status": ""
                }
            }
        },
        {
            "PanoramaCommitConfiguration": {
                "name": "PanoramaCommitConfiguration",
                "file_path": "Playbooks/playbook-PanoramaCommitConfiguration.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "panorama-commit": "",
                    "panorama-push-to-device-group": "",
                    "panorama-commit-status": "",
                    "panorama-push-status": ""
                },
                "tests": [
                    "palo_alto_firewall_test_pb"
                ]
            }
        },
        {
            "PanoramaQueryTrafficLogs": {
                "name": "PanoramaQueryTrafficLogs",
                "file_path": "Playbooks/playbook-PanoramaQueryTrafficLogs.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "panorama-query-traffic-logs": "",
                    "panorama-check-traffic-logs-status": "",
                    "panorama-get-traffic-logs": ""
                },
                "tests": [
                    "palo_alto_firewall_test_pb"
                ]
            }
        },
        {
            "PANW - Hunting and threat detection by indicator type": {
                "name": "PANW - Hunting and threat detection by indicator type",
                "file_path": "Playbooks/playbook-PANW_-_Hunting_and_threat_detection_by_indicator_type.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "Convert file hash to corresponding hashes",
                    "PAN-OS Query Logs For Indicators",
                    "Autofocus Query Samples, Sessions and Tags"
                ],
                "command_to_integration": {
                    "cortex-query-threat-logs": "",
                    "cortex-query-traffic-logs": "",
                    "cortex-query-traps-logs": "",
                    "cortex-query-analytics-logs": ""
                },
                "tests": [
                    "PANW - Hunting and threat detection by indicator type Test"
                ]
            }
        },
        {
            "PANW - Hunting and threat detection by indicator type V2": {
                "name": "PANW - Hunting and threat detection by indicator type V2",
                "file_path": "Playbooks/playbook-PANW_-_Hunting_and_threat_detection_by_indicator_type_V2.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "SetAndHandleEmpty",
                    "IsIPInRanges"
                ],
                "implementing_playbooks": [
                    "Convert file hash to corresponding hashes",
                    "PAN-OS Query Logs For Indicators",
                    "Autofocus Query Samples, Sessions and Tags"
                ],
                "command_to_integration": {
                    "cortex-query-threat-logs": "",
                    "cortex-query-traffic-logs": "",
                    "cortex-query-traps-logs": "",
                    "cortex-query-analytics-logs": ""
                },
                "tests": [
                    "PANW - Hunting and threat detection by indicator type Test"
                ]
            }
        },
        {
            "Pentera Run Scan": {
                "name": "Pentera Run Scan",
                "file_path": "Packs/Pcysys/Playbooks/playbook-Pentera_Run_Scan.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "pentera-run-template-by-name": "",
                    "pentera-get-task-run-full-action-report": "",
                    "pentera-get-task-run-status": ""
                },
                "pack": "Pcysys"
            }
        },
        {
            "Phishing - Core": {
                "name": "Phishing - Core",
                "file_path": "Playbooks/playbook-Phishing_-_Core.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "Process Email - Core",
                    "Extract Indicators From File - Generic v2"
                ],
                "command_to_integration": {
                    "send-mail": "",
                    "rasterize": "",
                    "rasterize-email": ""
                },
                "tests": [
                    "Phishing - Core - Test"
                ]
            }
        },
        {
            "Phishing Investigation - Generic": {
                "name": "Phishing Investigation - Generic",
                "file_path": "Playbooks/playbook-Phishing_Investigation_-_Generic.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "SendEmail",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Process Email - Generic",
                    "Email Address Enrichment - Generic",
                    "Entity Enrichment - Generic",
                    "Detonate File - Generic",
                    "Calculate Severity - Generic",
                    "Extract Indicators From File - Generic",
                    "Block Indicators - Generic",
                    "Search And Delete Emails - Generic"
                ],
                "command_to_integration": {
                    "send-mail": ""
                },
                "tests": [
                    "Phishing test - attachment",
                    "Phishing test - Inline"
                ]
            }
        },
        {
            "Phishing Investigation - Generic": {
                "name": "Phishing Investigation - Generic",
                "file_path": "Playbooks/playbook-Phishing_Investigation_-_Generic_3_5_0.yml",
                "toversion": "3.5.9",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "CloseInvestigation",
                    "SendEmail",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Process Email - Generic",
                    "Email Address Enrichment - Generic",
                    "Entity Enrichment - Generic",
                    "Detonate File - Generic",
                    "Calculate Severity - Generic",
                    "Extract Indicators - Generic"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "Phishing Investigation - Generic": {
                "name": "Phishing Investigation - Generic",
                "file_path": "Playbooks/playbook-Phishing_Investigation_-_Generic_4.0.yml",
                "toversion": "4.0.9",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "SendEmail",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Process Email - Generic",
                    "Email Address Enrichment - Generic",
                    "Entity Enrichment - Generic",
                    "Detonate File - Generic",
                    "Calculate Severity - Generic",
                    "Extract Indicators From File - Generic",
                    "Block Indicators - Generic",
                    "Search And Delete Emails - Generic"
                ],
                "command_to_integration": {
                    "send-mail": ""
                },
                "tests": [
                    "Phishing test - attachment",
                    "Phishing test - Inline"
                ]
            }
        },
        {
            "Phishing Investigation - Generic": {
                "name": "Phishing Investigation - Generic",
                "file_path": "Playbooks/playbook-Phishing_Investigation_-_Generic_3.6.yml",
                "toversion": "3.9.9",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "CloseInvestigation",
                    "SendEmail",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Process Email - Generic",
                    "Email Address Enrichment - Generic",
                    "Entity Enrichment - Generic",
                    "Detonate File - Generic",
                    "Calculate Severity - Generic",
                    "Extract Indicators From File - Generic",
                    "Search And Delete Emails - Generic"
                ],
                "tests": [
                    "Phishing test - attachment",
                    "Phishing test - Inline"
                ]
            }
        },
        {
            "Phishing Investigation - Generic v2": {
                "name": "Phishing Investigation - Generic v2",
                "file_path": "Playbooks/playbook-Phishing_Investigation_-_Generic_v2.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "Set",
                    "DBotPredictPhishingWords",
                    "SendEmail",
                    "CheckEmailAuthenticity"
                ],
                "implementing_playbooks": [
                    "Email Address Enrichment - Generic v2.1",
                    "File Enrichment - Generic v2",
                    "Calculate Severity - Generic v2",
                    "Process Email - Generic",
                    "IP Enrichment - External - Generic v2",
                    "Detonate File - Generic",
                    "URL Enrichment - Generic v2",
                    "Block Indicators - Generic",
                    "Extract Indicators From File - Generic v2",
                    "Search And Delete Emails - Generic",
                    "Domain Enrichment - Generic v2"
                ],
                "command_to_integration": {
                    "send-mail": ""
                },
                "tests": [
                    "Phishing v2 Test - Attachment",
                    "Phishing v2 Test - Inline"
                ]
            }
        },
        {
            "Phishing Investigation - Generic v2": {
                "name": "Phishing Investigation - Generic v2",
                "file_path": "Playbooks/playbook-Phishing_Investigation_-_Generic_v2_4_1.yml",
                "toversion": "4.4.9",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "SendEmail",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Process Email - Generic",
                    "Detonate File - Generic",
                    "Calculate Severity - Generic",
                    "Extract Indicators From File - Generic",
                    "Email Address Enrichment - Generic v2",
                    "Block Indicators - Generic",
                    "Entity Enrichment - Phishing v2",
                    "Search And Delete Emails - Generic"
                ],
                "command_to_integration": {
                    "send-mail": ""
                },
                "tests": [
                    "Phishing v2 Test - Attachment",
                    "Phishing v2 Test - Inline"
                ]
            }
        },
        {
            "PhishingDemo-Onboarding": {
                "name": "PhishingDemo-Onboarding",
                "file_path": "Playbooks/playbook-PhishingDemo-Onboarding.yml",
                "fromversion": "4.1.0",
                "command_to_integration": {
                    "demo-ip": "OnboardingIntegration",
                    "rasterize-email": "Rasterize",
                    "demo-url": "OnboardingIntegration",
                    "demo-domain": "OnboardingIntegration",
                    "demo-email": "OnboardingIntegration",
                    "demo-file": "OnboardingIntegration"
                },
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "PhishLabs - Populate Indicators": {
                "name": "PhishLabs - Populate Indicators",
                "file_path": "Playbooks/playbook-PhishLabsPopulateIndicators.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "PhishLabsPopulateIndicators"
                ],
                "tests": [
                    "PhishLabsTestPopulateIndicators"
                ]
            }
        },
        {
            "PhishLabs - Whitelist false positives": {
                "name": "PhishLabs - Whitelist false positives",
                "file_path": "Playbooks/playbook-PhishLabsWhitelistIndicators.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "PhishLabsPopulateIndicators"
                ],
                "tests": [
                    "PhishLabsTestPopulateIndicators"
                ]
            }
        },
        {
            "playbook0": {
                "name": "Default",
                "file_path": "Playbooks/playbook-default.yml",
                "toversion": "4.9.9",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident"
                ],
                "implementing_playbooks": [
                    "Entity Enrichment - Generic",
                    "Extract Indicators - Generic",
                    "Calculate Severity - Generic"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "playbook0": {
                "name": "Default",
                "file_path": "Playbooks/playbook-Default_5.0.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "AssignAnalystToIncident"
                ],
                "implementing_playbooks": [
                    "Calculate Severity - Generic v2",
                    "Entity Enrichment - Generic v2"
                ],
                "tests": [
                    "Default - Test"
                ]
            }
        },
        {
            "playbook0": {
                "name": "Default",
                "file_path": "Playbooks/playbook-default-old.yml",
                "toversion": "3.1.0",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Print",
                    "IncidentSet",
                    "VectraClassifier",
                    "NexposeEmailParser",
                    "TrendMicroClassifier",
                    "MapValues",
                    "SplunkEmailParser",
                    "Exists",
                    "QRadarClassifier"
                ],
                "implementing_playbooks": [
                    "Enrichment Playbook"
                ],
                "tests": [
                    "No tests - Deprecated playbook"
                ]
            }
        },
        {
            "playbook1": {
                "name": "Malware Playbook - Manual",
                "file_path": "Playbooks/playbook-malware.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists",
                    "ExposeModules",
                    "Autoruns"
                ],
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "playbook10": {
                "name": "Rapid IOC Hunting Playbook",
                "file_path": "Playbooks/playbook-Rapid_IOC_Hunting_Playbook.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Print",
                    "ExtractHash",
                    "ExtractURL",
                    "ExtractIP",
                    "Exists",
                    "ReadFile"
                ],
                "implementing_playbooks": [
                    "Hunt for bad IOCs"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "playbook11": {
                "name": "McAfee ePO Repository Compliance Playbook",
                "file_path": "Playbooks/playbook-McAfee_ePO_Repository_Compliance_Playbook.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "IncidentSet",
                    "AreValuesEqual",
                    "CloseInvestigation",
                    "SendEmail",
                    "Sleep"
                ],
                "command_to_integration": {
                    "epo-get-latest-dat": "epo",
                    "epo-update-repository": "epo",
                    "epo-get-current-dat": "epo"
                },
                "tests": [
                    "Test Playbook McAfee ePO"
                ]
            }
        },
        {
            "playbook12": {
                "name": "McAfee ePO Endpoint Compliance Playbook",
                "file_path": "Playbooks/playbook-McAfee_ePO_Endpoint_Compliance_Playbook.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "CloseInvestigation",
                    "IncidentSet",
                    "commentsToContext"
                ],
                "command_to_integration": {
                    "epo-get-current-dat": "epo",
                    "servicenow-incident-create": "ServiceNow",
                    "epo-update-client-dat": "epo",
                    "servicenow-incidents-query": "ServiceNow",
                    "epo-get-latest-dat": "epo"
                },
                "tests": [
                    "Test Playbook McAfee ePO"
                ]
            }
        },
        {
            "playbook13": {
                "name": "McAfee ePO Endpoint Connectivity Diagnostics Playbook",
                "file_path": "Playbooks/playbook-McAfee_Agent_Connectivity_Check.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "CloseInvestigation",
                    "Ping",
                    "commentsToContext"
                ],
                "command_to_integration": {
                    "servicenow-incident-create": "ServiceNow"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "playbook14": {
                "name": "Checkpoint Firewall Configuration Backup Playbook",
                "file_path": "Playbooks/playbook-Checkpoint_Firewall_Configuration_Backup.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "CPShowBackupStatus",
                    "UtilAnyResults",
                    "CloseInvestigation",
                    "CPCreateBackup",
                    "SNOpenTicket",
                    "SendEmail",
                    "SCPPullFiles"
                ],
                "tests": [
                    "No test - old playbook"
                ]
            }
        },
        {
            "playbook15": {
                "name": "Tanium Demo Playbook",
                "file_path": "Playbooks/playbook-Tanium_Demo.yml",
                "fromversion": "2.5.0",
                "command_to_integration": {
                    "tn-ask-question": "Tanium",
                    "tn-get-saved-question": "Tanium",
                    "tn-deploy-package": "Tanium"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "playbook16": {
                "name": "CrowdStrike Rapid IOC Hunting",
                "file_path": "Playbooks/playbook-CrowdStrike_Rapid_IOC_Hunting.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists",
                    "SendEmail"
                ],
                "command_to_integration": {
                    "cs-device-ran-on": "FalconHost",
                    "cs-device-search": "FalconHost"
                },
                "tests": [
                    "No test - old playbook"
                ]
            }
        },
        {
            "playbook17": {
                "name": "Carbon black Protection Rapid IOC Hunting",
                "file_path": "Playbooks/playbook-Carbon_black_Protection_Rapid_IOC_Hunting.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists",
                    "CBPFindRule",
                    "CBPCatalogFindHash"
                ]
            }
        },
        {
            "playbook2": {
                "name": "Phishing Playbook - Manual",
                "file_path": "Playbooks/playbook-Phishing.yml",
                "fromversion": "2.5.0"
            }
        },
        {
            "playbook3": {
                "name": "Ransomware Playbook - Manual",
                "file_path": "Playbooks/playbook-ransomware.yml",
                "fromversion": "2.5.0"
            }
        },
        {
            "playbook5": {
                "name": "Phishing Playbook - Automated",
                "file_path": "Playbooks/playbook-PhishingAutomated_3_1_0.yml",
                "toversion": "3.1.0",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "IsMaliciousIndicatorFound",
                    "Set",
                    "ExtractIP",
                    "ExtractURL",
                    "CloseInvestigation",
                    "SendEmail",
                    "CheckSenderDomainDistance",
                    "Exists"
                ],
                "implementing_playbooks": [
                    "Enrichment Playbook",
                    "Account Enrichment",
                    "Process Email",
                    "Hunt for bad IOCs",
                    "Detonate files"
                ],
                "tests": [
                    "No tests - deprecated"
                ]
            }
        },
        {
            "playbook5": {
                "name": "Phishing Playbook - Automated",
                "file_path": "Playbooks/playbook-PhishingAutomated.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "IsMaliciousIndicatorFound",
                    "Set",
                    "ExtractIP",
                    "ExtractURL",
                    "CloseInvestigation",
                    "SendEmail",
                    "CheckSenderDomainDistance",
                    "Exists"
                ],
                "implementing_playbooks": [
                    "Enrichment Playbook",
                    "Account Enrichment",
                    "Process Email",
                    "Detonate File - Generic",
                    "Hunt for bad IOCs"
                ],
                "tests": [
                    "No test - Deprecated playbook"
                ]
            }
        },
        {
            "playbook7": {
                "name": "Hunting C&C Communication Playbook",
                "file_path": "Playbooks/playbook-C&C-Communication-Hunting.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists",
                    "IsIntegrationAvailable"
                ],
                "command_to_integration": {
                    "slack-send": "slack",
                    "ExposeModules": "ExposeModules"
                }
            }
        },
        {
            "playbook8": {
                "name": "Lost / Stolen Device Playbook",
                "file_path": "Playbooks/playbook-lost_stolen_device.yml",
                "fromversion": "2.5.0"
            }
        },
        {
            "Prisma Cloud Compute - Audit Alert": {
                "name": "Prisma Cloud Compute - Audit Alert",
                "file_path": "Packs/PrismaCloudCompute/Playbooks/Prisma_Cloud_Compute_-_Audit_Alert.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "PrismaCloudComputeParseAuditAlert"
                ],
                "tests": [
                    "No Test"
                ],
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "Prisma Cloud Compute - Cloud Discovery Alert": {
                "name": "Prisma Cloud Compute - Cloud Discovery Alert",
                "file_path": "Packs/PrismaCloudCompute/Playbooks/Prisma_Cloud_Compute_-_Cloud_Discovery_Alert.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "PrismaCloudComputeParseCloudDiscoveryAlert"
                ],
                "tests": [
                    "No Test"
                ],
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "Prisma Cloud Compute - Compliance Alert": {
                "name": "Prisma Cloud Compute - Compliance Alert",
                "file_path": "Packs/PrismaCloudCompute/Playbooks/Prisma_Cloud_Compute_-_Compliance_Alert.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "PrismaCloudComputeParseComplianceAlert"
                ],
                "tests": [
                    "No Test"
                ],
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "Prisma Cloud Compute - Vulnerability Alert": {
                "name": "Prisma Cloud Compute - Vulnerability Alert",
                "file_path": "Packs/PrismaCloudCompute/Playbooks/Prisma_Cloud_Compute_-_Vulnerability_Alert.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "PrismaCloudComputeParseVulnerabilityAlert"
                ],
                "tests": [
                    "No Test"
                ],
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "Prisma Cloud Remediation - AWS CloudTrail is not Enabled on the Account": {
                "name": "Prisma Cloud Remediation - AWS CloudTrail is not Enabled on the Account",
                "file_path": "Playbooks/playbook-PrismaCloudRemediation_-_AWSCloudTrailIsNotEnabledOnTheAccount.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "aws-s3-create-bucket": "",
                    "aws-s3-put-bucket-policy": "",
                    "aws-cloudtrail-create-trail": "",
                    "aws-cloudtrail-start-logging": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - AWS CloudTrail Is Not Integrated With CloudWatch Logs": {
                "name": "Prisma Cloud Remediation - AWS CloudTrail Is Not Integrated With CloudWatch Logs",
                "file_path": "Playbooks/playbook-PCR_-_AWS_CloudTrail_Integrated_CloudWatchLogs.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "isError",
                    "Sleep"
                ],
                "command_to_integration": {
                    "aws-cloudtrail-describe-trails": "AWS - CloudTrail",
                    "aws-logs-create-log-group": "AWS - CloudWatchLogs",
                    "aws-cloudtrail-update-trail": "AWS - CloudTrail",
                    "aws-logs-describe-log-groups": "AWS - CloudWatchLogs",
                    "aws-iam-create-role": "AWS - IAM",
                    "aws-iam-get-role": "",
                    "aws-iam-create-policy": "AWS - IAM--DEV",
                    "aws-iam-attach-policy": "AWS - IAM--DEV"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - AWS CloudTrail Misconfiguration": {
                "name": "Prisma Cloud Remediation - AWS CloudTrail Misconfiguration",
                "file_path": "Playbooks/playbook-PCR_-_AWS_CloudTrail_Misconfig.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "Prisma Cloud Remediation - AWS CloudTrail Is Not Integrated With CloudWatch Logs",
                    "Prisma Cloud Remediation - AWS CloudTrail is not Enabled on the Account",
                    "Prisma Cloud Remediation - AWS CloudTrail Trail Misconfiguration"
                ],
                "command_to_integration": {
                    "redlock-dismiss-alerts": "RedLock"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - AWS CloudTrail Trail Misconfiguration": {
                "name": "Prisma Cloud Remediation - AWS CloudTrail Trail Misconfiguration",
                "file_path": "Playbooks/playbook-PCR_-_AWS_CloudTrail_Trail_Misconfig.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "aws-cloudtrail-describe-trails": "AWS - CloudTrail",
                    "aws-cloudtrail-update-trail": "AWS - CloudTrail"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - AWS EC2 Instance Misconfiguration": {
                "name": "Prisma Cloud Remediation - AWS EC2 Instance Misconfiguration",
                "file_path": "Playbooks/playbook-PCR_-_AWS_EC2_Instance_Misconfig.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "Prisma Cloud Remediation - AWS EC2 Security Group Misconfiguration",
                    "Prisma Cloud Remediation - AWS Security Groups Allows Internet Traffic To TCP Port"
                ],
                "command_to_integration": {
                    "redlock-dismiss-alerts": "RedLock"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - AWS EC2 Security Group Misconfiguration": {
                "name": "Prisma Cloud Remediation - AWS EC2 Security Group Misconfiguration",
                "file_path": "Playbooks/playbook-PCR_-_AWS_EC2_SG_Misconfig.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "isError",
                    "Sleep"
                ],
                "command_to_integration": {
                    "aws-ec2-describe-security-groups": "",
                    "aws-ec2-revoke-security-group-ingress-rule": ""
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - AWS IAM Password Policy Misconfiguration": {
                "name": "Prisma Cloud Remediation - AWS IAM Password Policy Misconfiguration",
                "file_path": "Playbooks/playbook-PCR_-_AWS_IAM_Password_Policy_Misconfig.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "aws-iam-update-account-password-policy": ""
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - AWS IAM Policy Misconfiguration": {
                "name": "Prisma Cloud Remediation - AWS IAM Policy Misconfiguration",
                "file_path": "Playbooks/playbook-PCR_-_AWS_IAM_Policy_Misconfig.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "Prisma Cloud Remediation - AWS IAM Password Policy Misconfiguration",
                    "Prisma Cloud Remediation - AWS IAM User Policy Misconfiguration"
                ],
                "command_to_integration": {
                    "aws-iam-get-account-password-policy": "",
                    "redlock-dismiss-alerts": "RedLock"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - AWS IAM User Policy Misconfiguration": {
                "name": "Prisma Cloud Remediation - AWS IAM User Policy Misconfiguration",
                "file_path": "Playbooks/playbook-PCR_-_AWS_IAM_User_Policy_Misconfig.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "Print"
                ],
                "command_to_integration": {
                    "aws-iam-update-access-key": "",
                    "aws-iam-list-access-keys-for-user": ""
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - AWS Inactive Users For More Than 30 Days": {
                "name": "Prisma Cloud Remediation - AWS Inactive Users For More Than 30 Days",
                "file_path": "Playbooks/playbook-PrismaCloudRemediation_-_AWSInactiveUsersForMoreThan30Days.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "Print"
                ],
                "command_to_integration": {
                    "aws-iam-update-access-key": "",
                    "aws-iam-list-access-keys-for-user": "",
                    "aws-iam-update-login-profile": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - AWS Security Groups Allows Internet Traffic To TCP": {
                "name": "Prisma Cloud Remediation - AWS Security Groups Allows Internet Traffic To TCP Port",
                "file_path": "Playbooks/playbook-PrismaCloudRemediation_-_AWSSecurityGroupsAllowInternetTrafficToTCPPort.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "AwsEC2GetPublicSGRules"
                ],
                "command_to_integration": {
                    "aws-ec2-revoke-security-group-ingress-rule": "AWS - EC2",
                    "aws-ec2-describe-security-groups": "AWS - EC2"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - GCP Compute Engine Instance Misconfiguration": {
                "name": "Prisma Cloud Remediation - GCP Compute Engine Instance Misconfiguration",
                "file_path": "Playbooks/playbook-PCR_-_GCP_Compute_Engine_Instance_Misconfig.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "gcp-compute-set-instance-metadata": "Google Cloud Compute",
                    "gcp-compute-get-instance": "Google Cloud Compute"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Prisma Cloud Remediation - GCP Compute Engine Misconfiguration": {
                "name": "Prisma Cloud Remediation - GCP Compute Engine Misconfiguration",
                "file_path": "Playbooks/playbook-PCR_-_GCP_Compute_Engine_Misconfig.yml",
                "fromversion": "5.0.0",
                "implementing_playbooks": [
                    "Prisma Cloud Remediation - GCP Compute Engine Instance Misconfiguration"
                ],
                "command_to_integration": {
                    "redlock-dismiss-alerts": "RedLock"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Process Domain Indicators": {
                "name": "Process Domain Indicators",
                "file_path": "Playbooks/playbook-Process_Domain_Indicators.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "Set",
                    "FilterByList"
                ],
                "command_to_integration": {
                    "domain": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Process Email": {
                "name": "Process Email",
                "file_path": "Playbooks/playbook-Process_Email.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists",
                    "ParseEmailFiles",
                    "Set"
                ],
                "tests": [
                    "No tests - Deprecated playbook"
                ]
            }
        },
        {
            "Process Email - Core": {
                "name": "Process Email - Core",
                "file_path": "Playbooks/playbook-Process_Email_-_Core.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "IdentifyAttachedEmail",
                    "ParseEmailFiles",
                    "Set"
                ],
                "tests": [
                    "Phishing - Core - Test"
                ]
            }
        },
        {
            "Process Hash Indicators": {
                "name": "Process Hash Indicators",
                "file_path": "Playbooks/playbook-Process_Hash_Indicators.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "Set",
                    "FilterByList"
                ],
                "command_to_integration": {
                    "file": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Process IP Indicators": {
                "name": "Process IP Indicators",
                "file_path": "Playbooks/playbook-Process_IP_Indicators.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "Set",
                    "FilterByList"
                ],
                "command_to_integration": {
                    "ip": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Process Url Indicators": {
                "name": "Process Url Indicators",
                "file_path": "Playbooks/playbook-Process_Url_Indicators.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "Set",
                    "FilterByList"
                ],
                "command_to_integration": {
                    "url": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "process_email_-_add_custom_fields": {
                "name": "Process Email - Add custom fields",
                "file_path": "Playbooks/playbook-Process_Email_-_Add_custom_fields.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "IncidentSet"
                ]
            }
        },
        {
            "process_email_-_ews": {
                "name": "Process Email - EWS",
                "file_path": "Playbooks/playbook-Process_Email_-_EWS.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "Set"
                ],
                "command_to_integration": {
                    "ews-get-attachment": "EWS v2"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "process_email_-_generic": {
                "name": "Process Email - Generic",
                "file_path": "Playbooks/playbook-Process_Email_-_Generic_4_0.yml",
                "toversion": "4.5.9",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "IdentifyAttachedEmail",
                    "ParseEmailFiles",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Get Original Email - Generic"
                ],
                "command_to_integration": {
                    "rasterize-email": "Rasterize"
                },
                "tests": [
                    "process_email_-_generic_-_test"
                ]
            }
        },
        {
            "process_email_-_generic": {
                "name": "Process Email - Generic",
                "file_path": "Playbooks/playbook-Process_Email_-_Generic_3_6.yml",
                "toversion": "3.6.0",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "Exists",
                    "ParseEmailFiles",
                    "Set"
                ],
                "command_to_integration": {
                    "rasterize-email": "Rasterize"
                },
                "tests": [
                    "Phishing test - attachment",
                    "Phishing test - Inline"
                ]
            }
        },
        {
            "process_email_-_generic": {
                "name": "Process Email - Generic",
                "file_path": "Playbooks/playbook-Process_Email_-_Generic_3_5.yml",
                "toversion": "3.5.9",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Exists",
                    "ParseEmailFiles",
                    "Set"
                ],
                "command_to_integration": {
                    "rasterize-email": "Rasterize"
                }
            }
        },
        {
            "process_email_-_generic": {
                "name": "Process Email - Generic",
                "file_path": "Playbooks/playbook-Process_Email_-_Generic.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "IdentifyAttachedEmail",
                    "ParseEmailFiles",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Get Original Email - Generic"
                ],
                "command_to_integration": {
                    "rasterize-email": ""
                },
                "tests": [
                    "process_email_-_generic_-_test"
                ]
            }
        },
        {
            "QRadar - Get offense correlations ": {
                "name": "QRadar - Get offense correlations ",
                "file_path": "Playbooks/playbook-QRadar_-_Get_offense_correlations_V3_1_0.yml",
                "toversion": "3.1.0",
                "implementing_scripts": [
                    "Exists",
                    "QRadarGetOffenseCorrelations",
                    "QRadarGetCorrelationLogs",
                    "AreValuesEqual"
                ]
            }
        },
        {
            "QRadar - Get offense correlations ": {
                "name": "QRadar - Get offense correlations",
                "file_path": "Playbooks/playbook-QRadar_-_Get_offense_correlations_.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "QRadarGetOffenseCorrelations",
                    "QRadarGetCorrelationLogs"
                ],
                "tests": [
                    "no tests"
                ]
            }
        },
        {
            "QRadar Add Domain Indicators": {
                "name": "QRadar Add Domain Indicators",
                "file_path": "Playbooks/playbook-QRadar_Add_Domain_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "qradar-update-reference-set-value": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "QRadar Add Hash Indicators": {
                "name": "QRadar Add Hash Indicators",
                "file_path": "Playbooks/playbook-QRadar_Add_hash_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "qradar-update-reference-set-value": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "QRadar Add IP Indicators": {
                "name": "QRadar Add IP Indicators",
                "file_path": "Playbooks/playbook-QRadar_Add_IP_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "qradar-update-reference-set-value": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "QRadar Add Url Indicators": {
                "name": "QRadar Add Url Indicators",
                "file_path": "Playbooks/playbook-QRadar_Add_Url_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "qradar-update-reference-set-value": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "QRadar Indicator Hunting": {
                "name": "QRadar Indicator Hunting",
                "file_path": "Playbooks/playbook-QRadar_Indicator_Hunting.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "QRadarFullSearch"
                ],
                "command_to_integration": {
                    "qradar-get-assets": ""
                },
                "tests": [
                    "QRadar Indicator Hunting Test"
                ]
            }
        },
        {
            "QRadar Indicator Hunting V2": {
                "name": "QRadar Indicator Hunting V2",
                "file_path": "Playbooks/playbook-QRadar_Indicator_Hunting_V2.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "SetAndHandleEmpty",
                    "Set",
                    "IsIPInRanges"
                ],
                "implementing_playbooks": [
                    "QRadarFullSearch"
                ],
                "command_to_integration": {
                    "qradar-get-assets": ""
                },
                "tests": [
                    "QRadar Indicator Hunting Test"
                ]
            }
        },
        {
            "QRadarFullSearch": {
                "name": "QRadarFullSearch",
                "file_path": "Playbooks/playbook-QRadarFullSearch.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "qradar-searches": "",
                    "qradar-get-search": "",
                    "qradar-get-search-results": ""
                },
                "tests": [
                    "test_Qradar"
                ]
            }
        },
        {
            "Retrieve File from Endpoint - Generic": {
                "name": "Retrieve File from Endpoint - Generic",
                "file_path": "Playbooks/playbook-Retrieve_File_from_Endpoint_-_Generic.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "Get File Sample By Hash - Generic v2",
                    "Get File Sample From Path - Generic"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Run Panorama Best Practice Assessment": {
                "name": "Run Panorama Best Practice Assessment",
                "file_path": "Playbooks/playbook-BPA.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "pan-os-bpa-submit-job": "BPA",
                    "pan-os-bpa-get-job-results": "BPA"
                },
                "tests": [
                    "Test-BPA_Integration"
                ]
            }
        },
        {
            "SANS - Incident Handler's Handbook Template": {
                "name": "SANS - Incident Handler's Handbook Template",
                "file_path": "Playbooks/playbook-SANS_-_Incident_Handler's_Handbook_Template.yml",
                "fromversion": "5.0.0",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SANS - Incident Handlers Checklist": {
                "name": "SANS - Incident Handlers Checklist",
                "file_path": "Playbooks/playbook-SANS_-_Incident_Handlers_Checklist.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "GenerateInvestigationSummaryReport"
                ],
                "implementing_playbooks": [
                    "SANS - Lessons Learned"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SANS - Lessons Learned": {
                "name": "SANS - Lessons Learned",
                "file_path": "Playbooks/playbook-SANS_-_Lessons_Learned.yml",
                "fromversion": "5.0.0",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "scan_assets_nexpose": {
                "name": "Scan Assets - Nexpose",
                "file_path": "Playbooks/playbook-Scan_Nexpose_Assets.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "nexpose-start-assets-scan": "Rapid7 Nexpose",
                    "nexpose-get-scan": "Rapid7 Nexpose"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "scan_site_nexpose": {
                "name": "Scan Site - Nexpose",
                "file_path": "Playbooks/playbook-Scan_Nexpose_Site.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "nexpose-start-site-scan": "Rapid7 Nexpose",
                    "nexpose-get-scan": "Rapid7 Nexpose"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "search_and_delete_emails_-_ews": {
                "name": "Search And Delete Emails - EWS",
                "file_path": "Playbooks/playbook-Search_And_Delete_Emails_-_EWS.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "BuildEWSQuery"
                ],
                "command_to_integration": {
                    "ews-search-mailboxes": "EWS v2",
                    "ews-delete-items": "EWS v2"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "search_and_delete_emails_-_generic": {
                "name": "Search And Delete Emails - Generic",
                "file_path": "Playbooks/playbook-Search_And_Delete_Emails_-_Generic.yml",
                "fromversion": "3.6.0",
                "implementing_playbooks": [
                    "Search And Delete Emails - EWS"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "search_endpoints_by_hash_-_carbon_black_protection": {
                "name": "Search Endpoints By Hash - Carbon Black Protection",
                "file_path": "Playbooks/playbook-Search_Endpoints_By_Hash_-_Carbon_Black_Protection.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Exists",
                    "CBPFindRule",
                    "Set",
                    "CBPCatalogFindHash"
                ],
                "command_to_integration": {
                    "cbp-computer-get": "carbonblackprotection"
                }
            }
        },
        {
            "search_endpoints_by_hash_-_carbon_black_response": {
                "name": "Search Endpoints By Hash - Carbon Black Response",
                "file_path": "Playbooks/playbook-Search_Endpoints_By_Hash_-_Carbon_Black_Response.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Set",
                    "CBFindHash"
                ]
            }
        },
        {
            "search_endpoints_by_hash_-_crowdstrike": {
                "name": "Search Endpoints By Hash - CrowdStrike",
                "file_path": "Playbooks/playbook-Search_Endpoints_By_Hash_-_CrowdStrike.yml",
                "fromversion": "3.5.0",
                "command_to_integration": {
                    "cs-device-ran-on": "FalconHost",
                    "cs-device-details": "FalconHost"
                }
            }
        },
        {
            "search_endpoints_by_hash_-_generic": {
                "name": "Search Endpoints By Hash - Generic",
                "file_path": "Playbooks/playbook-Search_Endpoints_By_Hash_-_Generic.yml",
                "fromversion": "3.5.0",
                "implementing_playbooks": [
                    "Search Endpoints By Hash - TIE",
                    "Search Endpoints By Hash - Carbon Black Protection",
                    "Search Endpoints By Hash - Carbon Black Response",
                    "Search Endpoints By Hash - CrowdStrike"
                ]
            }
        },
        {
            "search_endpoints_by_hash_-_tie": {
                "name": "Search Endpoints By Hash - TIE",
                "file_path": "Playbooks/playbook-Search_Endpoints_By_Hash_-_TIE.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "EPOFindSystem"
                ],
                "command_to_integration": {
                    "tie-file-references": "McAfee Threat Intelligence Exchange"
                }
            }
        },
        {
            "Send Investigation Summary Reports": {
                "name": "Send Investigation Summary Reports",
                "file_path": "Playbooks/playbook-Send_Investigation_Summary_Reports.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Exists",
                    "SearchIncidents",
                    "GenerateSummaryReports"
                ],
                "command_to_integration": {
                    "send-mail": ""
                }
            }
        },
        {
            "Send Investigation Summary Reports Job": {
                "name": "Send Investigation Summary Reports Job",
                "file_path": "Playbooks/playbook-Send_Investigation_Summary_Reports_Job.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Send Investigation Summary Reports"
                ],
                "tests": [
                    "No Tests - Wrapper playbook for job only"
                ]
            }
        },
        {
            "Sentinel One - Endpoint data collection": {
                "name": "Sentinel One - Endpoint data collection",
                "file_path": "Playbooks/playbook-Sentinel_One_-_Endpoint_data_collection.yml",
                "implementing_scripts": [
                    "Exists",
                    "Print"
                ],
                "command_to_integration": {
                    "so-agents-query": "SentinelOne",
                    "so-get-agent-processes": "SentinelOne"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Sixgill - DarkFeed - Indicators": {
                "name": "Sixgill - DarkFeed - Indicators",
                "file_path": "Packs/Sixgill/Playbooks/playbook-Sixgill_-_DarkFeed_-_Indicators.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "CreateIndicatorsFromSTIX"
                ],
                "command_to_integration": {
                    "sixgill-get-indicators": "Sixgill"
                },
                "pack": "Sixgill"
            }
        },
        {
            "Splunk Indicator Hunting": {
                "name": "Splunk Indicator Hunting",
                "file_path": "Playbooks/playbook-Splunk_Indicator_Hunting.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "Set",
                    "commentsToContext",
                    "IsInternalHostName",
                    "IsIPInRanges",
                    "SetAndHandleEmpty"
                ],
                "command_to_integration": {
                    "splunk-search": ""
                },
                "tests": [
                    "Splunk Indicator Hunting Test"
                ]
            }
        },
        {
            "Tanium - Ask Question": {
                "name": "Tanium - Ask Question",
                "file_path": "Playbooks/playbook-Tanium_-_Ask_Question.yml",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "tn-ask-question": "",
                    "tn-get-question-result": ""
                },
                "tests": [
                    "Tanium v2 - Test"
                ]
            }
        },
        {
            "Tanium - Get Saved Question Result": {
                "name": "Tanium - Get Saved Question Result",
                "file_path": "Playbooks/playbook-Tanium_-_Get_Saved_Question_Result.yml",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "tn-get-saved-question-result": ""
                },
                "tests": [
                    "Tanium v2 - Test"
                ]
            }
        },
        {
            "tenable-sc-scan": {
                "name": "Launch Scan - Tenable.sc",
                "file_path": "Playbooks/playbook-tenable.sc-scan.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "tenable-sc-launch-scan": "Tenable.sc",
                    "tenable-sc-get-scan-report": "Tenable.sc"
                },
                "tests": [
                    "tenable-sc-test"
                ]
            }
        },
        {
            "Tenable.io Scan": {
                "name": "Tenable.io Scan",
                "file_path": "Playbooks/playbook-Tenable_io_Scan.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "tenable-io-launch-scan": "",
                    "tenable-io-get-scan-status": "",
                    "tenable-io-get-scan-report": ""
                },
                "tests": [
                    "Tenable.io Scan Test"
                ]
            }
        },
        {
            "TIE - IOC Hunt": {
                "name": "TIE - IOC Hunt",
                "file_path": "Playbooks/playbook-TIE_-_IOC_Hunt.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "Exists",
                    "EPOFindSystem"
                ],
                "command_to_integration": {
                    "tie-file-references": "McAfee Threat Intelligence Exchange"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Add All Indicator Types To SIEM": {
                "name": "TIM - Add All Indicator Types To SIEM",
                "file_path": "Playbooks/playbook-TIM_-_Add_All_Indicator_Types_To_SIEM.yml",
                "fromversion": "5.5.0",
                "implementing_playbooks": [
                    "TIM - Add Bad Hash Indicators To SIEM",
                    "TIM - Add Domain Indicators To SIEM",
                    "TIM - Add IP Indicators to SIEM",
                    "TIM - Add Url Indicators To SIEM"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Add Bad Hash Indicators To SIEM": {
                "name": "TIM - Add Bad Hash Indicators To SIEM",
                "file_path": "Playbooks/playbook-TIM_-_Add_Bad_Hash_Indicators_To_SIEM.yml",
                "fromversion": "5.5.0",
                "implementing_playbooks": [
                    "TIM - ArcSight Add Bad Hash Indicators",
                    "TIM - QRadar Add Bad Hash Indicators"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Add Domain Indicators To SIEM": {
                "name": "TIM - Add Domain Indicators To SIEM",
                "file_path": "Playbooks/playbook-TIM_-_Add_Domain_Indicators_To_SIEM.yml",
                "fromversion": "5.5.0",
                "implementing_playbooks": [
                    "TIM - ArcSight Add Domain Indicators",
                    "TIM - QRadar Add Domain Indicators"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Add IP Indicators To SIEM": {
                "name": "TIM - Add IP Indicators To SIEM",
                "file_path": "Playbooks/playbook-TIM_-_Add_IP_Indicators_To_SIEM.yml",
                "fromversion": "5.5.0",
                "implementing_playbooks": [
                    "TIM - ArcSight Add IP Indicators",
                    "TIM - QRadar Add IP Indicators"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Add Url Indicators To SIEM": {
                "name": "TIM - Add Url Indicators To SIEM",
                "file_path": "Playbooks/playbook-TIM_-_Add_Url_Indicators_To_SIEM.yml",
                "fromversion": "5.5.0",
                "implementing_playbooks": [
                    "TIM - ArcSight Add Url Indicators",
                    "TIM - QRadar Add Url Indicators"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - ArcSight Add Bad Hash Indicators": {
                "name": "TIM - ArcSight Add Bad Hash Indicators",
                "file_path": "Playbooks/playbook-TIM_-_ArcSight_Add_Bad_Hash_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "as-add-entries": "ArcSight ESM v2"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - ArcSight Add Domain Indicators": {
                "name": "TIM - ArcSight Add Domain Indicators",
                "file_path": "Playbooks/playbook-TIM_-_ArcSight_Add_Domain_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "as-add-entries": "ArcSight ESM v2"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - ArcSight Add IP Indicators": {
                "name": "TIM - ArcSight Add IP Indicators",
                "file_path": "Playbooks/playbook-TIM_-_ArcSight_Add_IP_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "as-add-entries": "ArcSight ESM v2"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - ArcSight Add Url Indicators": {
                "name": "TIM - ArcSight Add Url Indicators",
                "file_path": "Playbooks/playbook-TIM_-_ArcSight_Add_Url_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "as-add-entries": "ArcSight ESM v2"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Indicator Auto Processing": {
                "name": "TIM - Indicator Auto Processing",
                "file_path": "Playbooks/playbook-TIM_-_Indicator_Auto_Processing.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "SetAndHandleEmpty"
                ],
                "implementing_playbooks": [
                    "TIM - Process File Indicators With File Hash Type",
                    "TIM - Process Indicators Against Business Partners URL List",
                    "TIM - Process Indicators Against Business Partners IP List",
                    "TIM - Process Indicators Against Business Partners Domains List",
                    "TIM - Process Indicators Against Approved Hash List",
                    "TIM - Process Indicators Against Organizations External IP List"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Process File Indicators With File Hash Type": {
                "name": "TIM - Process File Indicators With File Hash Type",
                "file_path": "Playbooks/playbook-TIM_-_Process_File_Indicators_With_File_Hash_Type.yml",
                "fromversion": "5.5.0",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Process Indicators - Fully Automated": {
                "name": "TIM - Process Indicators - Fully Automated",
                "file_path": "Playbooks/playbook-TIM_-_Process_Indicators_-_Fully_Automated.yml",
                "fromversion": "5.5.0",
                "implementing_playbooks": [
                    "TIM - Indicator Auto Processing"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Process Indicators - Manual Review": {
                "name": "TIM - Process Indicators - Manual Review",
                "file_path": "Playbooks/playbook-TIM_-_Process_Indicators_Manual_Review.yml",
                "fromversion": "5.5.0",
                "implementing_playbooks": [
                    "TIM - Indicator Auto Processing"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Process Indicators Against Approved Hash List": {
                "name": "TIM - Process Indicators Against Approved Hash List",
                "file_path": "Playbooks/playbook-TIM_-_Process_Indicators_Against_Approved_Hash_List.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "SetAndHandleEmpty",
                    "FilterByList"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Process Indicators Against Business Partners Domains List": {
                "name": "TIM - Process Indicators Against Business Partners Domains List",
                "file_path": "Playbooks/playbook-TIM_-_Process_Indicators_Against_Business_Partners_Domains_List.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "SetAndHandleEmpty",
                    "FilterByList"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Process Indicators Against Business Partners IP List": {
                "name": "TIM - Process Indicators Against Business Partners IP List",
                "file_path": "Playbooks/playbook-TIM_-_Process_Indicators_Against_Business_Partners_IP_List.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "SetAndHandleEmpty",
                    "FilterByList"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Process Indicators Against Business Partners URL List": {
                "name": "TIM - Process Indicators Against Business Partners URL List",
                "file_path": "Playbooks/playbook-TIM_-_Process_Indicators_Against_Business_Partners_URL_List.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "SetAndHandleEmpty",
                    "FilterByList"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Process Indicators Against Organizations External IP List": {
                "name": "TIM - Process Indicators Against Organizations External IP List",
                "file_path": "Playbooks/playbook-TIM_-_Process_Indicators_Against_Organizations_External_IP_List.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "SetAndHandleEmpty",
                    "FilterByList"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - QRadar Add Bad Hash Indicators": {
                "name": "TIM - QRadar Add Bad Hash Indicators",
                "file_path": "Playbooks/playbook-TIM_-_QRadar_Add_Bad_Hash_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "qradar-update-reference-set-value": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - QRadar Add Domain Indicators": {
                "name": "TIM - QRadar Add Domain Indicators",
                "file_path": "Playbooks/playbook-TIM_-_QRadar_Add_Domain_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "qradar-update-reference-set-value": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - QRadar Add IP Indicators": {
                "name": "TIM - QRadar Add IP Indicators",
                "file_path": "Playbooks/playbook-TIM_-_QRadar_Add_IP_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "qradar-update-reference-set-value": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - QRadar Add Url Indicators": {
                "name": "TIM - QRadar Add Url Indicators",
                "file_path": "Playbooks/playbook-TIM_-_QRadar_Add_Url_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "qradar-update-reference-set-value": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Review Indicators Manually": {
                "name": "TIM - Review Indicators Manually",
                "file_path": "Playbooks/playbook-TIM_-_Review_Indicators_Manually.yml",
                "fromversion": "5.5.0",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Run Enrichment For All Indicator Types": {
                "name": "TIM - Run Enrichment For All Indicator Types",
                "file_path": "Playbooks/playbook-TIM_-_Run_Enrichment_For_All__Indicator_Types.yml",
                "fromversion": "5.5.0",
                "implementing_playbooks": [
                    "TIM - Run Enrichment For Domain Indicators",
                    "TIM - Run Enrichment For Url Indicators",
                    "TIM - Run Enrichment For Hash Indicators",
                    "TIM - Run Enrichment For IP Indicators"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Run Enrichment For Domain Indicators": {
                "name": "TIM - Run Enrichment For Domain Indicators",
                "file_path": "Playbooks/playbook-TIM_-_Run_Enrichment_For_Domain_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "domain": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Run Enrichment For Hash Indicators": {
                "name": "TIM - Run Enrichment For Hash Indicators",
                "file_path": "Playbooks/playbook-TIM_-_Run_Enrichment_For_Hash_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "file": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Run Enrichment For IP Indicators": {
                "name": "TIM - Run Enrichment For IP Indicators",
                "file_path": "Playbooks/playbook-TIM_-_Run_Enrichment_For_IP_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "ip": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "TIM - Run Enrichment For Url Indicators": {
                "name": "TIM - Run Enrichment For Url Indicators",
                "file_path": "Playbooks/playbook-TIM_-_Run_Enrichment_For_Url_Indicators.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "url": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Traps Blacklist File": {
                "name": "Traps Blacklist File",
                "file_path": "Playbooks/playbook-Traps_Blacklist_File.yml",
                "fromversion": "4.5.0",
                "command_to_integration": {
                    "traps-hash-blacklist": ""
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Traps Isolate Endpoint": {
                "name": "Traps Isolate Endpoint",
                "file_path": "Playbooks/playbook-Isolate_Endpoint_-_Traps.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "traps-endpoint-isolate": "",
                    "traps-endpoint-isolate-status": "Traps"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Traps Quarantine Event": {
                "name": "Traps Quarantine Event",
                "file_path": "Playbooks/playbook-Block_File_-_Quarantine_-_Traps.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "traps-event-quarantine": "",
                    "traps-event-quarantine-result": "Traps"
                },
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Traps Retrieve And Download Files": {
                "name": "Traps Retrieve And Download Files",
                "file_path": "Playbooks/playbook-Traps_Retrieve_And_Download_FIles.yml",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "traps-endpoint-files-retrieve": "Traps",
                    "traps-endpoint-files-retrieve-result": "Traps"
                },
                "tests": [
                    "No test - Is be tested in Traps test playbook"
                ]
            }
        },
        {
            "Traps Scan Endpoint": {
                "name": "Traps Scan Endpoint",
                "file_path": "Playbooks/playbook-Traps_Scan_Endpoint.yml",
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "traps-endpoint-scan": "",
                    "traps-endpoint-scan-result": ""
                },
                "tests": [
                    "No test - Is be tested in Traps test playbook"
                ]
            }
        },
        {
            "TrendMicro Malware Alert Playbook": {
                "name": "TrendMicro Malware Alert Playbook",
                "file_path": "Playbooks/playbook-TrendMicro_Malware_Alert.yml",
                "fromversion": "2.5.0",
                "implementing_scripts": [
                    "TrendmicroAntiMalwareEventRetrieve",
                    "TrendMicroGetPolicyID",
                    "TrendmicroSecurityProfileAssignToHost",
                    "TrendMicroGetHostID"
                ]
            }
        },
        {
            "Uptycs - Bad IP Incident": {
                "name": "Uptycs - Bad IP Incident",
                "file_path": "Playbooks/playbook-Uptycs_-_Bad_IP_Incident.yml",
                "command_to_integration": {
                    "uptycs-get-alerts": "",
                    "uptycs-get-process-information": "",
                    "uptycs-get-process-child-processes": "",
                    "uptycs-get-process-open-sockets": "",
                    "uptycs-get-parent-information": "",
                    "uptycs-get-threat-indicator": "",
                    "uptycs-get-threat-source": ""
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Uptycs - Outbound Connection to Threat IOC Incident": {
                "name": "Uptycs - Outbound Connection to Threat IOC Incident",
                "file_path": "Playbooks/playbook-Uptycs_-_Outbound_Connection_to_Threat_IOC_Incident.yml",
                "fromversion": "4.0.0",
                "command_to_integration": {
                    "uptycs-get-alerts": "",
                    "uptycs-get-process-event-information": "",
                    "uptycs-get-process-child-processes": "",
                    "uptycs-get-socket-events": "",
                    "uptycs-get-parent-event-information": "",
                    "uptycs-get-parent-information": ""
                }
            }
        },
        {
            "URL Enrichment - Generic v2": {
                "name": "URL Enrichment - Generic v2",
                "file_path": "Playbooks/playbook-URL_Enrichment_-_Generic_v2.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Exists",
                    "URLSSLVerification"
                ],
                "command_to_integration": {
                    "rasterize": "Rasterize",
                    "vt-private-get-url-report": ""
                },
                "tests": [
                    "URL Enrichment - Generic v2 - Test"
                ]
            }
        },
        {
            "url_enrichment_-_generic": {
                "name": "URL Enrichment - Generic",
                "file_path": "Playbooks/playbook-URL_Enrichment_-_Generic.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "Exists",
                    "URLSSLVerification",
                    "URLReputation"
                ],
                "command_to_integration": {
                    "rasterize": "Rasterize",
                    "vt-private-get-url-report": "VirusTotal - Private API"
                },
                "tests": [
                    "No test (provided a test for URL enrichment v2)"
                ]
            }
        },
        {
            "url_enrichment_-_generic": {
                "name": "URL Enrichment - Generic",
                "file_path": "Playbooks/playbook-URL_Enrichment_-_Generic_3_5.yml",
                "toversion": "3.5.1",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Exists",
                    "URLSSLVerification",
                    "URLReputation"
                ],
                "command_to_integration": {
                    "rasterize": "Rasterize"
                }
            }
        },
        {
            "vulnerability_handling_-_nexpose": {
                "name": "Vulnerability Handling - Nexpose",
                "file_path": "Playbooks/playbook-Vulnerability_Handling_-_Nexpose.yml",
                "fromversion": "3.6.0",
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic",
                    "CVE Enrichment - Generic",
                    "Calculate Severity - Generic"
                ],
                "command_to_integration": {
                    "nexpose-get-asset": "Rapid7 Nexpose",
                    "nexpose-get-asset-vulnerability": "Rapid7 Nexpose"
                },
                "tests": [
                    "No test - Should review soon"
                ]
            }
        },
        {
            "vulnerability_handling_-_qualys": {
                "name": "Vulnerability Handling - Qualys",
                "file_path": "Playbooks/playbook-Vulnerability_Handling_-_Qualys.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "CloseInvestigation",
                    "DisplayHTML"
                ],
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic",
                    "CVE Enrichment - Generic",
                    "Vulnerability Handling - Qualys - Add custom fields to default layout",
                    "Calculate Severity - Generic"
                ],
                "command_to_integration": {
                    "qualys-host-list": "Qualys",
                    "qualys-vulnerability-list": "Qualys"
                },
                "tests": [
                    "No test - Should review soon"
                ]
            }
        },
        {
            "vulnerability_handling_-_qualys_-_add _ustom_fields_to_default_layout": {
                "name": "Vulnerability Handling - Qualys - Add custom fields to default layout",
                "file_path": "Playbooks/playbook-VulnerabilityHandling_-_Qualys_-_AddCustomFieldsToDefaultLayout.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "IncidentSet"
                ]
            }
        },
        {
            "vulnerability_management_-_nexpose_job": {
                "name": "Vulnerability Management - Nexpose (Job)",
                "file_path": "Playbooks/playbook-Vulnerability_Management_-_Nexpose_(Job).yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "NexposeCreateIncidentsFromAssets"
                ],
                "command_to_integration": {
                    "nexpose-search-assets": "Rapid7 Nexpose",
                    "nexpose-create-assets-report": "Rapid7 Nexpose"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "vulnerability_management_-_qualys_Job": {
                "name": "Vulnerability Management - Qualys (Job)",
                "file_path": "Playbooks/playbook-Vulnerability_Management__-_Qualys_(Job).yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "QualysCreateIncidentFromReport",
                    "Set"
                ],
                "command_to_integration": {
                    "qualys-report-list": "Qualys",
                    "qualys-report-fetch": "Qualys"
                },
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Wait Until Datetime": {
                "name": "Wait Until Datetime",
                "file_path": "Playbooks/playbook-Wait_Until_Datetime.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "CalculateTimeDifference",
                    "Sleep",
                    "Set",
                    "GetTime"
                ],
                "tests": [
                    "Wait Until Datetime - Test"
                ]
            }
        },
        {
            "WildFire - Detonate file": {
                "name": "WildFire - Detonate file",
                "file_path": "Playbooks/playbook-Detonate_File_-_WildFire_3_6_0.yml",
                "toversion": "3.6.0",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "Set"
                ],
                "command_to_integration": {
                    "wildfire-report": "WildFire",
                    "detonate-file": "WildFire"
                }
            }
        },
        {
            "WildFire - Detonate file": {
                "name": "WildFire - Detonate file",
                "file_path": "Playbooks/playbook-Detonate_File_-_WildFire_3_1_0.yml",
                "toversion": "3.1.0",
                "implementing_scripts": [
                    "Exists"
                ],
                "command_to_integration": {
                    "wildfire-upload": "WildFire",
                    "wildfire-report": "WildFire"
                }
            }
        },
        {
            "WildFire - Detonate file": {
                "name": "WildFire - Detonate file",
                "file_path": "Playbooks/playbook-Detonate_File_-_WildFire.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "wildfire-report": "",
                    "wildfire-upload": ""
                },
                "tests": [
                    "Wildfire Test"
                ]
            }
        }
    ],
    "integrations": [
        {
            "abuse.ch SSL Blacklist Feed": {
                "name": "abuse.ch SSL Blacklist Feed",
                "file_path": "Packs/Feedsslabusech/Integrations/Feedsslabusech/Feedsslabusech.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "sslbl-get-indicators"
                ],
                "pack": "Feedsslabusech"
            }
        },
        {
            "AbuseIPDB": {
                "name": "AbuseIPDB",
                "file_path": "Integrations/AbuseDB/AbuseDB.yml",
                "commands": [
                    "ip",
                    "abuseipdb-check-cidr-block",
                    "abuseipdb-report-ip",
                    "abuseipdb-get-blacklist",
                    "abuseipdb-get-categories"
                ],
                "tests": [
                    "AbuseIPDB Test"
                ]
            }
        },
        {
            "Accessdata": {
                "name": "Accessdata",
                "file_path": "Integrations/Accessdata/Accessdata.yml",
                "commands": [
                    "accessdata-legacyagent-get-processlist",
                    "accessdata-legacyagent-get-memorydump",
                    "accessdata-read-casefile",
                    "accessdata-jobstatus-scan",
                    "accessdata-get-jobstatus-processlist",
                    "accessdata-get-jobstatus-memorydump",
                    "accessdata-get-processing-case-id"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Active Directory Query v2": {
                "name": "Active Directory Query v2",
                "file_path": "Packs/Active_Directory_Query/Integrations/Active_Directory_Query/Active_Directory_Query.yml",
                "commands": [
                    "ad-expire-password",
                    "ad-create-user",
                    "ad-search",
                    "ad-add-to-group",
                    "ad-remove-from-group",
                    "ad-update-user",
                    "ad-delete-user",
                    "ad-create-contact",
                    "ad-update-contact",
                    "ad-disable-account",
                    "ad-enable-account",
                    "ad-unlock-account",
                    "ad-set-new-password",
                    "ad-modify-computer-ou",
                    "ad-get-user",
                    "ad-get-computer",
                    "ad-get-group-members",
                    "ad-create-group",
                    "ad-delete-group"
                ],
                "tests": [
                    "Active Directory Test"
                ],
                "pack": "Active_Directory_Query"
            }
        },
        {
            "ActiveMQ": {
                "name": "ActiveMQ",
                "file_path": "Packs/ActiveMQ/Integrations/ActiveMQ/ActiveMQ.yml",
                "commands": [
                    "activemq-send",
                    "activemq-subscribe"
                ],
                "pack": "ActiveMQ"
            }
        },
        {
            "Aella Star Light": {
                "name": "Aella Star Light",
                "file_path": "Integrations/integration-Aella_StarLight.yml",
                "commands": [
                    "aella-get-event"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Akamai WAF": {
                "name": "Akamai WAF",
                "file_path": "Integrations/Akamai_WAF/Akamai_WAF.yml",
                "commands": [
                    "akamai-get-network-lists",
                    "akamai-get-network-list-by-id",
                    "akamai-create-network-list",
                    "akamai-delete-network-list",
                    "akamai-activate-network-list",
                    "akamai-add-elements-to-network-list",
                    "akamai-remove-element-from-network-list",
                    "akamai-get-network-list-activation-status"
                ],
                "tests": [
                    "Akamai_WAF-Test"
                ]
            }
        },
        {
            "Akamai WAF SIEM": {
                "name": "Akamai WAF SIEM",
                "file_path": "Integrations/Akamai_SIEM/Akamai_SIEM.yml",
                "commands": [
                    "akamai-siem-get-events"
                ],
                "tests": [
                    "Akamai_WAF_SIEM-Test"
                ]
            }
        },
        {
            "Alexa Rank Indicator": {
                "name": "Alexa Rank Indicator",
                "file_path": "Integrations/Alexa/Alexa.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "domain"
                ],
                "tests": [
                    "Alexa Test Playbook"
                ]
            }
        },
        {
            "AlgoSec": {
                "name": "AlgoSec",
                "file_path": "Integrations/integration-Algosec.yml",
                "commands": [
                    "algosec-get-ticket",
                    "algosec-create-ticket",
                    "algosec-get-applications",
                    "algosec-get-network-object",
                    "algosec-query"
                ]
            }
        },
        {
            "AlienValut OTX": {
                "name": "AlienValut OTX",
                "file_path": "Integrations/integration-AlienVailtOTX.yml",
                "toversion": "3.0.1",
                "commands": [
                    "ip",
                    "domain",
                    "ipv6",
                    "hostname",
                    "file",
                    "alienvault-query-file",
                    "alienvault-search-pulses",
                    "alienvault-get-pulse-details",
                    "url"
                ]
            }
        },
        {
            "AlienVault OTX": {
                "name": "AlienVault OTX",
                "file_path": "Integrations/integration-AlienVaultOTX.yml",
                "fromversion": "3.0.1",
                "commands": [
                    "ip",
                    "domain",
                    "ipv6",
                    "hostname",
                    "file",
                    "alienvault-query-file",
                    "alienvault-search-pulses",
                    "alienvault-get-pulse-details",
                    "url"
                ],
                "tests": [
                    "AlienVaultOTX Test"
                ],
                "deprecated": true
            }
        },
        {
            "AlienVault OTX TAXII Feed": {
                "name": "AlienVault OTX TAXII Feed",
                "file_path": "Packs/FeedAlienVault/Integrations/FeedAlienVaultOTXTaxii/FeedAlienVaultOTXTaxii.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "alienvaultotx-get-indicators"
                ],
                "pack": "FeedAlienVault"
            }
        },
        {
            "AlienVault OTX v2": {
                "name": "AlienVault OTX v2",
                "file_path": "Integrations/AlienVault_OTX_v2/AlienVault_OTX_v2.yml",
                "commands": [
                    "ip",
                    "domain",
                    "alienvault-search-ipv6",
                    "alienvault-search-hostname",
                    "file",
                    "alienvault-search-cve",
                    "alienvault-get-related-urls-by-indicator",
                    "alienvault-get-related-hashes-by-indicator",
                    "alienvault-get-passive-dns-data-by-indicator",
                    "alienvault-search-pulses",
                    "alienvault-get-pulse-details",
                    "url"
                ],
                "tests": [
                    "Alienvault_OTX_v2 - Test"
                ]
            }
        },
        {
            "AlienVault Reputation Feed": {
                "name": "AlienVault Reputation Feed",
                "file_path": "Packs/FeedAlienVault/Integrations/FeedAlienVaultReputation/FeedAlienVaultReputation.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "alienvault-get-indicators"
                ],
                "tests": [
                    "AlienVaultReputationFeed_Test"
                ],
                "pack": "FeedAlienVault"
            }
        },
        {
            "AlienVault USM Anywhere": {
                "name": "AlienVault USM Anywhere",
                "file_path": "Integrations/AlienVault_USM_Anywhere/AlienVault_USM_Anywhere.yml",
                "commands": [
                    "alienvault-search-alarms",
                    "alienvault-get-alarm",
                    "alienvault-search-events",
                    "alienvault-get-events-by-alarm"
                ]
            }
        },
        {
            "AlphaSOC Network Behavior Analytics": {
                "name": "AlphaSOC Network Behavior Analytics",
                "file_path": "Integrations/integration-AlphaSOC_Network_Behavior_Analytics.yml"
            }
        },
        {
            "AlphaSOC Wisdom": {
                "name": "AlphaSOC Wisdom",
                "file_path": "Integrations/integration-AlphaSOC_Wisdom.yml",
                "commands": [
                    "wisdom-domain-flags",
                    "wisdom-ip-flags"
                ]
            }
        },
        {
            "Amazon DynamoDB": {
                "name": "Amazon DynamoDB",
                "file_path": "Integrations/AWS_DynamoDB/AWS_DynamoDB.yml",
                "commands": [
                    "aws-dynamodb-batch-get-item",
                    "aws-dynamodb-batch-write-item",
                    "aws-dynamodb-create-backup",
                    "aws-dynamodb-create-global-table",
                    "aws-dynamodb-create-table",
                    "aws-dynamodb-delete-backup",
                    "aws-dynamodb-delete-item",
                    "aws-dynamodb-delete-table",
                    "aws-dynamodb-describe-backup",
                    "aws-dynamodb-describe-continuous-backups",
                    "aws-dynamodb-describe-endpoints",
                    "aws-dynamodb-describe-global-table",
                    "aws-dynamodb-describe-global-table-settings",
                    "aws-dynamodb-describe-limits",
                    "aws-dynamodb-describe-table",
                    "aws-dynamodb-describe-time-to-live",
                    "aws-dynamodb-get-item",
                    "aws-dynamodb-list-backups",
                    "aws-dynamodb-list-global-tables",
                    "aws-dynamodb-list-tables",
                    "aws-dynamodb-list-tags-of-resource",
                    "aws-dynamodb-put-item",
                    "aws-dynamodb-query",
                    "aws-dynamodb-restore-table-from-backup",
                    "aws-dynamodb-restore-table-to-point-in-time",
                    "aws-dynamodb-scan",
                    "aws-dynamodb-tag-resource",
                    "aws-dynamodb-transact-get-items",
                    "aws-dynamodb-transact-write-items",
                    "aws-dynamodb-untag-resource",
                    "aws-dynamodb-update-continuous-backups",
                    "aws-dynamodb-update-global-table",
                    "aws-dynamodb-update-global-table-settings",
                    "aws-dynamodb-update-item",
                    "aws-dynamodb-update-table",
                    "aws-dynamodb-update-time-to-live"
                ],
                "tests": [
                    "AWS_DynamoDB-Test"
                ]
            }
        },
        {
            "Amazon Web Services": {
                "name": "Amazon Web Services",
                "file_path": "Integrations/integration-aws.yml",
                "fromversion": "1.6.2",
                "commands": [
                    "aws-run-instance",
                    "aws-stop-instance",
                    "aws-create-image",
                    "aws-start-instance",
                    "aws-create-volume-snapshot",
                    "aws-get-instance-info",
                    "aws-get-sg-info",
                    "aws-get-ebs-volume-info"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "aws-run-instance",
                    "aws-stop-instance",
                    "aws-create-image",
                    "aws-start-instance",
                    "aws-create-volume-snapshot",
                    "aws-get-instance-info",
                    "aws-get-sg-info",
                    "aws-get-ebs-volume-info"
                ]
            }
        },
        {
            "AMP": {
                "name": "AMP",
                "file_path": "Integrations/integration-AMP.yml",
                "commands": [
                    "amp_get_computers",
                    "amp_get_computer_by_connector",
                    "amp_get_computer_trajectory",
                    "amp_get_computer_trajctory",
                    "amp_move_computer",
                    "amp_get_computer_activity",
                    "amp_get_computer_actvity",
                    "amp_get_events",
                    "amp_get_event_types",
                    "amp_get_application_blocking",
                    "amp_get_file_list_by_guid",
                    "amp_get_simple_custom_detections",
                    "amp_get_file_list_files",
                    "amp_get_file_list_files_by_sha",
                    "amp_set_file_list_files_by_sha",
                    "amp_delete_file_list_files_by_sha",
                    "amp_get_groups",
                    "amp_get_group",
                    "amp_set_group_policy",
                    "amp_get_policies",
                    "amp_get_policy",
                    "amp_get_version"
                ],
                "tests": [
                    "No test - missing instace"
                ],
                "deprecated_commands": [
                    "amp_get_computer_trajctory",
                    "amp_get_computer_actvity"
                ]
            }
        },
        {
            "Anomali ThreatStream": {
                "name": "Anomali ThreatStream",
                "file_path": "Integrations/integration-AnomaliThreatStream.yml",
                "commands": [
                    "threatstream-intelligence",
                    "domain",
                    "file",
                    "threatstream-email-reputation",
                    "ip",
                    "threatstream-push-indicator"
                ],
                "tests": [
                    "Anomali_ThreatStream_Test"
                ]
            }
        },
        {
            "Anomali ThreatStream v2": {
                "name": "Anomali ThreatStream v2",
                "file_path": "Integrations/Anomali_ThreatStream_v2/Anomali_ThreatStream_v2.yml",
                "commands": [
                    "ip",
                    "domain",
                    "file",
                    "threatstream-email-reputation",
                    "threatstream-get-passive-dns",
                    "threatstream-import-indicator-with-approval",
                    "threatstream-import-indicator-without-approval",
                    "threatstream-get-model-list",
                    "threatstream-get-model-description",
                    "threatstream-get-indicators-by-model",
                    "threatstream-submit-to-sandbox",
                    "threatstream-get-analysis-status",
                    "threatstream-analysis-report",
                    "threatstream-get-indicators",
                    "threatstream-add-tag-to-model",
                    "threatstream-create-model",
                    "threatstream-update-model",
                    "threatstream-supported-platforms",
                    "url"
                ],
                "tests": [
                    "ThreatStream-Test"
                ],
                "deprecated_commands": [
                    "threatstream-import-indicator-without-approval"
                ]
            }
        },
        {
            "ANYRUN": {
                "name": "ANYRUN",
                "file_path": "Integrations/ANYRUN/ANYRUN.yml",
                "commands": [
                    "anyrun-get-history",
                    "anyrun-get-report",
                    "anyrun-run-analysis"
                ],
                "tests": [
                    "ANYRUN-Test"
                ]
            }
        },
        {
            "ArcSight ESM": {
                "name": "ArcSight ESM",
                "file_path": "Integrations/integration-ArcSightESM.yml",
                "commands": [
                    "as-get-all-cases",
                    "as-get-case",
                    "as-get-matrix-data",
                    "as-add-entries",
                    "as-clear-entries",
                    "as-get-entries",
                    "as-get-security-events",
                    "as-get-case-event-ids",
                    "as-update-case",
                    "as-get-all-query-viewers",
                    "as-case-delete"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "as-get-all-cases",
                    "as-get-case",
                    "as-get-matrix-data",
                    "as-add-entries",
                    "as-clear-entries",
                    "as-get-entries",
                    "as-get-security-events",
                    "as-get-case-event-ids",
                    "as-update-case",
                    "as-get-all-query-viewers",
                    "as-case-delete"
                ]
            }
        },
        {
            "ArcSight ESM v2": {
                "name": "ArcSight ESM v2",
                "file_path": "Integrations/ArcSightESMv2/ArcSightESMv2.yml",
                "commands": [
                    "as-get-all-cases",
                    "as-get-case",
                    "as-get-matrix-data",
                    "as-add-entries",
                    "as-clear-entries",
                    "as-get-entries",
                    "as-get-security-events",
                    "as-get-case-event-ids",
                    "as-update-case",
                    "as-get-all-query-viewers",
                    "as-case-delete",
                    "as-get-query-viewer-results",
                    "as-fetch-incidents"
                ],
                "tests": [
                    "ArcSight ESM v2 Test"
                ]
            }
        },
        {
            "ArcSight Logger": {
                "name": "ArcSight Logger",
                "file_path": "Integrations/integration-ArcSightLogger.yml",
                "commands": [
                    "as-search-events",
                    "as-status",
                    "as-drilldown",
                    "as-events",
                    "as-close",
                    "as-stop",
                    "as-search"
                ]
            }
        },
        {
            "ArcSight XML": {
                "name": "ArcSight XML",
                "file_path": "Integrations/integration-ArcSightXML.yml",
                "commands": [
                    "arcsight-update-case",
                    "arcsight-fetch-xml"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ARIA Packet Intelligence": {
                "name": "ARIA Packet Intelligence",
                "file_path": "Integrations/ARIAPacketIntelligence/ARIAPacketIntelligence.yml",
                "commands": [
                    "aria-block-conversation",
                    "aria-unblock-conversation",
                    "aria-record-conversation",
                    "aria-stop-recording-conversation",
                    "aria-alert-conversation",
                    "aria-mute-alert-conversation",
                    "aria-block-dest-port",
                    "aria-unblock-dest-port",
                    "aria-record-dest-port",
                    "aria-stop-recording-dest-port",
                    "aria-alert-dest-port",
                    "aria-mute-alert-dest-port",
                    "aria-block-src-port",
                    "aria-unblock-src-port",
                    "aria-record-src-port",
                    "aria-stop-recording-src-port",
                    "aria-alert-src-port",
                    "aria-mute-alert-src-port",
                    "aria-block-dest-subnet",
                    "aria-unblock-dest-subnet",
                    "aria-record-dest-subnet",
                    "aria-stop-recording-dest-subnet",
                    "aria-alert-dest-subnet",
                    "aria-mute-alert-dest-subnet",
                    "aria-block-src-subnet",
                    "aria-unblock-src-subnet",
                    "aria-record-src-subnet",
                    "aria-stop-recording-src-subnet",
                    "aria-alert-src-subnet",
                    "aria-mute-alert-src-subnet"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Atlassian Confluence Server": {
                "name": "Atlassian Confluence Server",
                "file_path": "Integrations/Confluence/Confluence.yml",
                "commands": [
                    "confluence-create-space",
                    "confluence-create-content",
                    "confluence-list-spaces",
                    "confluence-get-content",
                    "confluence-delete-content",
                    "confluence-update-content",
                    "confluence-search-content"
                ],
                "tests": [
                    "No test - the test requires personal credentials to the confluence account"
                ]
            }
        },
        {
            "AttackIQFireDrill": {
                "name": "AttackIQFireDrill",
                "file_path": "Integrations/AttackIQFireDrill/AttackIQFireDrill.yml",
                "commands": [
                    "attackiq-get-assessment-by-id",
                    "attackiq-list-assessments",
                    "attackiq-activate-assessment",
                    "attackiq-run-all-tests-in-assessment",
                    "attackiq-get-assessment-execution-status",
                    "attackiq-get-test-execution-status",
                    "attackiq-list-tests-by-assessment",
                    "attackiq-get-test-results",
                    "attackiq-list-assessment-templates",
                    "attackiq-list-assets",
                    "attackiq-create-assessment",
                    "attackiq-add-assets-to-assessment",
                    "attackiq-delete-assessment"
                ],
                "tests": [
                    "AttackIQ - Test"
                ]
            }
        },
        {
            "Attivo Botsink": {
                "name": "Attivo Botsink",
                "file_path": "Integrations/integration-AttivoBotsink.yml",
                "commands": [
                    "attivo-check-user",
                    "attivo-check-host",
                    "attivo-run-playbook",
                    "attivo-deploy-decoy",
                    "attivo-get-events",
                    "attivo-list-playbooks",
                    "attivo-list-hosts",
                    "attivo-list-users"
                ],
                "tests": [
                    "AttivoBotsinkTest"
                ]
            }
        },
        {
            "Autofocus": {
                "name": "Autofocus",
                "file_path": "Integrations/integration-Autofocus.yml",
                "commands": [
                    "autofocus-search-samples",
                    "autofocus-search-sessions",
                    "autofocus-session",
                    "autofocus-sample-analysis",
                    "file"
                ],
                "tests": [
                    "autofocus_test"
                ]
            }
        },
        {
            "AutoFocus Feed": {
                "name": "AutoFocus Feed",
                "file_path": "Packs/FeedAutofocus/Integrations/FeedAutofocus/FeedAutofocus.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "autofocus-get-indicators"
                ],
                "pack": "FeedAutofocus"
            }
        },
        {
            "AutoFocus V2": {
                "name": "AutoFocus V2",
                "file_path": "Integrations/AutofocusV2/AutofocusV2.yml",
                "commands": [
                    "autofocus-search-samples",
                    "autofocus-search-sessions",
                    "autofocus-samples-search-results",
                    "autofocus-sessions-search-results",
                    "autofocus-get-session-details",
                    "autofocus-sample-analysis",
                    "autofocus-tag-details",
                    "autofocus-top-tags-search",
                    "autofocus-top-tags-results",
                    "ip",
                    "url",
                    "file",
                    "domain",
                    "autofocus-get-export-list-indicators"
                ],
                "tests": [
                    "AutoFocus V2 test"
                ]
            }
        },
        {
            "Awake Security": {
                "name": "Awake Security",
                "file_path": "Integrations/AwakeSecurity/AwakeSecurity.yml",
                "commands": [
                    "awake-query-devices",
                    "awake-query-activities",
                    "awake-query-domains",
                    "awake-pcap-download",
                    "domain",
                    "ip",
                    "email",
                    "device"
                ],
                "tests": [
                    "awake_security_test_pb"
                ]
            }
        },
        {
            "AWS - AccessAnalyzer": {
                "name": "AWS - AccessAnalyzer",
                "file_path": "Beta_Integrations/AWS-AccessAnalyzer/AWS-AccessAnalyzer.yml",
                "fromversion": "4.5.0",
                "commands": [
                    "aws-access-analyzer-list-analyzers",
                    "aws-access-analyzer-list-analyzed-resource",
                    "aws-access-analyzer-list-findings",
                    "aws-access-analyzer-get-analyzed-resource",
                    "aws-access-analyzer-get-finding",
                    "aws-access-analyzer-start-resource-scan",
                    "aws-access-analyzer-update-findings"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "AWS - ACM": {
                "name": "AWS - ACM",
                "file_path": "Integrations/AWS-ACM/AWS-ACM.yml",
                "commands": [
                    "aws-acm-describe-certificate",
                    "aws-acm-list-certificates",
                    "aws-acm-add-tags-to-certificate",
                    "aws-acm-remove-tags-from-certificate",
                    "aws-acm-list-tags-for-certificate",
                    "aws-acm-get-certificate"
                ],
                "tests": [
                    "ACM-Test"
                ]
            }
        },
        {
            "AWS - Athena - Beta": {
                "name": "AWS - Athena - Beta",
                "file_path": "Beta_Integrations/AWS-Athena/AWS-Athena.yml",
                "commands": [
                    "aws-athena-start-query",
                    "aws-athena-stop-query",
                    "aws-athena-get-query-execution",
                    "aws-athena-get-query-results"
                ],
                "tests": [
                    "Beta-Athena-Test"
                ]
            }
        },
        {
            "AWS - CloudTrail": {
                "name": "AWS - CloudTrail",
                "file_path": "Integrations/AWS-CloudTrail/AWS-CloudTrail.yml",
                "commands": [
                    "aws-cloudtrail-create-trail",
                    "aws-cloudtrail-delete-trail",
                    "aws-cloudtrail-describe-trails",
                    "aws-cloudtrail-update-trail",
                    "aws-cloudtrail-start-logging",
                    "aws-cloudtrail-stop-logging",
                    "aws-cloudtrail-lookup-events"
                ],
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "AWS - CloudWatchLogs": {
                "name": "AWS - CloudWatchLogs",
                "file_path": "Integrations/integration-AWS-CloudWatchLogs.yml",
                "commands": [
                    "aws-logs-create-log-group",
                    "aws-logs-create-log-stream",
                    "aws-logs-delete-log-group",
                    "aws-logs-delete-log-stream",
                    "aws-logs-filter-log-events",
                    "aws-logs-describe-log-groups",
                    "aws-logs-describe-log-streams",
                    "aws-logs-put-retention-policy",
                    "aws-logs-delete-retention-policy",
                    "aws-logs-put-log-events",
                    "aws-logs-put-metric-filter",
                    "aws-logs-delete-metric-filter",
                    "aws-logs-describe-metric-filters"
                ],
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "AWS - EC2": {
                "name": "AWS - EC2",
                "file_path": "Integrations/AWS-EC2/AWS-EC2.yml",
                "commands": [
                    "aws-ec2-describe-instances",
                    "aws-ec2-describe-images",
                    "aws-ec2-describe-regions",
                    "aws-ec2-describe-addresses",
                    "aws-ec2-describe-snapshots",
                    "aws-ec2-describe-launch-templates",
                    "aws-ec2-describe-key-pairs",
                    "aws-ec2-describe-volumes",
                    "aws-ec2-describe-vpcs",
                    "aws-ec2-describe-subnets",
                    "aws-ec2-describe-security-groups",
                    "aws-ec2-allocate-address",
                    "aws-ec2-associate-address",
                    "aws-ec2-create-snapshot",
                    "aws-ec2-delete-snapshot",
                    "aws-ec2-create-image",
                    "aws-ec2-deregister-image",
                    "aws-ec2-modify-volume",
                    "aws-ec2-create-tags",
                    "aws-ec2-disassociate-address",
                    "aws-ec2-release-address",
                    "aws-ec2-start-instances",
                    "aws-ec2-stop-instances",
                    "aws-ec2-terminate-instances",
                    "aws-ec2-create-volume",
                    "aws-ec2-attach-volume",
                    "aws-ec2-detach-volume",
                    "aws-ec2-delete-volume",
                    "aws-ec2-run-instances",
                    "aws-ec2-waiter-instance-running",
                    "aws-ec2-waiter-instance-status-ok",
                    "aws-ec2-waiter-instance-stopped",
                    "aws-ec2-waiter-instance-terminated",
                    "aws-ec2-waiter-image-available",
                    "aws-ec2-waiter-snapshot_completed",
                    "aws-ec2-get-latest-ami",
                    "aws-ec2-create-security-group",
                    "aws-ec2-delete-security-group",
                    "aws-ec2-authorize-security-group-ingress-rule",
                    "aws-ec2-revoke-security-group-ingress-rule",
                    "aws-ec2-copy-image",
                    "aws-ec2-copy-snapshot",
                    "aws-ec2-describe-reserved-instances",
                    "aws-ec2-monitor-instances",
                    "aws-ec2-unmonitor-instances",
                    "aws-ec2-reboot-instances",
                    "aws-ec2-get-password-data",
                    "aws-ec2-modify-network-interface-attribute",
                    "aws-ec2-modify-instance-attribute",
                    "aws-ec2-create-network-acl",
                    "aws-ec2-create-network-acl-entry",
                    "aws-ec2-create-fleet",
                    "aws-ec2-delete-fleet",
                    "aws-ec2-describe-fleets",
                    "aws-ec2-describe-fleet-instances",
                    "aws-ec2-modify-fleet",
                    "aws-ec2-create-launch-template",
                    "aws-ec2-delete-launch-template",
                    "aws-ec2-modify-image-attribute"
                ],
                "tests": [
                    "2142f8de-29d5-4288-8426-0db39abe988b"
                ]
            }
        },
        {
            "AWS - GuardDuty": {
                "name": "AWS - GuardDuty",
                "file_path": "Integrations/integration-AWS-GuardDuty.yml",
                "commands": [
                    "aws-gd-create-detector",
                    "aws-gd-delete-detector",
                    "aws-gd-get-detector",
                    "aws-gd-update-detector",
                    "aws-gd-create-ip-set",
                    "aws-gd-delete-ip-set",
                    "aws-gd-list-detectors",
                    "aws-gd-update-ip-set",
                    "aws-gd-get-ip-set",
                    "aws-gd-list-ip-sets",
                    "aws-gd-create-threatintel-set",
                    "aws-gd-delete-threatintel-set",
                    "aws-gd-get-threatintel-set",
                    "aws-gd-list-threatintel-sets",
                    "aws-gd-update-threatintel-set",
                    "aws-gd-list-findings",
                    "aws-gd-get-findings",
                    "aws-gd-create-sample-findings",
                    "aws-gd-archive-findings",
                    "aws-gd-unarchive-findings",
                    "aws-gd-update-findings-feedback"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "AWS - IAM": {
                "name": "AWS - IAM",
                "file_path": "Integrations/AWS-IAM/AWS-IAM.yml",
                "commands": [
                    "aws-iam-create-user",
                    "aws-iam-get-user",
                    "aws-iam-list-users",
                    "aws-iam-update-user",
                    "aws-iam-delete-user",
                    "aws-iam-update-login-profile",
                    "aws-iam-create-group",
                    "aws-iam-list-groups",
                    "aws-iam-list-groups-for-user",
                    "aws-iam-add-user-to-group",
                    "aws-iam-create-access-key",
                    "aws-iam-update-access-key",
                    "aws-iam-list-access-keys-for-user",
                    "aws-iam-list-policies",
                    "aws-iam-list-roles",
                    "aws-iam-attach-policy",
                    "aws-iam-detach-policy",
                    "aws-iam-delete-login-profile",
                    "aws-iam-delete-group",
                    "aws-iam-remove-user-from-group",
                    "aws-iam-create-login-profile",
                    "aws-iam-delete-access-key",
                    "aws-iam-create-instance-profile",
                    "aws-iam-delete-instance-profile",
                    "aws-iam-list-instance-profiles",
                    "aws-iam-add-role-to-instance-profile",
                    "aws-iam-remove-role-from-instance-profile",
                    "aws-iam-list-instance-profiles-for-role",
                    "aws-iam-get-instance-profile",
                    "aws-iam-get-role",
                    "aws-iam-delete-role",
                    "aws-iam-create-role",
                    "aws-iam-create-policy",
                    "aws-iam-delete-policy",
                    "aws-iam-create-policy-version",
                    "aws-iam-delete-policy-version",
                    "aws-iam-list-policy-versions",
                    "aws-iam-get-policy-version",
                    "aws-iam-set-default-policy-version",
                    "aws-iam-create-account-alias",
                    "aws-iam-delete-account-alias",
                    "aws-iam-get-account-password-policy",
                    "aws-iam-update-account-password-policy"
                ],
                "tests": [
                    "d5cb69b1-c81c-4f27-8a40-3106c0cb2620"
                ]
            }
        },
        {
            "AWS - Lambda": {
                "name": "AWS - Lambda",
                "file_path": "Integrations/AWS-Lambda/AWS-Lambda.yml",
                "commands": [
                    "aws-lambda-get-function",
                    "aws-lambda-list-functions",
                    "aws-lambda-list-aliases",
                    "aws-lambda-invoke",
                    "aws-lambda-get-account-settings"
                ],
                "tests": [
                    "AWS-Lambda-Test (Read-Only)"
                ]
            }
        },
        {
            "AWS - Route53": {
                "name": "AWS - Route53",
                "file_path": "Integrations/integration-AWS-Route53.yml",
                "commands": [
                    "aws-route53-create-record",
                    "aws-route53-delete-record",
                    "aws-route53-list-hosted-zones",
                    "aws-route53-list-resource-record-sets",
                    "aws-route53-waiter-resource-record-sets-changed",
                    "aws-route53-test-dns-answer",
                    "aws-route53-upsert-record"
                ]
            }
        },
        {
            "AWS - S3": {
                "name": "AWS - S3",
                "file_path": "Integrations/AWS-S3/AWS-S3.yml",
                "commands": [
                    "aws-s3-create-bucket",
                    "aws-s3-delete-bucket",
                    "aws-s3-list-buckets",
                    "aws-s3-get-bucket-policy",
                    "aws-s3-delete-bucket-policy",
                    "aws-s3-download-file",
                    "aws-s3-list-bucket-objects",
                    "aws-s3-put-bucket-policy",
                    "aws-s3-upload-file"
                ],
                "tests": [
                    "97393cfc-2fc4-4dfe-8b6e-af64067fc436"
                ]
            }
        },
        {
            "AWS - Security Hub": {
                "name": "AWS - Security Hub",
                "file_path": "Integrations/integration-AWS-SecurityHub.yml",
                "commands": [
                    "aws-securityhub-get-findings",
                    "aws-securityhub-get-master-account",
                    "aws-securityhub-list-members",
                    "aws-securityhub-enable-security-hub",
                    "aws-securityhub-disable-security-hub",
                    "aws-securityhub-enable-import-findings-for-product",
                    "aws-securityhub-disable-import-findings-for-product",
                    "aws-securityhub-list-enabled-products-for-import",
                    "aws-securityhub-update-finding"
                ],
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "AWS - SQS": {
                "name": "AWS - SQS",
                "file_path": "Integrations/integration-AWS-SQS.yml",
                "commands": [
                    "aws-sqs-get-queue-url",
                    "aws-sqs-list-queues",
                    "aws-sqs-send-message",
                    "aws-sqs-create-queue",
                    "aws-sqs-delete-queue",
                    "aws-sqs-purge-queue"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "AWS Feed": {
                "name": "AWS Feed",
                "file_path": "Packs/FeedAWS/Integrations/FeedAWS/FeedAWS.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "aws-get-indicators"
                ],
                "pack": "FeedAWS"
            }
        },
        {
            "AWS Sagemaker": {
                "name": "AWS Sagemaker",
                "file_path": "Integrations/integration-AWS_Sagemaker.yml",
                "commands": [
                    "predict-phishing"
                ],
                "tests": [
                    "Test_Sagemaker"
                ]
            }
        },
        {
            "Azure Compute": {
                "name": "Azure Compute",
                "file_path": "Integrations/AzureCompute/AzureCompute.yml",
                "commands": [
                    "azure-vm-list-instances",
                    "azure-vm-start-instance",
                    "azure-vm-poweroff-instance",
                    "azure-vm-get-instance-details",
                    "azure-vm-create-instance",
                    "azure-list-resource-groups",
                    "azure-vm-delete-instance"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "azure-vm-list-instances",
                    "azure-vm-start-instance",
                    "azure-vm-poweroff-instance",
                    "azure-vm-get-instance-details",
                    "azure-vm-create-instance",
                    "azure-list-resource-groups",
                    "azure-vm-delete-instance"
                ]
            }
        },
        {
            "Azure Compute v2": {
                "name": "Azure Compute v2",
                "file_path": "Integrations/AzureCompute_v2/AzureCompute_v2.yml",
                "commands": [
                    "azure-vm-list-instances",
                    "azure-vm-start-instance",
                    "azure-vm-poweroff-instance",
                    "azure-vm-get-instance-details",
                    "azure-vm-create-instance",
                    "azure-list-resource-groups",
                    "azure-vm-delete-instance",
                    "azure-list-subscriptions"
                ],
                "tests": [
                    "Azure Compute - Test"
                ]
            }
        },
        {
            "Azure Security Center": {
                "name": "Azure Security Center",
                "file_path": "Integrations/AzureSecurityCenter/AzureSecurityCenter.yml",
                "commands": [
                    "azure-sc-list-alert",
                    "azure-sc-update-atp",
                    "azure-sc-get-atp",
                    "azure-sc-update-aps",
                    "azure-sc-get-aps",
                    "azure-sc-list-aps",
                    "azure-sc-list-jit",
                    "azure-sc-list-storage"
                ],
                "tests": [
                    "No tests"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "azure-sc-list-alert",
                    "azure-sc-update-atp",
                    "azure-sc-get-atp",
                    "azure-sc-update-aps",
                    "azure-sc-get-aps",
                    "azure-sc-list-aps",
                    "azure-sc-list-jit",
                    "azure-sc-list-storage"
                ]
            }
        },
        {
            "Azure Security Center v2": {
                "name": "Azure Security Center v2",
                "file_path": "Integrations/AzureSecurityCenter_v2/AzureSecurityCenter_v2.yml",
                "commands": [
                    "azure-sc-list-alert",
                    "azure-sc-update-atp",
                    "azure-sc-get-atp",
                    "azure-sc-update-aps",
                    "azure-sc-get-aps",
                    "azure-sc-list-aps",
                    "azure-sc-list-jit",
                    "azure-sc-list-storage",
                    "azure-list-subscriptions",
                    "azure-sc-list-location"
                ],
                "tests": [
                    "Azure SecurityCenter - Test"
                ]
            }
        },
        {
            "AzureFeed": {
                "name": "AzureFeed",
                "file_path": "Packs/FeedAzure/Integrations/FeedAzure/FeedAzure.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "azure-get-indicators"
                ],
                "tests": [
                    "AzureFeed - Test"
                ],
                "pack": "FeedAzure"
            }
        },
        {
            "Bambenek Consulting Feed": {
                "name": "Bambenek Consulting Feed",
                "file_path": "Packs/FeedBambenekConsulting/Integrations/FeedBambenekConsulting/FeedBambenekConsulting.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "bambenek-get-indicators"
                ],
                "tests": [
                    "BambenekConsultingFeed_Test"
                ],
                "pack": "FeedBambenekConsulting"
            }
        },
        {
            "BeyondTrust Password Safe": {
                "name": "BeyondTrust Password Safe",
                "file_path": "Integrations/BeyondTrust_Password_Safe/BeyondTrust_Password_Safe.yml",
                "commands": [
                    "beyondtrust-get-managed-accounts",
                    "beyondtrust-get-managed-systems",
                    "beyondtrust-create-release-request",
                    "beyondtrust-check-in-credentials",
                    "beyondtrust-get-credentials",
                    "beyondtrust-change-credentials"
                ],
                "tests": [
                    "BeyondTrust-Test"
                ]
            }
        },
        {
            "BigFix": {
                "name": "BigFix",
                "file_path": "Integrations/integration-BigFix.yml",
                "commands": [
                    "bigfix-get-sites",
                    "bigfix-get-site",
                    "bigfix-get-patches",
                    "bigfix-get-endpoints",
                    "bigfix-get-endpoint",
                    "bigfix-deploy-patch",
                    "bigfix-get-patch",
                    "bigfix-action-delete",
                    "bigfix-action-status",
                    "bigfix-action-stop",
                    "bigfix-query"
                ]
            }
        },
        {
            "BitDam": {
                "name": "BitDam",
                "file_path": "Integrations/BitDam/BitDam.yml",
                "commands": [
                    "bitdam-upload-file",
                    "bitdam-get-verdict"
                ],
                "tests": [
                    "Detonate File - BitDam Test"
                ]
            }
        },
        {
            "Blockade.io": {
                "name": "Blockade.io",
                "file_path": "Integrations/integration-Blockade.io.yml",
                "commands": [
                    "blockade-get-indicators",
                    "blockade-add-indicators"
                ]
            }
        },
        {
            "Blocklist_de Feed": {
                "name": "Blocklist_de Feed",
                "file_path": "Packs/FeedBlocklist_de/Integrations/FeedBlocklist_de/FeedBlocklist_de.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "blocklist_de-get-indicators"
                ],
                "tests": [
                    "Blocklist_de - Test"
                ],
                "pack": "FeedBlocklist_de"
            }
        },
        {
            "BluecatAddressManager": {
                "name": "BluecatAddressManager",
                "file_path": "Integrations/BluecatAddressManager/BluecatAddressManager.yml",
                "commands": [
                    "bluecat-am-query-ip",
                    "bluecat-am-get-response-policies",
                    "bluecat-am-search-response-policies-by-domain",
                    "bluecat-am-response-policy-add-domain",
                    "bluecat-am-response-policy-remove-domain",
                    "bluecat-am-get-range-by-ip"
                ],
                "tests": [
                    "Bluecat Address Manager test"
                ]
            }
        },
        {
            "Blueliv_Beta": {
                "name": "Blueliv_Beta",
                "file_path": "Beta_Integrations/Blueliv/Blueliv.yml",
                "commands": [
                    "blueliv-get-botips-feed",
                    "blueliv-get-crimeservers-feed",
                    "blueliv-get-malware-feed",
                    "blueliv-get-attackingips-feed",
                    "blueliv-get-hacktivism-feed"
                ]
            }
        },
        {
            "Box": {
                "name": "Box",
                "file_path": "Integrations/integration-Box.yml",
                "commands": [
                    "box_get_current_user",
                    "box_get_users",
                    "box_update_user",
                    "box_add_user",
                    "box_delete_user",
                    "box_move_folder",
                    "box_files_get",
                    "box_initiate",
                    "box_files_get_info"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "BPA": {
                "name": "BPA",
                "file_path": "Integrations/BPA/BPA.yml",
                "fromversion": "4.5.0",
                "commands": [
                    "pan-os-get-documentation",
                    "pan-os-bpa-submit-job",
                    "pan-os-bpa-get-job-results"
                ],
                "tests": [
                    "Test-BPA"
                ]
            }
        },
        {
            "BruteForceBlocker Feed": {
                "name": "BruteForceBlocker Feed",
                "file_path": "Packs/FeedBruteForceBlocker/Integrations/FeedBruteForceBlocker/FeedBruteForceBlocker.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "bruteforceblocker-get-indicators"
                ],
                "pack": "FeedBruteForceBlocker"
            }
        },
        {
            "C2sec irisk": {
                "name": "C2sec irisk",
                "file_path": "Integrations/C2sec/C2sec.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "irisk-add-domain",
                    "irisk-get-scan-status",
                    "irisk-rescan-domain",
                    "irisk-get-domain-issues",
                    "irisk-get-scan-results"
                ]
            }
        },
        {
            "Carbon Black Defense": {
                "name": "Carbon Black Defense",
                "file_path": "Integrations/integration-CarbonBlackDefense.yml",
                "commands": [
                    "cbd-get-devices-status",
                    "cbd-get-device-status",
                    "cbd-change-device-status",
                    "cbd-find-events",
                    "cbd-find-event",
                    "cbd-find-processes",
                    "cbd-get-alert-details",
                    "cbd-get-policies",
                    "cbd-get-policy",
                    "cbd-create-policy",
                    "cbd-update-policy",
                    "cbd-delete-policy",
                    "cbd-add-rule-to-policy",
                    "cbd-delete-rule-from-policy",
                    "cbd-update-rule-in-policy",
                    "cbd-set-policy"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "carbonblack-v2": {
                "name": "carbonblack-v2",
                "file_path": "Integrations/integration-Carbon_Black_Enterprise_Response.yml",
                "fromversion": "3.6.0",
                "commands": [
                    "cb-alert",
                    "cb-binary",
                    "cb-binary-get",
                    "cb-block-hash",
                    "cb-get-hash-blacklist",
                    "cb-get-process",
                    "cb-get-processes",
                    "cb-list-sensors",
                    "cb-process-events",
                    "cb-quarantine-device",
                    "cb-sensor-info",
                    "cb-unblock-hash",
                    "cb-unquarantine-device",
                    "cb-version",
                    "cb-watchlist-del",
                    "cb-watchlist-get",
                    "cb-watchlist-new",
                    "cb-watchlist-set",
                    "cb-alert-update",
                    "cb-watchlist",
                    "cb-binary-download"
                ],
                "deprecated_commands": [
                    "cb-binary-get"
                ]
            }
        },
        {
            "carbonblackliveresponse": {
                "name": "carbonblackliveresponse",
                "file_path": "Integrations/integration-Carbon_Black_Enterprise_Live_Response_3.6.0.yml",
                "toversion": "3.6.0",
                "commands": [
                    "cb-archive",
                    "cb-command-cancel",
                    "cb-command-create",
                    "cb-command-create-and-wait",
                    "cb-command-info",
                    "cb-file-delete",
                    "cb-file-get",
                    "cb-file-info",
                    "cb-file-upload",
                    "cb-keepalive",
                    "cb-list-commands",
                    "cb-list-files",
                    "cb-list-sessions",
                    "cb-session-close",
                    "cb-session-create",
                    "cb-session-create-and-wait",
                    "cb-session-info",
                    "cb-terminate-process"
                ]
            }
        },
        {
            "carbonblackliveresponse": {
                "name": "carbonblackliveresponse",
                "file_path": "Integrations/integration-Carbon_Black_Enterprise_Live_Response.yml",
                "commands": [
                    "cb-archive",
                    "cb-command-cancel",
                    "cb-command-info",
                    "cb-file-delete",
                    "cb-file-get",
                    "cb-file-info",
                    "cb-file-upload",
                    "cb-keepalive",
                    "cb-list-commands",
                    "cb-list-files",
                    "cb-list-sessions",
                    "cb-session-close",
                    "cb-session-create",
                    "cb-session-create-and-wait",
                    "cb-session-info",
                    "cb-process-kill",
                    "cb-directory-listing",
                    "cb-process-execute",
                    "cb-memdeump",
                    "cb-command-create",
                    "cb-command-create-and-wait",
                    "cb-terminate-process",
                    "cb-file-delete-from-endpoint",
                    "cb-registry-get-values",
                    "cb-registry-query-value",
                    "cb-registry-create-key",
                    "cb-registry-delete-key",
                    "cb-registry-delete-value",
                    "cb-registry-set-value",
                    "cb-process-list",
                    "cb-get-file-from-endpoint",
                    "cb-push-file-to-endpoint",
                    "cb-memdump"
                ],
                "tests": [
                    "CarbonBlackLiveResponseTest"
                ],
                "deprecated_commands": [
                    "cb-command-cancel",
                    "cb-file-get",
                    "cb-file-upload",
                    "cb-memdeump",
                    "cb-command-create",
                    "cb-command-create-and-wait",
                    "cb-terminate-process"
                ]
            }
        },
        {
            "CarbonBlackProtectionV2": {
                "name": "CarbonBlackProtectionV2",
                "file_path": "Integrations/CarbonBlackProtect/CarbonBlackProtect.yml",
                "commands": [
                    "cbp-fileCatalog-search",
                    "cbp-computer-search",
                    "cbp-computer-update",
                    "cbp-computer-get",
                    "cbp-fileInstance-search",
                    "cbp-event-search",
                    "cbp-approvalRequest-search",
                    "cbp-fileRule-search",
                    "cbp-fileRule-get",
                    "cbp-fileRule-delete",
                    "cbp-policy-search",
                    "cbp-serverConfig-search",
                    "cbp-publisher-search",
                    "cbp-fileAnalysis-get",
                    "cbp-fileAnalysis-createOrUpdate",
                    "cbp-fileAnalysis-search",
                    "cbp-fileUpload-get",
                    "cbp-fileUpload-download",
                    "cbp-fileUpload-createOrUpdate",
                    "cbp-fileUpload-search",
                    "cbp-connector-get",
                    "cbp-connector-search",
                    "cbp-approvalRequest-resolve",
                    "cbp-fileRule-update",
                    "cbp-fileRule-createOrUpdate"
                ],
                "tests": [
                    "Carbon Black Enterprise Protection V2 Test"
                ],
                "deprecated_commands": [
                    "cbp-fileRule-update"
                ]
            }
        },
        {
            "Censys": {
                "name": "Censys",
                "file_path": "Integrations/Censys/Censys.yml",
                "commands": [
                    "cen-view",
                    "cen-search"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Centreon": {
                "name": "Centreon",
                "file_path": "Integrations/integration-Centreon.yml",
                "commands": [
                    "centreon-get-host-status",
                    "centreon-get-service-status"
                ],
                "tests": [
                    "Centreon-Test-Playbook"
                ]
            }
        },
        {
            "Check Point": {
                "name": "Check Point",
                "file_path": "Integrations/integration-CheckpointFirewall.yml",
                "commands": [
                    "checkpoint-show-access-rule-base",
                    "checkpoint-set-rule",
                    "checkpoint-task-status",
                    "checkpoint-show-hosts",
                    "checkpoint-block-ip",
                    "checkpoint",
                    "checkpoint-delete-rule"
                ],
                "tests": [
                    "blockip_test_playbook",
                    "CheckpointFW-test"
                ]
            }
        },
        {
            "Check Point Sandblast": {
                "name": "Check Point Sandblast",
                "file_path": "Integrations/integration-Sandblast.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "sb-query",
                    "sandblast-query",
                    "sb-upload",
                    "sandblast-upload",
                    "sb-download",
                    "sandblast-download",
                    "sb-quota",
                    "sandblast-quota"
                ],
                "tests": [
                    "Sandblast_malicious_test"
                ],
                "deprecated_commands": [
                    "sb-query",
                    "sb-upload",
                    "sb-download",
                    "sb-quota"
                ]
            }
        },
        {
            "Check Point Sandblast": {
                "name": "Check Point Sandblast",
                "file_path": "Integrations/integration-Sandblast-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "sb-query",
                    "sandblast-query",
                    "sb-upload",
                    "sandblast-upload",
                    "sb-download",
                    "sandblast-download",
                    "sb-quota",
                    "sandblast-quota"
                ],
                "deprecated_commands": [
                    "sb-query",
                    "sb-upload",
                    "sb-download",
                    "sb-quota"
                ]
            }
        },
        {
            "Check Point Sandblast Appliance": {
                "name": "Check Point Sandblast Appliance",
                "file_path": "Integrations/integration-SandBlastAppliance.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "sb-query",
                    "sandblast-query",
                    "sb-upload",
                    "sandblast-upload",
                    "sb-download",
                    "sandblast-download"
                ],
                "deprecated_commands": [
                    "sb-query",
                    "sb-upload",
                    "sb-download"
                ]
            }
        },
        {
            "Check Point Sandblast Appliance": {
                "name": "Check Point Sandblast Appliance",
                "file_path": "Integrations/integration-SandBlastAppliance-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "sb-query",
                    "sandblast-query",
                    "sb-upload",
                    "sandblast-upload",
                    "sb-download",
                    "sandblast-download"
                ],
                "deprecated_commands": [
                    "sb-query",
                    "sb-upload",
                    "sb-download"
                ]
            }
        },
        {
            "CheckPhish": {
                "name": "CheckPhish",
                "file_path": "Integrations/CheckPhish/CheckPhish.yml",
                "commands": [
                    "CheckPhish-check-urls"
                ]
            }
        },
        {
            "Cherwell": {
                "name": "Cherwell",
                "file_path": "Integrations/Cherwell/Cherwell.yml",
                "commands": [
                    "cherwell-create-business-object",
                    "cherwell-update-business-object",
                    "cherwell-delete-business-object",
                    "cherwell-get-business-object",
                    "cherwell-download-attachments",
                    "cherwell-upload-attachment",
                    "cherwell-link-business-objects",
                    "cherwell-unlink-business-objects",
                    "cherwell-get-attachments-info",
                    "cherwell-remove-attachment",
                    "cherwell-query-business-object",
                    "cherwell-get-field-info",
                    "cherwell-run-saved-search",
                    "cherwell-get-business-object-id"
                ],
                "tests": [
                    "Cherwell - test"
                ]
            }
        },
        {
            "CIRCL": {
                "name": "CIRCL",
                "file_path": "Integrations/CIRCL/CIRCL.yml",
                "commands": [
                    "circl-dns-get",
                    "circl-ssl-list-certificates",
                    "circl-ssl-query-certificate",
                    "circl-ssl-get-certificate"
                ],
                "tests": [
                    "CirclIntegrationTest"
                ]
            }
        },
        {
            "Cisco CloudLock": {
                "name": "Cisco CloudLock",
                "file_path": "Integrations/integration-CloudLocki.yml",
                "commands": [
                    "cloudlock-get-users",
                    "cloudlock-get-user-apps",
                    "cloudlock-get-activities"
                ]
            }
        },
        {
            "Cisco Email Security Appliance (IronPort)": {
                "name": "Cisco Email Security Appliance (IronPort)",
                "file_path": "Integrations/integration-IronPort.yml",
                "commands": [
                    "ironport-report"
                ],
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "Cisco ISE": {
                "name": "Cisco ISE",
                "file_path": "Integrations/cisco-ise/cisco-ise.yml",
                "commands": [
                    "cisco-ise-get-endpoint-id",
                    "cisco-ise-get-endpoint-details",
                    "cisco-ise-reauthenticate-endpoint",
                    "cisco-ise-get-endpoints",
                    "cisco-ise-update-endpoint-custom-attribute",
                    "cisco-ise-update-endpoint-group",
                    "cisco-ise-get-groups",
                    "cisco-ise-get-policies",
                    "cisco-ise-get-policy",
                    "cisco-ise-create-policy",
                    "cisco-ise-assign-policy",
                    "cisco-ise-get-blacklist-endpoints"
                ],
                "tests": [
                    "cisco-ise-test-playbook"
                ]
            }
        },
        {
            "Cisco Meraki": {
                "name": "Cisco Meraki",
                "file_path": "Integrations/integration-cisco-meraki.yml",
                "commands": [
                    "meraki-fetch-organizations",
                    "meraki-get-organization-license-state",
                    "meraki-fetch-organization-inventory",
                    "meraki-fetch-networks",
                    "meraki-fetch-devices",
                    "meraki-fetch-device-uplink",
                    "meraki-fetch-ssids",
                    "meraki-fetch-clients",
                    "meraki-fetch-firewall-rules",
                    "meraki-remove-device",
                    "meraki-get-device",
                    "meraki-update-device",
                    "meraki-claim-device",
                    "meraki-update-firewall-rules"
                ],
                "tests": [
                    "Cisco-Meraki-Test"
                ]
            }
        },
        {
            "Cisco Spark": {
                "name": "Cisco Spark",
                "file_path": "Integrations/integration-CiscoSpark.yml",
                "commands": [
                    "cisco-spark-list-people",
                    "cisco-spark-create-person",
                    "cisco-spark-get-person-details",
                    "cisco-spark-update-person",
                    "cisco-spark-delete-person",
                    "cisco-spark-get-own-details",
                    "cisco-spark-list-rooms",
                    "cisco-spark-create-room",
                    "cisco-spark-get-room-details",
                    "cisco-spark-update-room",
                    "cisco-spark-delete-room",
                    "cisco-spark-list-memberships",
                    "cisco-spark-create-membership",
                    "cisco-spark-get-membership-details",
                    "cisco-spark-update-membership",
                    "cisco-spark-delete-membership",
                    "cisco-spark-list-messages",
                    "cisco-spark-create-message",
                    "cisco-spark-get-message-details",
                    "cisco-spark-delete-message",
                    "cisco-spark-list-teams",
                    "cisco-spark-create-team",
                    "cisco-spark-get-team-details",
                    "cisco-spark-update-team",
                    "cisco-spark-delete-team",
                    "cisco-spark-list-team-memberships",
                    "cisco-spark-create-team-membership",
                    "cisco-spark-get-team-membership-details",
                    "cisco-spark-update-team-membership",
                    "cisco-spark-delete-team-membership",
                    "cisco-spark-list-webhooks",
                    "cisco-spark-create-webhook",
                    "cisco-spark-get-webhook-details",
                    "cisco-spark-update-webhook",
                    "cisco-spark-delete-webhook",
                    "cisco-spark-list-organizations",
                    "cisco-spark-get-organization-details",
                    "cisco-spark-list-licenses",
                    "cisco-spark-get-license-details",
                    "cisco-spark-list-roles",
                    "cisco-spark-get-role-details",
                    "cisco-spark-send-message-to-person",
                    "cisco-spark-send-message-to-room"
                ]
            }
        },
        {
            "Cisco Umbrella Investigate": {
                "name": "Cisco Umbrella Investigate",
                "file_path": "Integrations/Cisco-umbrella/Cisco-umbrella.yml",
                "commands": [
                    "umbrella-domain-categorization",
                    "investigate-umbrella-domain-categorization",
                    "umbrella-domain-co-occurrences",
                    "investigate-umbrella-domain-co-occurrences",
                    "umbrella-domain-related",
                    "investigate-umbrella-domain-related",
                    "umbrella-domain-security",
                    "investigate-umbrella-domain-security",
                    "umbrella-domain-dns-history",
                    "investigate-umbrella-domain-dns-history",
                    "umbrella-ip-dns-history",
                    "investigate-umbrella-ip-dns-history",
                    "investigate-umbrella-ip-malicious-domains",
                    "umbrella-ip-malicious-domains",
                    "umbrella-domain-search",
                    "investigate-umbrella-domain-search",
                    "domain",
                    "umbrella-get-related-domains",
                    "umbrella-get-domain-classifiers",
                    "umbrella-get-domain-queryvolume",
                    "umbrella-get-domain-details",
                    "umbrella-get-domains-for-email-registrar",
                    "umbrella-get-domains-for-nameserver",
                    "umbrella-get-whois-for-domain",
                    "umbrella-get-malicious-domains-for-ip",
                    "umbrella-get-domains-using-regex",
                    "umbrella-get-domain-timeline",
                    "umbrella-get-ip-timeline",
                    "umbrella-get-url-timeline"
                ],
                "tests": [
                    "Cisco Umbrella Test"
                ],
                "deprecated_commands": [
                    "investigate-umbrella-domain-categorization",
                    "investigate-umbrella-domain-co-occurrences",
                    "investigate-umbrella-domain-related",
                    "investigate-umbrella-domain-security",
                    "investigate-umbrella-domain-dns-history",
                    "investigate-umbrella-ip-dns-history",
                    "investigate-umbrella-ip-malicious-domains",
                    "investigate-umbrella-domain-search"
                ]
            }
        },
        {
            "Claroty": {
                "name": "Claroty",
                "file_path": "Packs/Claroty/Integrations/Claroty/Claroty.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "claroty-get-assets",
                    "claroty-query-alerts",
                    "claroty-resolve-alert",
                    "claroty-get-single-alert"
                ],
                "pack": "Claroty"
            }
        },
        {
            "Cloaken": {
                "name": "Cloaken",
                "file_path": "Integrations/Cloaken/Cloaken.yml",
                "commands": [
                    "cloaken-unshorten-url",
                    "cloaken-screenshot-url"
                ]
            }
        },
        {
            "Cloudflare Feed": {
                "name": "Cloudflare Feed",
                "file_path": "Packs/FeedCloudflare/Integrations/FeedCloudflare/FeedCloudflare.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "cloudflare-get-indicators"
                ],
                "pack": "FeedCloudflare"
            }
        },
        {
            "CloudShark": {
                "name": "CloudShark",
                "file_path": "Integrations/CloudShark/CloudShark.yml",
                "commands": [
                    "cloudshark-delete",
                    "cloudshark-download",
                    "cloudshark-info",
                    "cloudshark-upload"
                ],
                "tests": [
                    "CloudShark - Test Playbook"
                ]
            }
        },
        {
            "Code42": {
                "name": "Code42",
                "file_path": "Packs/Code42/Integrations/Code42/Code42.yml",
                "commands": [
                    "code42-securitydata-search",
                    "code42-alert-get",
                    "code42-departingemployee-add",
                    "code42-departingemployee-remove",
                    "code42-alert-resolve"
                ],
                "pack": "Code42"
            }
        },
        {
            "Cofense Feed": {
                "name": "Cofense Feed",
                "file_path": "Packs/FeedCofense/Integrations/FeedCofense/FeedCofense.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "cofense-get-indicators"
                ],
                "tests": [
                    "TestCofenseFeed"
                ],
                "pack": "FeedCofense"
            }
        },
        {
            "Cofense Intelligence": {
                "name": "Cofense Intelligence",
                "file_path": "Integrations/integration-Cofense-Intelligence.yml",
                "commands": [
                    "url",
                    "file",
                    "ip",
                    "email",
                    "cofense-search"
                ]
            }
        },
        {
            "Cofense Triage": {
                "name": "Cofense Triage",
                "file_path": "Integrations/CofenseTriage/CofenseTriage.yml",
                "commands": [
                    "cofense-search-reports",
                    "cofense-get-attachment",
                    "cofense-get-reporter",
                    "cofense-get-report-by-id"
                ],
                "tests": [
                    "Cofense Triage Test"
                ]
            }
        },
        {
            "Cortex XDR - IR": {
                "name": "Cortex XDR - IR",
                "file_path": "Packs/CortexXDR/Integrations/PaloAltoNetworks_XDR/PaloAltoNetworks_XDR.yml",
                "fromversion": "4.1.0",
                "commands": [
                    "xdr-get-incidents",
                    "xdr-get-incident-extra-data",
                    "xdr-update-incident",
                    "xdr-insert-parsed-alert",
                    "xdr-insert-cef-alerts",
                    "xdr-isolate-endpoint",
                    "xdr-unisolate-endpoint",
                    "xdr-get-endpoints",
                    "xdr-get-distribution-versions",
                    "xdr-create-distribution",
                    "xdr-get-distribution-url",
                    "xdr-get-create-distribution-status",
                    "xdr-get-audit-management-logs",
                    "xdr-get-audit-agent-reports"
                ],
                "pack": "CortexXDR"
            }
        },
        {
            "CounterCraft Deception Director": {
                "name": "CounterCraft Deception Director",
                "file_path": "Integrations/CounterCraft/CounterCraft.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "countercraft-list-campaigns",
                    "countercraft-list-hosts",
                    "countercraft-list-services",
                    "countercraft-list-breadcrumbs",
                    "countercraft-get-object",
                    "countercraft-get-events",
                    "countercraft-create-campaign",
                    "countercraft-list-dsns",
                    "countercraft-list-providers",
                    "countercraft-create-host-machine",
                    "countercraft-list-incidents",
                    "countercraft-manage-campaign",
                    "countercraft-manage-host",
                    "countercraft-manage-service",
                    "countercraft-manage-breadcrumb"
                ],
                "tests": [
                    "CounterCraft - Test"
                ]
            }
        },
        {
            "CounterTack": {
                "name": "CounterTack",
                "file_path": "Integrations/CounterTack/CounterTack.yml",
                "commands": [
                    "countertack-get-endpoints",
                    "countertack-get-behaviors",
                    "countertack-get-endpoint",
                    "countertack-get-behavior",
                    "countertack-get-endpoint-tags",
                    "countertack-add-tags",
                    "countertack-delete-tags",
                    "countertack-add-behavior-tags",
                    "countertack-delete-behavior-tags",
                    "countertack-endpoint-quarantine",
                    "countertack-disable-quarantine",
                    "countertack-extract-file",
                    "countertack-delete-file",
                    "countertack-get-all-files",
                    "countertack-get-endpoint-files",
                    "countertack-get-file-information",
                    "countertack-download-file",
                    "countertack-search-events",
                    "countertack-kill-process",
                    "countertack-search-hashes",
                    "countertack-search-endpoints",
                    "countertack-search-behaviors"
                ],
                "tests": [
                    "no tests"
                ]
            }
        },
        {
            "CrowdstrikeFalcon": {
                "name": "CrowdstrikeFalcon",
                "file_path": "Integrations/CrowdStrikeFalcon/CrowdStrikeFalcon.yml",
                "commands": [
                    "cs-falcon-search-device",
                    "cs-falcon-get-behavior",
                    "cs-falcon-search-detection",
                    "cs-falcon-resolve-detection",
                    "cs-falcon-contain-host",
                    "cs-falcon-lift-host-containment",
                    "cs-falcon-run-command",
                    "cs-falcon-upload-script",
                    "cs-falcon-upload-file",
                    "cs-falcon-delete-file",
                    "cs-falcon-get-file",
                    "cs-falcon-list-files",
                    "cs-falcon-get-script",
                    "cs-falcon-delete-script",
                    "cs-falcon-list-scripts",
                    "cs-falcon-run-script"
                ],
                "tests": [
                    "Test - CrowdStrike Falcon"
                ]
            }
        },
        {
            "CSVFeed": {
                "name": "CSVFeed",
                "file_path": "Packs/FeedCSV/Integrations/FeedCSV/FeedCSV.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "csv-get-indicators"
                ],
                "tests": [
                    "CSV_Feed_Test"
                ],
                "pack": "FeedCSV"
            }
        },
        {
            "Cuckoo Sandbox": {
                "name": "Cuckoo Sandbox",
                "file_path": "Integrations/integration-CuckooSandbox.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "ck-file",
                    "cuckoo-create-task-from-file",
                    "ck-report",
                    "cuckoo-get-task-report",
                    "ck-list",
                    "cuckoo-list-tasks",
                    "ck-url",
                    "cuckoo-create-task-from-url",
                    "ck-view",
                    "cuckoo-view-task",
                    "ck-del",
                    "cuckoo-delete-task",
                    "ck-scrshot",
                    "cuckoo-task-screenshot",
                    "ck-machines-list",
                    "cuckoo-machines-list",
                    "ck-machine-view",
                    "cuckoo-machine-view"
                ],
                "tests": [
                    "CuckooTest"
                ],
                "deprecated_commands": [
                    "ck-file",
                    "ck-report",
                    "ck-list",
                    "ck-url",
                    "ck-view",
                    "ck-del",
                    "ck-scrshot",
                    "ck-machines-list",
                    "ck-machine-view"
                ]
            }
        },
        {
            "Cuckoo Sandbox": {
                "name": "Cuckoo Sandbox",
                "file_path": "Integrations/integration-CuckooSandbox-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "ck-file",
                    "cuckoo-create-task-from-file",
                    "ck-report",
                    "cuckoo-get-task-report",
                    "ck-list",
                    "cuckoo-list-tasks",
                    "ck-url",
                    "cuckoo-create-task-from-url",
                    "ck-view",
                    "cuckoo-view-task",
                    "ck-del",
                    "cuckoo-delete-task",
                    "ck-scrshot",
                    "cuckoo-task-screenshot",
                    "ck-machines-list",
                    "cuckoo-machines-list",
                    "ck-machine-view",
                    "cuckoo-machine-view"
                ],
                "deprecated_commands": [
                    "ck-file",
                    "ck-report",
                    "ck-list",
                    "ck-url",
                    "ck-view",
                    "ck-del",
                    "ck-scrshot",
                    "ck-machines-list",
                    "ck-machine-view"
                ]
            }
        },
        {
            "CVE Search": {
                "name": "CVE Search",
                "file_path": "Integrations/integration-CveInfo.yml",
                "commands": [
                    "cve-search",
                    "cve-latest"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated": true
            }
        },
        {
            "CVE Search v2": {
                "name": "CVE Search v2",
                "file_path": "Packs/CVESearchV2/Integrations/CVESearchV2/CVESearchV2.yml",
                "commands": [
                    "cve-latest",
                    "cve"
                ],
                "tests": [
                    "CVE Search v2 - Test"
                ],
                "pack": "CVESearchV2"
            }
        },
        {
            "Cyber Triage": {
                "name": "Cyber Triage",
                "file_path": "Integrations/integration-CyberTriage.yml",
                "commands": [
                    "ct-triage-endpoint"
                ],
                "tests": [
                    "No test - no instance"
                ]
            }
        },
        {
            "CyberArkAIM": {
                "name": "CyberArkAIM",
                "file_path": "Integrations/integration-cyberark_AIM.yml",
                "commands": [
                    "cyber-ark-aim-query",
                    "list-credentials",
                    "reset-credentials",
                    "account-details"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Cybereason": {
                "name": "Cybereason",
                "file_path": "Integrations/Cybereason/Cybereason.yml",
                "commands": [
                    "cybereason-query-processes",
                    "cybereason-is-probe-connected",
                    "cybereason-query-connections",
                    "cybereason-isolate-machine",
                    "cybereason-unisolate-machine",
                    "cybereason-query-malops",
                    "cybereason-malop-processes",
                    "cybereason-add-comment",
                    "cybereason-update-malop-status",
                    "cybereason-prevent-file",
                    "cybereason-unprevent-file",
                    "cybereason-query-file",
                    "cybereason-query-domain",
                    "cybereason-query-user"
                ],
                "tests": [
                    "Cybereason Test"
                ]
            }
        },
        {
            "Cylance Protect": {
                "name": "Cylance Protect",
                "file_path": "Integrations/integration-Cylance_Protect.yml",
                "fromversion": "2.0.1",
                "commands": [
                    "cylance-protect-get-list",
                    "cylance-protect-get-devices",
                    "cylance-protect-get-threats",
                    "cylance-protect-download-threat",
                    "cylance-protect-get-threat-details",
                    "cylance-protect-device-delete",
                    "cylance-protect-get-device-threats",
                    "cylance-protect-update-device-threats",
                    "cylance-protect-delete-hash-from-lists",
                    "cylance-protect-update-hash-at-lists",
                    "cylance-protect-upload-threat",
                    "cylance-protect-get-threated-devices",
                    "cylance-protect-get-zones",
                    "cylance-protect-create-zone",
                    "cylance-protect-update-zone",
                    "cylance-protect-get-policies",
                    "cylance-protect-get-policy-details",
                    "cp-get-list",
                    "cp-get-devices",
                    "cp-get-threats",
                    "cp-download-threat",
                    "cp-get-threat-details",
                    "cp-device-delete",
                    "cp-get-device-threats",
                    "cp-update-device-threats",
                    "cp-delete-hash-from-lists",
                    "cp-update-hash-at-lists",
                    "cp-upload-threat",
                    "cp-get-threated-devices",
                    "cp-get-zones",
                    "cp-create-zone",
                    "cp-update-zone",
                    "cp-get-policies",
                    "cp-get-policy-details"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "cylance-protect-get-list",
                    "cylance-protect-get-devices",
                    "cylance-protect-get-threats",
                    "cylance-protect-download-threat",
                    "cylance-protect-get-threat-details",
                    "cylance-protect-device-delete",
                    "cylance-protect-get-device-threats",
                    "cylance-protect-update-device-threats",
                    "cylance-protect-delete-hash-from-lists",
                    "cylance-protect-update-hash-at-lists",
                    "cylance-protect-upload-threat",
                    "cylance-protect-get-threated-devices",
                    "cylance-protect-get-zones",
                    "cylance-protect-create-zone",
                    "cylance-protect-update-zone",
                    "cylance-protect-get-policies",
                    "cylance-protect-get-policy-details",
                    "cp-get-list",
                    "cp-get-devices",
                    "cp-get-threats",
                    "cp-download-threat",
                    "cp-get-threat-details",
                    "cp-device-delete",
                    "cp-get-device-threats",
                    "cp-update-device-threats",
                    "cp-delete-hash-from-lists",
                    "cp-update-hash-at-lists",
                    "cp-upload-threat",
                    "cp-get-threated-devices",
                    "cp-get-zones",
                    "cp-create-zone",
                    "cp-update-zone",
                    "cp-get-policies",
                    "cp-get-policy-details"
                ]
            }
        },
        {
            "Cylance Protect v2": {
                "name": "Cylance Protect v2",
                "file_path": "Integrations/Cylance_Protect_v2/Cylance_Protect_v2.yml",
                "commands": [
                    "cylance-protect-get-devices",
                    "cylance-protect-get-device",
                    "cylance-protect-update-device",
                    "cylance-protect-get-device-threats",
                    "cylance-protect-get-policies",
                    "cylance-protect-create-zone",
                    "cylance-protect-get-zones",
                    "cylance-protect-get-zone",
                    "cylance-protect-update-zone",
                    "cylance-protect-get-threat",
                    "cylance-protect-get-threat-devices",
                    "cylance-protect-get-indicators-report",
                    "cylance-protect-get-threats",
                    "cylance-protect-update-device-threats",
                    "cylance-protect-get-list",
                    "cylance-protect-download-threat",
                    "cylance-protect-add-hash-to-list",
                    "cylance-protect-delete-hash-from-lists",
                    "cylance-protect-get-policy-details",
                    "cylance-protect-delete-devices"
                ],
                "tests": [
                    "Cylance Protect v2 Test"
                ]
            }
        },
        {
            "Cymon": {
                "name": "Cymon",
                "file_path": "Integrations/Cymon/Cymon.yml",
                "commands": [
                    "ip",
                    "domain"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "ip",
                    "domain"
                ]
            }
        },
        {
            "Cymulate": {
                "name": "Cymulate",
                "file_path": "Packs/Cymulate/Integrations/Cymulate/Cymulate.yml",
                "commands": [
                    "cymulate-get-incident-info"
                ],
                "tests": [
                    "No tests"
                ],
                "pack": "Cymulate"
            }
        },
        {
            "Dell Secureworks": {
                "name": "Dell Secureworks",
                "file_path": "Integrations/integration-SecureWorks_V350.yml",
                "toversion": "3.5.1",
                "fromversion": "3.1.0",
                "commands": [
                    "secure-works-create-ticket",
                    "secure-works-update-ticket",
                    "secure-works-close-ticket",
                    "secure-works-add-worklogs-ticket",
                    "secure-works-get-ticket-count",
                    "secure-works-get-ticket",
                    "secure-works-assign-ticket",
                    "secure-works-get-tickets-updates",
                    "secure-works-get-tickets-ids"
                ]
            }
        },
        {
            "Dell Secureworks": {
                "name": "Dell Secureworks",
                "file_path": "Integrations/integration-SecureWorks.yml",
                "fromversion": "3.6.0",
                "commands": [
                    "secure-works-create-ticket",
                    "secure-works-update-ticket",
                    "secure-works-close-ticket",
                    "secure-works-add-worklogs-ticket",
                    "secure-works-get-ticket",
                    "secure-works-assign-ticket",
                    "secure-works-get-tickets-updates",
                    "secure-works-get-close-codes",
                    "secure-works-get-tickets-ids",
                    "secure-works-get-ticket-count"
                ],
                "tests": [
                    "secureworks_test"
                ]
            }
        },
        {
            "Demisto Lock": {
                "name": "Demisto Lock",
                "file_path": "Integrations/integration-DemistoLocking.yml",
                "commands": [
                    "demisto-lock-get",
                    "demisto-lock-release",
                    "demisto-lock-info",
                    "demisto-lock-release-all"
                ]
            }
        },
        {
            "Demisto REST API": {
                "name": "Demisto REST API",
                "file_path": "Integrations/integration-DemistoRESTAPI.yml",
                "commands": [
                    "demisto-api-post",
                    "demisto-api-get",
                    "demisto-api-put",
                    "demisto-api-delete",
                    "demisto-api-download",
                    "demisto-api-multipart",
                    "demisto-delete-incidents"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Devo": {
                "name": "Devo",
                "file_path": "Integrations/integration-Devo.yml",
                "commands": [
                    "devo-query"
                ],
                "tests": [
                    "devo_test_playbook"
                ]
            }
        },
        {
            "Devo_v2": {
                "name": "Devo_v2",
                "file_path": "Integrations/Devo_v2/Devo_v2.yml",
                "commands": [
                    "devo-run-query",
                    "devo-get-alerts",
                    "devo-multi-table-query",
                    "devo-write-to-table",
                    "devo-write-to-lookup-table"
                ],
                "tests": [
                    "No test - no instance"
                ]
            }
        },
        {
            "Digital Defense FrontlineVM": {
                "name": "Digital Defense FrontlineVM",
                "file_path": "Integrations/Digital_Defense_FrontlineVM/Digital_Defense_FrontlineVM.yml",
                "commands": [
                    "frontline-get-assets",
                    "frontline-get-vulns",
                    "frontline-scan-asset"
                ]
            }
        },
        {
            "Digital Shadows": {
                "name": "Digital Shadows",
                "file_path": "Integrations/integration-DigitalShadows.yml",
                "commands": [
                    "ds-get-breach-reviews",
                    "ds-snapshot-breach-status",
                    "ds-find-breach-records",
                    "ds-get-breach-summary",
                    "ds-find-breach-usernames",
                    "ds-get-breach",
                    "ds-get-breach-records",
                    "ds-find-data-breaches",
                    "ds-get-incident",
                    "ds-get-incident-reviews",
                    "ds-snapshot-incident-review",
                    "ds-find-incidents-filtered",
                    "ds-get-incidents-summary",
                    "ds-get-apt-report",
                    "ds-get-intelligence-incident",
                    "ds-get-intelligence-incident-iocs",
                    "ds-find-intelligence-incidents",
                    "ds-find-intelligence-incidents-regional",
                    "ds-get-intelligence-threat",
                    "ds-get-intelligence-threat-iocs",
                    "ds-get-intelligence-threat-activity",
                    "ds-find-intelligence-threats",
                    "ds-find-intelligence-threats-regional",
                    "ds-get-port-reviews",
                    "ds-snapshot-port-review",
                    "ds-find-ports",
                    "ds-find-secure-sockets",
                    "ds-find-vulnerabilities",
                    "ds-search",
                    "ds-get-tags"
                ]
            }
        },
        {
            "dnstwist": {
                "name": "dnstwist",
                "file_path": "Integrations/dnstwist/dnstwist.yml",
                "commands": [
                    "dnstwist-domain-variations"
                ]
            }
        },
        {
            "DomainTools": {
                "name": "DomainTools",
                "file_path": "Integrations/integration-DomainTools.yml",
                "fromversion": "3.0.0",
                "commands": [
                    "domain",
                    "domainSearch",
                    "reverseIP",
                    "reverseNameServer",
                    "reverseWhois",
                    "whois",
                    "whoisHistory",
                    "domainProfile"
                ]
            }
        },
        {
            "DomainTools Iris": {
                "name": "DomainTools Iris",
                "file_path": "Integrations/DomainTools_Iris/DomainTools_Iris.yml",
                "fromversion": "4.1.0",
                "commands": [
                    "domain",
                    "domaintoolsiris-analytics",
                    "domaintoolsiris-threat-profile",
                    "domaintoolsiris-pivot"
                ],
                "tests": [
                    "DomainTools Iris - Test"
                ]
            }
        },
        {
            "DShield Feed": {
                "name": "DShield Feed",
                "file_path": "Packs/FeedDShield/Integrations/FeedDShield/FeedDShield.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "dshield-get-indicators"
                ],
                "pack": "FeedDShield"
            }
        },
        {
            "DUO Admin": {
                "name": "DUO Admin",
                "file_path": "Integrations/DuoAdminApi/DuoAdminApi.yml",
                "commands": [
                    "duoadmin-get-authentication-logs-by-user",
                    "duoadmin-dissociate-device-from-user",
                    "duoadmin-delete-u2f-token",
                    "duoadmin-get-users",
                    "duoadmin-get-devices-by-user",
                    "duoadmin-get-u2f-tokens-by-user",
                    "duoadmin-get-devices",
                    "duoadmin-associate-device-to-user"
                ],
                "tests": [
                    "DuoAdmin API test playbook"
                ]
            }
        },
        {
            "EasyVista": {
                "name": "EasyVista",
                "file_path": "Integrations/integration-EasyVista.yml",
                "commands": [
                    "easy-vista-search"
                ]
            }
        },
        {
            "EclecticIQ Platform": {
                "name": "EclecticIQ Platform",
                "file_path": "Integrations/EclecticIQ/EclecticIQ.yml",
                "commands": [
                    "ip",
                    "url",
                    "file",
                    "eclecticiq-get-observable-related-entity",
                    "email",
                    "domain"
                ],
                "tests": [
                    "No test - instance issues"
                ]
            }
        },
        {
            "EDL": {
                "name": "EDL",
                "file_path": "Integrations/EDL/EDL.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "edl-update"
                ],
                "tests": [
                    "Test_EDL"
                ]
            }
        },
        {
            "Elasticsearch v2": {
                "name": "Elasticsearch v2",
                "file_path": "Integrations/Elasticsearch_v2/Elasticsearch_v2.yml",
                "commands": [
                    "es-search",
                    "search"
                ]
            }
        },
        {
            "ElasticsearchFeed": {
                "name": "ElasticsearchFeed",
                "file_path": "Packs/FeedElasticsearch/Integrations/FeedElasticsearch/FeedElasticsearch.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "es-get-indicators"
                ],
                "pack": "FeedElasticsearch"
            }
        },
        {
            "Endgame": {
                "name": "Endgame",
                "file_path": "Integrations/integration-Endgame.yml",
                "commands": [
                    "endgame-deploy",
                    "endgame-get-deployment-profiles",
                    "endgame-get-unmanaged-endpoints",
                    "endgame-get-endpoint-status",
                    "endgame-create-sensor-profile",
                    "endgame-get-investigations",
                    "endgame-create-investigation",
                    "endgame-get-sensor",
                    "endgame-investigation-results",
                    "endgame-investigation-status"
                ],
                "tests": [
                    "No test - no instance"
                ]
            }
        },
        {
            "epo": {
                "name": "epo",
                "file_path": "Integrations/integration-epo.yml",
                "commands": [
                    "epo-help",
                    "epo-get-latest-dat",
                    "epo-get-current-dat",
                    "epo-update-client-dat",
                    "epo-update-repository",
                    "epo-get-system-tree-group",
                    "epo-find-systems",
                    "epo-command",
                    "epo-advanced-command",
                    "epo-wakeup-agent",
                    "epo-apply-tag",
                    "epo-clear-tag",
                    "epo-query-table",
                    "epo-get-tables",
                    "epo-find-system",
                    "epo-get-version",
                    "epo-move-system"
                ],
                "tests": [
                    "Test Playbook McAfee ePO"
                ]
            }
        },
        {
            "EWS": {
                "name": "EWS",
                "file_path": "Integrations/integration-Office_EWS.yml",
                "commands": [
                    "ews-get-folder",
                    "ews-delete-items",
                    "ews-delete-attachments",
                    "ews-get-items",
                    "ews-search-mailbox",
                    "ews-get-contacts",
                    "ews-get-searchable-mailboxes",
                    "ews-search-mailboxes",
                    "ews-get-attachment",
                    "ews-find-folders",
                    "ews-get-attachment-item",
                    "ews-move-item"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "ews-get-folder",
                    "ews-delete-items",
                    "ews-delete-attachments",
                    "ews-get-items",
                    "ews-search-mailbox",
                    "ews-get-contacts",
                    "ews-search-mailboxes",
                    "ews-get-attachment",
                    "ews-find-folders",
                    "ews-get-attachment-item",
                    "ews-move-item"
                ]
            }
        },
        {
            "EWS Mail Sender": {
                "name": "EWS Mail Sender",
                "file_path": "Integrations/EWSMailSender/EWSMailSender.yml",
                "commands": [
                    "send-mail"
                ],
                "tests": [
                    "EWS Mail Sender Test",
                    "EWS Mail Sender Test 2"
                ]
            }
        },
        {
            "EWS v2": {
                "name": "EWS v2",
                "file_path": "Integrations/EWSv2/EWSv2.yml",
                "commands": [
                    "ews-get-attachment",
                    "ews-delete-attachment",
                    "ews-get-searchable-mailboxes",
                    "ews-search-mailboxes",
                    "ews-move-item",
                    "ews-delete-items",
                    "ews-search-mailbox",
                    "ews-get-contacts",
                    "ews-get-out-of-office",
                    "ews-recover-messages",
                    "ews-create-folder",
                    "ews-mark-item-as-junk",
                    "ews-find-folders",
                    "ews-get-items-from-folder",
                    "ews-get-items",
                    "ews-move-item-between-mailboxes",
                    "ews-get-folder",
                    "ews-o365-start-compliance-search",
                    "ews-o365-get-compliance-search",
                    "ews-o365-purge-compliance-search-results",
                    "ews-o365-remove-compliance-search",
                    "ews-o365-get-compliance-search-purge-status",
                    "ews-get-autodiscovery-config",
                    "ews-expand-group",
                    "ews-mark-items-as-read",
                    "ews-get-items-as-eml"
                ],
                "tests": [
                    "pyEWS_Test",
                    "EWS search-mailbox test"
                ]
            }
        },
        {
            "Exabeam": {
                "name": "Exabeam",
                "file_path": "Integrations/Exabeam/Exabeam.yml",
                "commands": [
                    "get-notable-users",
                    "exabeam-get-notable-users",
                    "get-watchlists",
                    "exabeam-get-watchlists",
                    "get-peer-groups",
                    "exabeam-get-peer-groups",
                    "get-user-info",
                    "exabeam-get-user-info",
                    "get-user-labels",
                    "exabeam-get-user-labels",
                    "get-user-sessions",
                    "exabeam-get-user-sessions",
                    "exabeam-delete-watchlist",
                    "exabeam-get-asset-data"
                ],
                "tests": [
                    "Exabeam - Test"
                ],
                "deprecated_commands": [
                    "get-notable-users",
                    "get-watchlists",
                    "get-peer-groups",
                    "get-user-info",
                    "get-user-labels",
                    "get-user-sessions"
                ]
            }
        },
        {
            "Exchange 2016 Compliance Search": {
                "name": "Exchange 2016 Compliance Search",
                "file_path": "Integrations/Exchange2016_Compliance/Exchange2016_Compliance.yml",
                "commands": [
                    "exchange2016-start-compliance-search",
                    "exchange2016-get-compliance-search",
                    "exchange2016-remove-compliance-search",
                    "exchange2016-purge-compliance-search-results",
                    "exchange2016-get-compliance-search-purge-status"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Expanse": {
                "name": "Expanse",
                "file_path": "Packs/Expanse/Integrations/Expanse/Expanse.yml",
                "fromversion": "4.5.0",
                "commands": [
                    "ip",
                    "domain"
                ],
                "pack": "Expanse"
            }
        },
        {
            "ExportIndicators": {
                "name": "ExportIndicators",
                "file_path": "Packs/ExportIndicators/Integrations/ExportIndicators/ExportIndicators.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "eis-update"
                ],
                "tests": [
                    "Test_export_indicators_service"
                ],
                "pack": "ExportIndicators"
            }
        },
        {
            "ExtraHop": {
                "name": "ExtraHop",
                "file_path": "Integrations/ExtraHop/ExtraHop.yml",
                "commands": [
                    "extrahop-get-alert-rules",
                    "extrahop-query",
                    "extrahop-devices",
                    "extrahop-whitelist-modify",
                    "extrahop-whitelist-retrieve",
                    "extrahop-add-alert-rule",
                    "extrahop-modify-alert-rule"
                ],
                "tests": [
                    "ExtraHop-Test"
                ],
                "deprecated": true
            }
        },
        {
            "ExtraHop v2": {
                "name": "ExtraHop v2",
                "file_path": "Integrations/ExtraHop_v2/ExtraHop_v2.yml",
                "commands": [
                    "extrahop-get-alerts",
                    "extrahop-query-records",
                    "extrahop-device-search",
                    "extrahop-edit-watchlist",
                    "extrahop-get-watchlist",
                    "extrahop-create-alert",
                    "extrahop-edit-alert",
                    "extrahop-track-ticket",
                    "extrahop-get-peers",
                    "extrahop-get-protocols",
                    "extrahop-tag-devices",
                    "extrahop-get-activity-map",
                    "extrahop-search-packets"
                ],
                "tests": [
                    "ExtraHop_v2-Test"
                ]
            }
        },
        {
            "F5 firewall": {
                "name": "F5 firewall",
                "file_path": "Integrations/integration-F5.yml",
                "commands": [
                    "f5-create-policy",
                    "f5-create-rule",
                    "f5-list-rules",
                    "f5-modify-rule",
                    "f5-del-rule",
                    "f5-modify-global-policy",
                    "f5-show-global-policy",
                    "f5-del-policy",
                    "f5-list-all-user-sessions"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "FalconHost": {
                "name": "FalconHost",
                "file_path": "Integrations/integration-CrowdStrikeHost.yml",
                "fromversion": "2.5.0",
                "commands": [
                    "cs-upload-ioc",
                    "cs-get-ioc",
                    "cs-update-ioc",
                    "cs-delete-ioc",
                    "cs-search-iocs",
                    "cs-device-search",
                    "cs-device-details",
                    "cs-device-count-ioc",
                    "cs-device-ran-on",
                    "cs-processes-ran-on",
                    "cs-process-details",
                    "cs-resolve-detection",
                    "cs-detection-search",
                    "cs-detection-details"
                ],
                "tests": [
                    "CrowdStrike Endpoint Enrichment - Test",
                    "crowdstrike_falconhost_test"
                ]
            }
        },
        {
            "FalconIntel": {
                "name": "FalconIntel",
                "file_path": "Integrations/integration-CrowdStrikeIntel.yml",
                "commands": [
                    "file",
                    "url",
                    "domain",
                    "ip",
                    "cs-actors",
                    "cs-indicators",
                    "cs-reports",
                    "cs-report-pdf"
                ],
                "tests": [
                    "CrowdStrike Falcon Intel v2"
                ]
            }
        },
        {
            "FalconIntel": {
                "name": "FalconIntel",
                "file_path": "Integrations/integration-CrowdStrikeIntel-old.yml",
                "toversion": "3.1.0",
                "fromversion": "2.5.0",
                "commands": [
                    "file",
                    "url",
                    "domain",
                    "ip",
                    "cs-actors",
                    "cs-indicators",
                    "cs-reports",
                    "cs-report-pdf"
                ]
            }
        },
        {
            "Farsight DNSDB": {
                "name": "Farsight DNSDB",
                "file_path": "Integrations/integration-DNSDB.yml",
                "commands": [
                    "dnsdb-rdata",
                    "dnsdb-rrset"
                ]
            }
        },
        {
            "Fastly Feed": {
                "name": "Fastly Feed",
                "file_path": "Packs/FeedFastly/Integrations/FeedFastly/FeedFastly.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "fastly-get-indicators"
                ],
                "pack": "FeedFastly"
            }
        },
        {
            "Feodo Tracker Hashes Feed": {
                "name": "Feodo Tracker Hashes Feed",
                "file_path": "Packs/FeedFeodoTracker/Integrations/FeedFeodoTrackerHashes/FeedFeodoTrackerHashes.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "feodotracker-hashes-get-indicators"
                ],
                "pack": "FeedFeodoTracker"
            }
        },
        {
            "Feodo Tracker IP Blocklist Feed": {
                "name": "Feodo Tracker IP Blocklist Feed",
                "file_path": "Packs/FeedFeodoTracker/Integrations/FeedFeodoTrackerIPBlocklist/FeedFeodoTrackerIPBlocklist.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "feodotracker-ipblocklist-get-indicators"
                ],
                "pack": "FeedFeodoTracker"
            }
        },
        {
            "Fidelis EDR": {
                "name": "Fidelis EDR",
                "file_path": "Packs/FidelisEndpoint/Integrations/FidelisEndpoint/FidelisEndpoint.yml",
                "commands": [
                    "fidelis-endpoint-list-alerts",
                    "fidelis-endpoint-host-info",
                    "fidelis-endpoint-file-search",
                    "fidelis-endpoint-file-search-status",
                    "fidelis-endpoint-file-search-result-metadata",
                    "fidelis-endpoint-get-file",
                    "fidelis-endpoint-delete-file-search-job",
                    "fidelis-endpoint-list-scripts",
                    "fidelis-endpoint-get-script-manifest",
                    "fidelis-endpoint-list-processes",
                    "fidelis-endpoint-get-script-result",
                    "fidelis-endpoint-kill-process",
                    "fidelis-endpoint-delete-file",
                    "fidelis-endpoint-isolate-network",
                    "fidelis-endpoint-remove-network-isolation",
                    "fidelis-endpoint-script-job-status",
                    "fidelis-endpoint-execute-script",
                    "fidelis-endpoint-query-file",
                    "fidelis-endpoint-query-process",
                    "fidelis-endpoint-query-connection-by-remote-ip",
                    "fidelis-endpoint-query-by-dns",
                    "fidelis-endpoint-query-dns-by-server-ip",
                    "fidelis-endpoint-query-dns-by-source-ip",
                    "fidelis-endpoint-query-events"
                ],
                "tests": [
                    "no tests test is in non-cricle Fidelis Endpoint - Test"
                ],
                "pack": "FidelisEndpoint"
            }
        },
        {
            "Fidelis Elevate Network": {
                "name": "Fidelis Elevate Network",
                "file_path": "Integrations/FidelisElevateNetwork/FidelisElevateNetwork.yml",
                "commands": [
                    "fidelis-get-alert",
                    "fidelis-delete-alert",
                    "fidelis-get-malware-data",
                    "fidelis-get-alert-pcap",
                    "fidelis-get-alert-report",
                    "fidelis-sandbox-upload",
                    "fidelis-list-alerts",
                    "fidelis-upload-pcap",
                    "fidelis-list-pcap-components",
                    "fidelis-run-pcap",
                    "fidelis-get-alert-by-uuid",
                    "fidelis-list-metadata",
                    "fidelis-list-alerts-by-ip",
                    "fidelis-download-malware-file",
                    "fidelis-download-pcap-file"
                ],
                "tests": [
                    "Fidelis-Test"
                ],
                "deprecated_commands": [
                    "fidelis-get-alert-pcap"
                ]
            }
        },
        {
            "fireeye": {
                "name": "fireeye",
                "file_path": "Integrations/integration-fireeye.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "fe-report",
                    "fe-submit-status",
                    "fe-alert",
                    "fe-submit-result",
                    "fe-submit",
                    "fe-config",
                    "fe-submit-url",
                    "fe-submit-url-status",
                    "fe-submit-url-result"
                ],
                "tests": [
                    "No test - no instance"
                ]
            }
        },
        {
            "fireeye": {
                "name": "fireeye",
                "file_path": "Integrations/integration-fireeye-old.yml",
                "toversion": "3.1.0",
                "fromversion": "3.0.0",
                "commands": [
                    "fe-report",
                    "fe-submit-status",
                    "fe-alert",
                    "fe-submit-result",
                    "fe-submit",
                    "fe-config"
                ]
            }
        },
        {
            "FireEye ETP": {
                "name": "FireEye ETP",
                "file_path": "Integrations/FireEyeETP/FireEyeETP.yml",
                "commands": [
                    "fireeye-etp-search-messages",
                    "fireeye-etp-get-message",
                    "fireeye-etp-get-alerts",
                    "fireeye-etp-get-alert"
                ],
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "FireEye HX": {
                "name": "FireEye HX",
                "file_path": "Integrations/FireEyeHX/FireEyeHX.yml",
                "commands": [
                    "fireeye-hx-host-containment",
                    "fireeye-hx-cancel-containment",
                    "fireeye-hx-get-alerts",
                    "fireeye-hx-suppress-alert",
                    "fireeye-hx-get-indicators",
                    "fireeye-hx-get-indicator",
                    "fireeye-hx-get-host-information",
                    "fireeye-hx-get-alert",
                    "fireeye-hx-file-acquisition",
                    "fireeye-hx-delete-file-acquisition",
                    "fireeye-hx-data-acquisition",
                    "fireeye-hx-delete-data-acquisition",
                    "fireeye-hx-search",
                    "fireeye-hx-get-host-set-information",
                    "fireeye-hx-create-indicator",
                    "fireeye-hx-append-conditions",
                    "fireeye-hx-get-all-hosts-information"
                ],
                "tests": [
                    "FireEye HX Test"
                ]
            }
        },
        {
            "FireEye iSIGHT": {
                "name": "FireEye iSIGHT",
                "file_path": "Integrations/integration-isight.yml",
                "commands": [
                    "ip",
                    "domain",
                    "file",
                    "isight-get-report",
                    "isight-submit-file"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "FireEyeHelix": {
                "name": "FireEyeHelix",
                "file_path": "Integrations/FireEyeHelix/FireEyeHelix.yml",
                "fromversion": "4.5.0",
                "commands": [
                    "fireeye-helix-list-alerts",
                    "fireeye-helix-get-alert-by-id",
                    "fireeye-helix-alert-create-note",
                    "fireeye-helix-get-events-by-alert",
                    "fireeye-helix-get-endpoints-by-alert",
                    "fireeye-helix-get-cases-by-alert",
                    "fireeye-helix-get-lists",
                    "fireeye-helix-get-list-by-id",
                    "fireeye-helix-create-list",
                    "fireeye-helix-update-list",
                    "fireeye-helix-delete-list",
                    "fireeye-helix-list-sensors",
                    "fireeye-helix-list-rules",
                    "fireeye-helix-edit-rule",
                    "fireeye-helix-alert-get-notes",
                    "fireeye-helix-alert-delete-note",
                    "fireeye-helix-search",
                    "fireeye-helix-add-list-item",
                    "fireeye-helix-get-list-items",
                    "fireeye-helix-update-list-item",
                    "fireeye-helix-remove-list-item",
                    "fireeye-helix-archive-search-get-results",
                    "fireeye-helix-archive-search",
                    "fireeye-helix-archive-search-get-status"
                ],
                "tests": [
                    "No test - no license"
                ]
            }
        },
        {
            "Flashpoint": {
                "name": "Flashpoint",
                "file_path": "Integrations/Flashpoint/Flashpoint.yml",
                "commands": [
                    "ip",
                    "domain",
                    "filename",
                    "url",
                    "file",
                    "email",
                    "flashpoint-search-intelligence-reports",
                    "flashpoint-get-single-intelligence-report",
                    "flashpoint-get-related-reports",
                    "flashpoint-get-single-event",
                    "flashpoint-get-events",
                    "flashpoint-common-lookup",
                    "flashpoint-get-forum-details",
                    "flashpoint-get-forum-room-details",
                    "flashpoint-get-forum-user-details",
                    "flashpoint-get-forum-post-details",
                    "flashpoint-search-forum-sites",
                    "flashpoint-search-forum-posts"
                ],
                "tests": [
                    "Flashpoint_event-Test",
                    "Flashpoint_forum-Test",
                    "Flashpoint_report-Test",
                    "Flashpoint_reputation-Test"
                ]
            }
        },
        {
            "Forcepoint": {
                "name": "Forcepoint",
                "file_path": "Integrations/integration-Forcepoint.yml",
                "commands": [
                    "fp-add-category",
                    "fp-list-categories",
                    "fp-get-category-detailes",
                    "fp-add-address-to-category",
                    "fp-delete-categories",
                    "fp-delete-address-from-category"
                ]
            }
        },
        {
            "Forescout": {
                "name": "Forescout",
                "file_path": "Integrations/Forescout/Forescout.yml",
                "commands": [
                    "forescout-get-hosts",
                    "forescout-get-host-fields",
                    "forescout-get-host",
                    "forescout-get-policies",
                    "forescout-update-host-fields",
                    "forescout-update-lists"
                ],
                "tests": [
                    "Forescout-Test"
                ]
            }
        },
        {
            "FortiGate": {
                "name": "FortiGate",
                "file_path": "Integrations/FortiGate/FortiGate.yml",
                "commands": [
                    "fortigate-get-addresses",
                    "fortigate-get-service-groups",
                    "fortigate-update-service-group",
                    "fortigate-delete-service-group",
                    "fortigate-get-firewall-service",
                    "fortigate-create-firewall-service",
                    "fortigate-get-policy",
                    "fortigate-update-policy",
                    "fortigate-create-policy",
                    "fortigate-move-policy",
                    "fortigate-delete-policy",
                    "fortigate-get-address-groups",
                    "fortigate-update-address-group",
                    "fortigate-create-address-group",
                    "fortigate-delete-address-group",
                    "fortigate-ban-ip",
                    "fortigate-unban-ip",
                    "fortigate-get-banned-ips"
                ],
                "tests": [
                    "Fortigate Test"
                ]
            }
        },
        {
            "FortiSIEM": {
                "name": "FortiSIEM",
                "file_path": "Integrations/FortiSIEM/FortiSIEM.yml",
                "commands": [
                    "fortisiem-get-events-by-incident",
                    "fortisiem-clear-incident",
                    "fortisiem-get-events-by-filter",
                    "fortisiem-get-cmdb-devices",
                    "fortisiem-get-events-by-query",
                    "fortisiem-get-lists",
                    "fortisiem-add-item-to-resource-list",
                    "fortisiem-remove-item-from-resource-list",
                    "fortisiem-get-resource-list"
                ],
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "Freshdesk": {
                "name": "Freshdesk",
                "file_path": "Integrations/FreshDesk/FreshDesk.yml",
                "commands": [
                    "fd-create-ticket",
                    "fd-get-ticket",
                    "fd-update-ticket",
                    "fd-list-contacts",
                    "fd-get-contact",
                    "fd-list-canned-response-folders",
                    "fd-get-canned-response-folder",
                    "fd-list-groups",
                    "fd-ticket-reply",
                    "fd-get-ticket-conversations",
                    "fd-list-agents",
                    "fd-create-ticket-note",
                    "fd-delete-ticket",
                    "fd-search-tickets"
                ],
                "tests": [
                    "Freshdesk-Test"
                ]
            }
        },
        {
            "Generic SQL": {
                "name": "Generic SQL",
                "file_path": "Packs/GenericSQL/Integrations/GenericSQL/GenericSQL.yml",
                "commands": [
                    "query",
                    "sql-command"
                ],
                "pack": "GenericSQL"
            }
        },
        {
            "Giphy": {
                "name": "Giphy",
                "file_path": "Integrations/integration-Giphy.yml",
                "commands": [
                    "giphy"
                ]
            }
        },
        {
            "GitHub": {
                "name": "GitHub",
                "file_path": "Integrations/GitHub/GitHub.yml",
                "commands": [
                    "GitHub-create-issue",
                    "GitHub-close-issue",
                    "GitHub-update-issue",
                    "GitHub-list-all-issues",
                    "GitHub-search-issues",
                    "GitHub-get-download-count",
                    "GitHub-get-stale-prs",
                    "GitHub-get-branch",
                    "GitHub-create-branch",
                    "GitHub-get-team-membership",
                    "GitHub-request-review",
                    "GitHub-create-comment",
                    "GitHub-list-issue-comments",
                    "GitHub-list-pr-files",
                    "GitHub-list-pr-reviews",
                    "GitHub-get-commit",
                    "GitHub-add-label",
                    "GitHub-get-pull-request",
                    "GitHub-list-teams",
                    "GitHub-delete-branch",
                    "GitHub-list-pr-review-comments",
                    "GitHub-update-pull-request",
                    "GitHub-is-pr-merged",
                    "GitHub-create-pull-request"
                ]
            }
        },
        {
            "Gmail": {
                "name": "Gmail",
                "file_path": "Integrations/Gmail/Gmail.yml",
                "commands": [
                    "gmail-delete-user",
                    "gmail-get-tokens-for-user",
                    "gmail-get-user",
                    "gmail-get-user-roles",
                    "gmail-get-attachments",
                    "gmail-get-mail",
                    "gmail-search",
                    "gmail-search-all-mailboxes",
                    "gmail-list-users",
                    "gmail-revoke-user-role",
                    "gmail-create-user",
                    "gmail-delete-mail",
                    "gmail-get-thread",
                    "gmail-move-mail",
                    "gmail-move-mail-to-mailbox",
                    "gmail-add-delete-filter",
                    "gmail-add-filter",
                    "gmail-list-filters",
                    "gmail-remove-filter",
                    "gmail-hide-user-in-directory",
                    "gmail-set-password",
                    "gmail-get-autoreply",
                    "gmail-set-autoreply",
                    "gmail-delegate-user-mailbox",
                    "send-mail",
                    "gmail-remove-delegated-mailbox",
                    "gmail-get-role"
                ],
                "tests": [
                    "Gmail Convert Html Test",
                    "GmailTest"
                ]
            }
        },
        {
            "Gmail Single User": {
                "name": "Gmail Single User",
                "file_path": "Beta_Integrations/GmailSingleUser/GmailSingleUser.yml",
                "fromversion": "4.5.0",
                "commands": [
                    "send-mail",
                    "gmail-auth-link",
                    "gmail-auth-test"
                ],
                "tests": [
                    "Gmail Single User - Test"
                ]
            }
        },
        {
            "Google BigQuery": {
                "name": "Google BigQuery",
                "file_path": "Integrations/GoogleBigQuery/GoogleBigQuery.yml",
                "commands": [
                    "bigquery-query"
                ]
            }
        },
        {
            "Google Chronicle Backstory": {
                "name": "Google Chronicle Backstory",
                "file_path": "Integrations/GoogleChronicleBackstory/GoogleChronicleBackstory.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "gcb-list-iocs",
                    "gcb-assets",
                    "ip",
                    "domain",
                    "gcb-ioc-details",
                    "gcb-list-alerts"
                ]
            }
        },
        {
            "Google Cloud Compute": {
                "name": "Google Cloud Compute",
                "file_path": "Integrations/GoogleCloudCompute/GoogleCloudCompute.yml",
                "commands": [
                    "gcp-compute-insert-instance",
                    "gcp-compute-get-image-from-family",
                    "gcp-compute-get-network",
                    "gcp-compute-list-instances",
                    "gcp-compute-aggregated-list-instances",
                    "gcp-compute-get-global-operation",
                    "gcp-compute-get-zone-operation",
                    "gcp-compute-list-zone-operation",
                    "gcp-compute-delete-zone-operation",
                    "gcp-compute-get-instance",
                    "gcp-compute-delete-instance",
                    "gcp-compute-start-instance",
                    "gcp-compute-stop-instance",
                    "gcp-compute-reset-instance",
                    "gcp-compute-set-instance-labels",
                    "gcp-compute-set-instance-metadata",
                    "gcp-compute-set-instance-machine-type",
                    "gcp-compute-get-region-operation",
                    "gcp-compute-list-region-operation",
                    "gcp-compute-delete-region-operation",
                    "gcp-compute-list-global-operation",
                    "gcp-compute-delete-global-operation",
                    "gcp-compute-delete-address",
                    "gcp-compute-get-address",
                    "gcp-compute-insert-address",
                    "gcp-compute-list-addresses",
                    "gcp-compute-aggregated-list-addresses",
                    "gcp-compute-delete-global-address",
                    "gcp-compute-get-global-address",
                    "gcp-compute-insert-global-address",
                    "gcp-compute-list-global-addresses",
                    "gcp-compute-aggregated-list-disks",
                    "gcp-compute-create-disk-snapshot",
                    "gcp-compute-delete-disk",
                    "gcp-compute-get-disk",
                    "gcp-compute-insert-disk",
                    "gcp-compute-list-disks",
                    "gcp-compute-resize-disk",
                    "gcp-compute-set-disk-labels",
                    "gcp-compute-aggregated-list-disk-types",
                    "gcp-compute-get-disk-type",
                    "gcp-compute-list-disk-types",
                    "gcp-compute-get-image",
                    "gcp-compute-list-images",
                    "gcp-compute-delete-image",
                    "gcp-compute-set-image-labels",
                    "gcp-compute-insert-image",
                    "gcp-compute-instance-groups-add-instances",
                    "gcp-compute-aggregated-list-instance-groups",
                    "gcp-compute-delete-instance-group",
                    "gcp-compute-get-instance-group",
                    "gcp-compute-insert-instance-group",
                    "gcp-compute-list-instance-groups",
                    "gcp-compute-list-instance-group-instances",
                    "gcp-compute-instance-groups-remove-instances",
                    "gcp-compute-set-group-instance-named-ports",
                    "gcp-compute-get-region",
                    "gcp-compute-list-regions",
                    "gcp-compute-get-zone",
                    "gcp-compute-list-zones",
                    "gcp-compute-aggregated-list-machine-types",
                    "gcp-compute-get-machine-type",
                    "gcp-compute-list-machine-types",
                    "gcp-compute-networks-add-peering",
                    "gcp-compute-delete-network",
                    "gcp-compute-insert-network",
                    "gcp-compute-list-networks",
                    "gcp-compute-networks-remove-peering",
                    "gcp-compute-wait-for-zone-operation",
                    "gcp-compute-wait-for-region-operation",
                    "gcp-compute-wait-for-global-operation",
                    "gcp-compute-insert-firewall",
                    "gcp-compute-patch-firewall",
                    "gcp-compute-list-firewall",
                    "gcp-compute-get-firewall",
                    "gcp-compute-delete-firewall",
                    "gcp-compute-set-snapshot-labels",
                    "gcp-compute-list-snapshots",
                    "gcp-compute-get-snapshot",
                    "gcp-compute-delete-snapshot"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "Google Cloud Storage": {
                "name": "Google Cloud Storage",
                "file_path": "Integrations/GoogleCloudStorage/GoogleCloudStorage.yml",
                "commands": [
                    "gcs-list-buckets",
                    "gcs-get-bucket",
                    "gcs-create-bucket",
                    "gcs-delete-bucket",
                    "gcs-list-bucket-objects",
                    "gcs-download-file",
                    "gcs-upload-file",
                    "gcs-list-bucket-policy",
                    "gcs-create-bucket-policy",
                    "gcs-put-bucket-policy",
                    "gcs-delete-bucket-policy",
                    "gcs-list-bucket-object-policy",
                    "gcs-create-bucket-object-policy",
                    "gcs-put-bucket-object-policy",
                    "gcs-delete-bucket-object-policy"
                ],
                "tests": [
                    "GCS - Test"
                ]
            }
        },
        {
            "Google Key Management Service": {
                "name": "Google Key Management Service",
                "file_path": "Integrations/GoogleKeyManagementService/GoogleKeyManagementService.yml",
                "commands": [
                    "google-kms-create-key",
                    "google-kms-symmetric-decrypt",
                    "google-kms-symmetric-encrypt",
                    "google-kms-get-key",
                    "google-kms-update-key",
                    "google-kms-destroy-key",
                    "google-kms-restore-key",
                    "google-kms-disable-key",
                    "google-kms-enable-key",
                    "google-kms-list-keys",
                    "google-kms-asymmetric-encrypt",
                    "google-kms-asymmetric-decrypt",
                    "google-kms-list-key-rings",
                    "google-kms-list-all-keys",
                    "google-kms-get-public-key"
                ],
                "tests": [
                    "Google-KMS-test"
                ]
            }
        },
        {
            "Google Resource Manager": {
                "name": "Google Resource Manager",
                "file_path": "Integrations/integration-GoogleResourceManager.yml",
                "commands": [
                    "grm-create-project",
                    "grm-get-project",
                    "grm-list-projects",
                    "grm-update-project",
                    "grm-search-organizations",
                    "grm-get-organization",
                    "grm-delete-project",
                    "grm-undelete-project"
                ],
                "tests": [
                    "GoogleResourceManager-Test"
                ]
            }
        },
        {
            "Google Vision AI": {
                "name": "Google Vision AI",
                "file_path": "Integrations/GoogleVisionAPI/GoogleVisionAPI.yml",
                "commands": [
                    "google-vision-detect-logos"
                ]
            }
        },
        {
            "google-vault": {
                "name": "google-vault",
                "file_path": "Integrations/GoogleVault/GoogleVault.yml",
                "commands": [
                    "gvault-create-export-mail",
                    "gvault-create-matter",
                    "gvault-create-export-drive",
                    "gvault-matter-update-state",
                    "gvault-create-export-groups",
                    "gvault-create-hold",
                    "gvault-add-heldAccount",
                    "gvault-remove-heldAccount",
                    "gvault-delete-hold",
                    "gvault-list-matters",
                    "gvault-get-matter",
                    "gvault-list-holds",
                    "gvault-export-status",
                    "gvault-download-results",
                    "gvault-get-drive-results",
                    "gvault-get-mail-results",
                    "gvault-get-groups-results"
                ],
                "tests": [
                    "Google-Vault-Generic-Test"
                ]
            }
        },
        {
            "GoogleCloudTranslate": {
                "name": "GoogleCloudTranslate",
                "file_path": "Integrations/GoogleCloudTranslate/GoogleCloudTranslate.yml",
                "commands": [
                    "gct-supported-languages",
                    "gct-translate-text"
                ]
            }
        },
        {
            "GoogleDocs": {
                "name": "GoogleDocs",
                "file_path": "Integrations/GoogleDocs/GoogleDocs.yml",
                "commands": [
                    "google-docs-get-document",
                    "google-docs-create-document",
                    "google-docs-update-document"
                ],
                "tests": [
                    "GoogleDocs-test"
                ]
            }
        },
        {
            "GoogleSafeBrowsing": {
                "name": "GoogleSafeBrowsing",
                "file_path": "Integrations/integration-GoogleSafeBrowsing.yml",
                "commands": [
                    "url"
                ]
            }
        },
        {
            "GRR": {
                "name": "GRR",
                "file_path": "Integrations/integration-GRR.yml",
                "commands": [
                    "grr-set-flows",
                    "grr-get-flows",
                    "grr-get-files",
                    "grr-get-hunts",
                    "grr-get-hunt",
                    "grr-set-hunts",
                    "grr-get-clients",
                    "grr_set_flows",
                    "grr_get_flows",
                    "grr_get_files",
                    "grr_get_hunts",
                    "grr_get_hunt",
                    "grr_set_hunts"
                ],
                "deprecated_commands": [
                    "grr-get-files",
                    "grr_set_flows",
                    "grr_get_flows"
                ]
            }
        },
        {
            "GuardiCore": {
                "name": "GuardiCore",
                "file_path": "Integrations/integration-GuardiCore-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "guardicore-get-incidents",
                    "guardicore-uncommon-domains",
                    "guardicore-unresolved-domains",
                    "guardicore-show-endpoint",
                    "guardicore-dns-requests",
                    "guardicore-search-endpoint",
                    "guardicore-misconfigurations",
                    "guardicore-get-incident",
                    "guardicore-get-incident-iocs",
                    "guardicore-get-incident-events",
                    "guardicore-get-incident-pcap",
                    "guardicore-get-incident-attachments",
                    "guardicore-search-network-log"
                ]
            }
        },
        {
            "GuardiCore": {
                "name": "GuardiCore",
                "file_path": "Integrations/integration-GuardiCore.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "guardicore-get-incidents",
                    "guardicore-uncommon-domains",
                    "guardicore-unresolved-domains",
                    "guardicore-show-endpoint",
                    "guardicore-dns-requests",
                    "guardicore-search-endpoint",
                    "guardicore-misconfigurations",
                    "guardicore-get-incident",
                    "guardicore-get-incident-iocs",
                    "guardicore-get-incident-events",
                    "guardicore-get-incident-pcap",
                    "guardicore-get-incident-attachments",
                    "guardicore-search-network-log"
                ]
            }
        },
        {
            "Guidance Encase Endpoint": {
                "name": "Guidance Encase Endpoint",
                "file_path": "Integrations/integration-Guidance_Encase_Endpoint.yml",
                "commands": [
                    "encase-copyjob",
                    "encase-snapshot",
                    "encase-verifyhash"
                ]
            }
        },
        {
            "HashiCorp Vault": {
                "name": "HashiCorp Vault",
                "file_path": "Integrations/integration-HashiCorp-Vault.yml",
                "commands": [
                    "hashicorp-list-secrets-engines",
                    "hashicorp-list-secrets",
                    "hashicorp-get-secret-metadata",
                    "hashicorp-delete-secret",
                    "hashicorp-undelete-secret",
                    "hashicorp-destroy-secret",
                    "hashicorp-disable-engine",
                    "hashicorp-enable-engine",
                    "hashicorp-list-policies",
                    "hashicorp-get-policy",
                    "hashicorp-seal-vault",
                    "hashicorp-unseal-vault",
                    "hashicorp-configure-engine",
                    "hashicorp-reset-configuration",
                    "hashicorp-create-token"
                ],
                "tests": [
                    "hashicorp_test"
                ]
            }
        },
        {
            "Have I Been Pwned? V2": {
                "name": "Have I Been Pwned? V2",
                "file_path": "Integrations/Pwned-V2/Pwned-V2.yml",
                "commands": [
                    "pwned-email",
                    "pwned-domain",
                    "email",
                    "domain"
                ]
            }
        },
        {
            "HelloWorld": {
                "name": "HelloWorld",
                "file_path": "Packs/HelloWorld/Integrations/HelloWorld/HelloWorld.yml",
                "commands": [
                    "helloworld-say-hello"
                ],
                "pack": "HelloWorld"
            }
        },
        {
            "Hybrid Analysis": {
                "name": "Hybrid Analysis",
                "file_path": "Integrations/integration-HybridAnalysis.yml",
                "fromversion": "3.6.1",
                "commands": [
                    "hybrid-analysis-scan",
                    "hybrid-analysis-submit-sample",
                    "hybrid-analysis-search",
                    "hybrid-analysis-detonate-file",
                    "hybrid-analysis-get-report-status",
                    "hybrid-analysis-quick-scan-url",
                    "hybrid-analysis-submit-url",
                    "hybrid-analysis-list-scanners",
                    "hybrid-analysis-quick-scan-url-results"
                ],
                "tests": [
                    "Detonate File - HybridAnalysis - Test",
                    "HybridAnalysis-Test"
                ]
            }
        },
        {
            "IBM Resilient Systems": {
                "name": "IBM Resilient Systems",
                "file_path": "Integrations/integration-IBM_Resilient_Systems.yml",
                "commands": [
                    "rs-search-incidents",
                    "rs-update-incident",
                    "rs-incidents-get-members",
                    "rs-get-incident",
                    "rs-incidents-update-member",
                    "rs-get-users",
                    "rs-close-incident",
                    "rs-create-incident",
                    "rs-incident-artifacts",
                    "rs-incident-attachments",
                    "rs-related-incidents",
                    "rs-incidents-get-tasks"
                ]
            }
        },
        {
            "icebrg": {
                "name": "icebrg",
                "file_path": "Integrations/integration-ICEBRG.yml",
                "commands": [
                    "icebrg-search-events",
                    "icebrg-get-history",
                    "icebrg-saved-searches",
                    "icebrg-get-reports",
                    "icebrg-get-report-indicators",
                    "icebrg-get-report-assets"
                ],
                "tests": [
                    "Icebrg Test"
                ]
            }
        },
        {
            "iDefense": {
                "name": "iDefense",
                "file_path": "Integrations/integration-iDefense.yml",
                "commands": [
                    "ip",
                    "domain",
                    "url",
                    "idefense-general",
                    "uuid"
                ]
            }
        },
        {
            "illuminate": {
                "name": "illuminate",
                "file_path": "Integrations/illuminate/illuminate.yml",
                "commands": [
                    "domain",
                    "email",
                    "ip",
                    "file",
                    "illuminate-enrich-string",
                    "illuminate-enrich-ipv6",
                    "illuminate-enrich-mutex",
                    "illuminate-enrich-http-request",
                    "url"
                ]
            }
        },
        {
            "Image OCR": {
                "name": "Image OCR",
                "file_path": "Integrations/ImageOCR/ImageOCR.yml",
                "fromversion": "4.0.0",
                "commands": [
                    "image-ocr-list-languages",
                    "image-ocr-extract-text"
                ]
            }
        },
        {
            "Imperva Skyfence": {
                "name": "Imperva Skyfence",
                "file_path": "Integrations/integration-Imperva_Skyfence.yml",
                "commands": [
                    "imp-sf-list-endpoints",
                    "imp-sf-set-endpoint-status"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "Incapsula": {
                "name": "Incapsula",
                "file_path": "Integrations/integration-Incapsula.yml",
                "commands": [
                    "incap-add-managed-account",
                    "incap-list-managed-accounts",
                    "incap-add-subaccount",
                    "incap-list-subaccounts",
                    "incap-get-account-status",
                    "incap-modify-account-configuration",
                    "incap-set-account-log-level",
                    "incap-test-account-s3-connection",
                    "incap-test-account-sftp-connection",
                    "incap-set-account-s3-log-storage",
                    "incap-set-account-sftp-log-storage",
                    "incap-set-account-default-log-storage",
                    "incap-get-account-login-token",
                    "incap-delete-managed-account",
                    "incap-delete-subaccount",
                    "incap-get-account-audit-events",
                    "incap-set-account-default-data-storage-region",
                    "incap-get-account-default-data-storage-region",
                    "incap-add-site",
                    "incap-get-site-status",
                    "incap-get-domain-approver-email",
                    "incap-modify-site-configuration",
                    "incap-modify-site-log-level",
                    "incap-modify-site-tls-support",
                    "incap-modify-site-scurity-config",
                    "incap-modify-site-acl-config",
                    "incap-modify-site-wl-config",
                    "incap-delete-site",
                    "incap-list-sites",
                    "incap-get-site-report",
                    "incap-get-site-html-injection-rules",
                    "incap-add-site-html-injection-rule",
                    "incap-delete-site-html-injection-rule",
                    "incap-create-new-csr",
                    "incap-upload-certificate",
                    "incap-remove-custom-integration",
                    "incap-move-site",
                    "incap-check-compliance",
                    "incap-set-site-data-storage-region",
                    "incap-get-site-data-storage-region",
                    "incap-set-site-data-storage-region-geo-override",
                    "incap-get-site-data-storage-region-geo-override",
                    "incap-purge-site-cache",
                    "incap-modify-cache-mode",
                    "incap-purge-resources",
                    "incap-modify-caching-rules",
                    "incap-set-advanced-caching-settings",
                    "incap-purge-hostname-from-cache",
                    "incap-site-get-xray-link",
                    "incap-list-site-rule-revisions",
                    "incap-add-site-rule",
                    "incap-edit-site-rule",
                    "incap-enable-site-rule",
                    "incap-delete-site-rule",
                    "incap-list-site-rules",
                    "incap-revert-site-rule",
                    "incap-set-site-rule-priority",
                    "incap-add-site-datacenter",
                    "incap-edit-site-datacenter",
                    "incap-delete-site-datacenter",
                    "incap-list-site-datacenters",
                    "incap-add-site-datacenter-server",
                    "incap-edit-site-datacenter-server",
                    "incap-delete-site-datacenter-server",
                    "incap-get-statistics",
                    "incap-get-visits",
                    "incap-upload-public-key",
                    "incap-change-logs-collector-configuration",
                    "incap-get-infra-protection-statistics",
                    "incap-get-infra-protection-events",
                    "incap-add-login-protect",
                    "incap-edit-login-protect",
                    "incap-get-login-protect",
                    "incap-remove-login-protect",
                    "incap-send-sms-to-user",
                    "incap-modify-login-protect",
                    "incap-configure-app",
                    "incap-get-ip-ranges",
                    "incap-get-texts",
                    "incap-get-geo-info",
                    "incap-get-app-info"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Indeni": {
                "name": "Indeni",
                "file_path": "Packs/Indeni/Integrations/Indeni/Indeni.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "indeni-get-device-info",
                    "indeni-get-alert-info",
                    "indeni-get-alert-summary",
                    "indeni-post-note",
                    "indeni-archive-issue",
                    "indeni-unarchive-issue",
                    "indeni-get-notes"
                ],
                "pack": "Indeni"
            }
        },
        {
            "InfoArmor VigilanteATI": {
                "name": "InfoArmor VigilanteATI",
                "file_path": "Integrations/integration-InfoArmor_VigilanteATI.yml",
                "commands": [
                    "vigilante-query-infected-host-data",
                    "vigilante-get-vulnerable-host-data",
                    "vigilante-query-ecrime-db",
                    "vigilante-search-leaks",
                    "vigilante-get-leak",
                    "vigilante-query-accounts",
                    "vigilante-query-domains",
                    "vigilante-watchlist-add-accounts",
                    "vigilante-watchlist-remove-accounts",
                    "vigilante-get-watchlist",
                    "vigilante-account-usage-info"
                ],
                "tests": [
                    "InfoArmorVigilanteATITest"
                ]
            }
        },
        {
            "Infoblox": {
                "name": "Infoblox",
                "file_path": "Integrations/Infoblox/Infoblox.yml",
                "commands": [
                    "infoblox-get-ip",
                    "infoblox-search-related-objects-by-ip",
                    "infoblox-list-response-policy-zone-rules",
                    "infoblox-list-response-policy-zones",
                    "infoblox-create-response-policy-zone",
                    "infoblox-create-rpz-rule",
                    "infoblox-create-a-substitute-record-rule",
                    "infoblox-create-aaaa-substitute-record-rule",
                    "infoblox-create-mx-substitute-record-rule",
                    "infoblox-create-naptr-substitute-record-rule",
                    "infoblox-create-ptr-substitute-record-rule",
                    "infoblox-create-srv-substitute-record-rule",
                    "infoblox-create-txt-substitute-record-rule",
                    "infoblox-create-ipv4-substitute-record-rule",
                    "infoblox-create-ipv6-substitute-record-rule",
                    "infoblox-enable-rule",
                    "infoblox-disable-rule",
                    "infoblox-get-object-fields",
                    "infoblox-search-rule",
                    "infoblox-delete-rpz-rule",
                    "infoblox-delete-response-policy-zone"
                ]
            }
        },
        {
            "Intezer": {
                "name": "Intezer",
                "file_path": "Integrations/integration-Intezer.yml",
                "commands": [
                    "file",
                    "intezer-upload"
                ],
                "tests": [
                    "No test - integration was deprecated, and doesn't need to be tested"
                ],
                "deprecated": true
            }
        },
        {
            "Intezer v2": {
                "name": "Intezer v2",
                "file_path": "Integrations/IntezerV2/IntezerV2.yml",
                "commands": [
                    "intezer-analyze-by-hash",
                    "intezer-analyze-by-file",
                    "intezer-get-analysis-result"
                ],
                "tests": [
                    "Intezer Testing v2"
                ]
            }
        },
        {
            "IntSights": {
                "name": "IntSights",
                "file_path": "Integrations/IntSight/IntSight.yml",
                "commands": [
                    "intsights-get-alert-image",
                    "intsights-get-alert-activities",
                    "intsights-assign-alert",
                    "intsights-unassign-alert",
                    "intsights-send-mail",
                    "intsights-ask-the-analyst",
                    "intsights-add-tag-to-alert",
                    "intsights-remove-tag-from-alert",
                    "intsights-add-comment-to-alert",
                    "intsights-update-alert-severity",
                    "intsights-get-alert-by-id",
                    "intsights-get-ioc-by-value",
                    "intsights-get-iocs",
                    "intsights-get-alerts",
                    "intsights-alert-takedown-request",
                    "intsights-get-alert-takedown-status",
                    "intsights-update-ioc-blocklist-status",
                    "intsights-get-ioc-blocklist-status",
                    "intsights-close-alert",
                    "intsights-mssp-get-sub-accounts"
                ],
                "tests": [
                    "IntSights Test"
                ]
            }
        },
        {
            "ipinfo": {
                "name": "ipinfo",
                "file_path": "Packs/ipinfo/Integrations/integration-Ipinfo.yml",
                "commands": [
                    "ip",
                    "ipinfo_field"
                ],
                "tests": [
                    "IPInfoTest"
                ],
                "pack": "ipinfo"
            }
        },
        {
            "Ipstack": {
                "name": "Ipstack",
                "file_path": "Packs/Ipstack/Integrations/Ipstack/Ipstack.yml",
                "commands": [
                    "ip"
                ],
                "tests": [
                    "Ipstack_Test"
                ],
                "pack": "Ipstack"
            }
        },
        {
            "IronDefense": {
                "name": "IronDefense",
                "file_path": "Integrations/IronDefense/IronDefense.yml",
                "commands": [
                    "irondefense-rate-alert",
                    "irondefense-comment-alert",
                    "irondefense-set-alert-status",
                    "irondefense-report-observed-bad-activity"
                ],
                "tests": [
                    "IronDefenseTest"
                ]
            }
        },
        {
            "IsItPhishing": {
                "name": "IsItPhishing",
                "file_path": "Integrations/integration-IsItPhishing.yml",
                "commands": [
                    "url"
                ]
            }
        },
        {
            "jamf": {
                "name": "jamf",
                "file_path": "Integrations/integration-jamf.yml",
                "commands": [
                    "jamf-get-computers",
                    "jamf-get-computers-match"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Jask": {
                "name": "Jask",
                "file_path": "Integrations/Jask/Jask.yml",
                "commands": [
                    "jask-get-insight-details",
                    "jask-get-insight-comments",
                    "jask-get-signal-details",
                    "jask-get-entity-details",
                    "jask-get-related-entities",
                    "jask-get-whitelisted-entities",
                    "jask-search-insights",
                    "jask-search-signals",
                    "jask-search-entities"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "jira": {
                "name": "jira",
                "file_path": "Integrations/integration-jira_2.5.yml",
                "toversion": "2.5.0",
                "commands": [
                    "jira-issue-query",
                    "jira-get-issue",
                    "jira-create-issue",
                    "jira-issue-upload-file",
                    "jira-issue-add-comment",
                    "jira-issue-add-link"
                ]
            }
        },
        {
            "jira": {
                "name": "jira",
                "file_path": "Integrations/integration-jira.yml",
                "fromversion": "2.6.0",
                "commands": [
                    "jira-issue-query",
                    "jira-get-issue",
                    "jira-create-issue",
                    "jira-issue-upload-file",
                    "jira-issue-add-comment",
                    "jira-issue-add-link",
                    "jira-edit-issue",
                    "jira-get-comments",
                    "jira-delete-issue"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "jira-issue-query",
                    "jira-get-issue",
                    "jira-create-issue",
                    "jira-issue-upload-file",
                    "jira-issue-add-comment",
                    "jira-issue-add-link",
                    "jira-edit-issue",
                    "jira-get-comments",
                    "jira-delete-issue"
                ]
            }
        },
        {
            "jira-v2": {
                "name": "jira-v2",
                "file_path": "Integrations/JiraV2/JiraV2.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "jira-issue-query",
                    "jira-get-issue",
                    "jira-create-issue",
                    "jira-issue-upload-file",
                    "jira-issue-add-comment",
                    "jira-issue-add-link",
                    "jira-edit-issue",
                    "jira-get-comments",
                    "jira-delete-issue",
                    "jira-get-id-offset"
                ],
                "tests": [
                    "Jira-v2-Test"
                ]
            }
        },
        {
            "Joe Security": {
                "name": "Joe Security",
                "file_path": "Integrations/JoeSecurity/JoeSecurity.yml",
                "commands": [
                    "joe-is-online",
                    "joe-analysis-submit-url",
                    "joe-detonate-url",
                    "joe-analysis-info",
                    "joe-list-analysis",
                    "joe-analysis-submit-sample",
                    "joe-download-report",
                    "joe-detonate-file",
                    "joe-search",
                    "joe-download-sample"
                ],
                "tests": [
                    "JoeSecurityTestPlaybook",
                    "JoeSecurityTestDetonation"
                ],
                "deprecated_commands": [
                    "joe-detonate-url",
                    "joe-detonate-file"
                ]
            }
        },
        {
            "JsonWhoIs": {
                "name": "JsonWhoIs",
                "file_path": "Integrations/JsonWhoIs/JsonWhoIs.yml",
                "commands": [
                    "whois"
                ],
                "tests": [
                    "JsonWhoIs-Test"
                ]
            }
        },
        {
            "Kafka V2": {
                "name": "Kafka V2",
                "file_path": "Integrations/Kafka_V2/Kafka_V2.yml",
                "commands": [
                    "kafka-print-topics",
                    "kafka-publish-msg",
                    "kafka-consume-msg",
                    "kafka-fetch-partitions"
                ],
                "tests": [
                    "No Test - Can not connect to instance from remote"
                ]
            }
        },
        {
            "Kenna": {
                "name": "Kenna",
                "file_path": "Integrations/integration-Kenna.yml",
                "commands": [
                    "kenna-search-vulnerabilities",
                    "kenna-get-connectors",
                    "kenna-run-connector",
                    "kenna-search-fixes",
                    "kenna-update-asset",
                    "kenna-update-vulnerability"
                ],
                "deprecated": true
            }
        },
        {
            "Kennav2": {
                "name": "Kennav2",
                "file_path": "Integrations/KennaV2/KennaV2.yml",
                "commands": [
                    "kenna-search-vulnerabilities",
                    "kenna-run-connector",
                    "kenna-search-fixes",
                    "kenna-update-asset",
                    "kenna-update-vulnerability",
                    "kenna-get-connectors",
                    "kenna-search-assets",
                    "kenna-get-asset-vulnerabilities",
                    "kenna-add-tag",
                    "kenna-delete-tag"
                ]
            }
        },
        {
            "Koodous": {
                "name": "Koodous",
                "file_path": "Integrations/integration-Koodous.yml",
                "commands": [
                    "k-check-hash"
                ]
            }
        },
        {
            "Lastline": {
                "name": "Lastline",
                "file_path": "Integrations/integration-Lastline.yml",
                "commands": [
                    "lastline-get",
                    "url",
                    "file",
                    "lastline-upload",
                    "lastline-upload-url",
                    "lastline-upload-file",
                    "lastline-get-report",
                    "lastline-get-task-list",
                    "lastline-check-status"
                ],
                "tests": [
                    "detonate_file_-_generic_test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "lastline-get",
                    "url",
                    "lastline-upload"
                ]
            }
        },
        {
            "Lastline v2": {
                "name": "Lastline v2",
                "file_path": "Integrations/Lastline_v2/Lastline_v2.yml",
                "commands": [
                    "file",
                    "lastline-upload-url",
                    "lastline-upload-file",
                    "lastline-get-report",
                    "lastline-get-task-list",
                    "lastline-check-status"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "LightCyber Magna": {
                "name": "LightCyber Magna",
                "file_path": "Integrations/integration-LightCyberMagna.yml",
                "commands": [
                    "lcm-version",
                    "lcm-entities",
                    "lcm-indicators",
                    "lcm-hosts",
                    "lcm-hostbyip",
                    "lcm-hostbyname",
                    "lcm-pathfinder-scan",
                    "lcm-sandbox-report",
                    "lcm-daily-report",
                    "lcm-host-artifacts",
                    "lcm-resolve-host",
                    "lcm-unresolve-host",
                    "lcm-set-host-comment",
                    "lcm-acknowledge-host",
                    "lcm-resolve-user",
                    "lcm-unresolve-user",
                    "lcm-set-user-comment",
                    "lcm-acknowledge-user",
                    "lcm-domain",
                    "lcm-executablebymd5",
                    "lcm-executablebyname",
                    "lcm-indicatorsforentity",
                    "lcm-host-opened-ports",
                    "lcm-host-suspicious-artifacts",
                    "lcm-host-processes",
                    "lcm-host-loaded-modules",
                    "lcm-host-processes-internet-connections",
                    "lcm-host-autoruns"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "lcm-version",
                    "lcm-entities",
                    "lcm-indicators",
                    "lcm-hosts",
                    "lcm-hostbyip",
                    "lcm-hostbyname",
                    "lcm-pathfinder-scan",
                    "lcm-sandbox-report",
                    "lcm-daily-report",
                    "lcm-host-artifacts",
                    "lcm-resolve-host",
                    "lcm-unresolve-host",
                    "lcm-set-host-comment",
                    "lcm-acknowledge-host",
                    "lcm-resolve-user",
                    "lcm-unresolve-user",
                    "lcm-set-user-comment",
                    "lcm-acknowledge-user",
                    "lcm-domain",
                    "lcm-executablebymd5",
                    "lcm-executablebyname",
                    "lcm-indicatorsforentity",
                    "lcm-host-opened-ports",
                    "lcm-host-suspicious-artifacts",
                    "lcm-host-processes",
                    "lcm-host-loaded-modules",
                    "lcm-host-processes-internet-connections",
                    "lcm-host-autoruns"
                ]
            }
        },
        {
            "Lockpath KeyLight": {
                "name": "Lockpath KeyLight",
                "file_path": "Integrations/integration-KeyLight-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "kl-get-component-list",
                    "kl-get-component",
                    "kl-get-component-by-alias",
                    "kl-get-field-list",
                    "kl-get-field",
                    "kl-get-record-count",
                    "kl-get-record",
                    "kl-get-records",
                    "kl-delete-record",
                    "kl-create-record",
                    "kl-update-record",
                    "kl-get-detail-record",
                    "kl-get-lookup-report-column-fields",
                    "kl-get-detail-records",
                    "kl-get-record-attachments",
                    "kl-get-record-attachment",
                    "kl-delete-record-attachments"
                ]
            }
        },
        {
            "Lockpath KeyLight": {
                "name": "Lockpath KeyLight",
                "file_path": "Integrations/integration-KeyLight.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "kl-get-component-list",
                    "kl-get-component",
                    "kl-get-component-by-alias",
                    "kl-get-field-list",
                    "kl-get-field",
                    "kl-get-record-count",
                    "kl-get-record",
                    "kl-get-records",
                    "kl-delete-record",
                    "kl-create-record",
                    "kl-update-record",
                    "kl-get-detail-record",
                    "kl-get-lookup-report-column-fields",
                    "kl-get-detail-records",
                    "kl-get-record-attachments",
                    "kl-get-record-attachment",
                    "kl-delete-record-attachments"
                ],
                "tests": [
                    "No test - Deprecated. Use Lockpath Keylight v2"
                ],
                "deprecated_commands": [
                    "kl-get-component-list",
                    "kl-get-component",
                    "kl-get-component-by-alias",
                    "kl-get-field-list",
                    "kl-get-field",
                    "kl-get-record-count",
                    "kl-get-record",
                    "kl-get-records",
                    "kl-delete-record",
                    "kl-create-record",
                    "kl-update-record",
                    "kl-get-detail-record",
                    "kl-get-lookup-report-column-fields",
                    "kl-get-detail-records",
                    "kl-get-record-attachments",
                    "kl-get-record-attachment",
                    "kl-delete-record-attachments"
                ]
            }
        },
        {
            "Lockpath KeyLight v2": {
                "name": "Lockpath KeyLight v2",
                "file_path": "Integrations/Lockpath_KeyLight_v2/Lockpath_KeyLight_v2.yml",
                "commands": [
                    "kl-get-component",
                    "kl-get-field-list",
                    "kl-get-field",
                    "kl-get-record",
                    "kl-get-records",
                    "kl-get-record-count",
                    "kl-get-record-attachments",
                    "kl-get-record-attachment",
                    "kl-delete-record",
                    "kl-delete-record-attachment",
                    "kl-get-lookup-report-column-fields",
                    "kl-create-record",
                    "kl-update-record"
                ]
            }
        },
        {
            "LogRhythm": {
                "name": "LogRhythm",
                "file_path": "Integrations/integration-LogRhythm.yml",
                "commands": [
                    "lr-add-alarm-comments",
                    "lr-get-alarm-by-id",
                    "lr-get-alarm-events-by-id",
                    "lr-get-alarm-history-by-id",
                    "lr-update-alarm-status",
                    "lr-get-alarms",
                    "lr-get-hosts-by-entity-id",
                    "lr-add-host",
                    "lr-execute-query"
                ],
                "tests": [
                    "LogRhythm-Test-Playbook"
                ]
            }
        },
        {
            "LogRhythmRest": {
                "name": "LogRhythmRest",
                "file_path": "Integrations/LogRhythmRest/LogRhythmRest.yml",
                "commands": [
                    "lr-execute-query",
                    "lr-get-hosts-by-entity",
                    "lr-add-host",
                    "lr-update-host-status",
                    "lr-get-persons",
                    "lr-get-networks",
                    "lr-get-hosts",
                    "lr-get-alarm-data",
                    "lr-get-alarm-events"
                ],
                "tests": [
                    "LogRhythm REST test"
                ]
            }
        },
        {
            "Looker": {
                "name": "Looker",
                "file_path": "Integrations/Looker/Looker.yml",
                "commands": [
                    "looker-run-look",
                    "looker-search-looks",
                    "looker-run-inline-query",
                    "looker-create-look"
                ],
                "tests": [
                    "Test-Looker"
                ]
            }
        },
        {
            "Luminate": {
                "name": "Luminate",
                "file_path": "Integrations/integration-Luminate.yml",
                "fromversion": "0.0.0",
                "commands": [
                    "lum-block-user",
                    "lum-unblock-user",
                    "lum-destroy-user-session",
                    "lum-get-http-access-logs",
                    "lum-get-ssh-access-logs"
                ],
                "tests": [
                    "Luminate-TestPlaybook"
                ]
            }
        },
        {
            "Mail Sender (New)": {
                "name": "Mail Sender (New)",
                "file_path": "Integrations/MailSenderNew/MailSenderNew.yml",
                "commands": [
                    "send-mail"
                ],
                "tests": [
                    "Mail Sender (New) Test"
                ]
            }
        },
        {
            "MailListener - POP3 Beta": {
                "name": "MailListener - POP3 Beta",
                "file_path": "Beta_Integrations/MailListener_-_POP3/MailListener_-_POP3.yml",
                "tests": [
                    "MailListener-POP3 - Test"
                ]
            }
        },
        {
            "Malware Domain List Active IPs Feed": {
                "name": "Malware Domain List Active IPs Feed",
                "file_path": "Packs/FeedMalwareDomainList/Integrations/FeedMalwareDomainList/FeedMalwareDomainList.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "malwaredomainlist-get-indicators"
                ],
                "pack": "FeedMalwareDomainList"
            }
        },
        {
            "malwr": {
                "name": "malwr",
                "file_path": "Integrations/integration-Malwr.yml",
                "fromversion": "3.0.0",
                "commands": [
                    "malwr-submit",
                    "malwr-status",
                    "malwr-result",
                    "malwr-detonate"
                ]
            }
        },
        {
            "MaxMind GeoIP2": {
                "name": "MaxMind GeoIP2",
                "file_path": "Integrations/MaxMind_GeoIP2/MaxMind_GeoIP2.yml",
                "commands": [
                    "ip"
                ],
                "tests": [
                    "MaxMind Test"
                ]
            }
        },
        {
            "McAfee Active Response": {
                "name": "McAfee Active Response",
                "file_path": "Integrations/integration-McAfee-MAR.yml",
                "commands": [
                    "mar-search",
                    "mar-collectors-list",
                    "mar-search-multiple",
                    "mar-search-services",
                    "mar-search-processes",
                    "mar-search-win-registry",
                    "mar-search-files",
                    "mar-search-usb-connected-storage-devices",
                    "mar-search-user-profiles",
                    "mar-search-scheduled-tasks",
                    "mar-search-host-info"
                ]
            }
        },
        {
            "McAfee Active Response": {
                "name": "McAfee Active Response",
                "file_path": "Packs/McAfee-MAR/Integrations/McAfee-MAR.yml",
                "commands": [
                    "mar-search",
                    "mar-collectors-list",
                    "mar-search-multiple",
                    "mar-search-services",
                    "mar-search-processes",
                    "mar-search-win-registry",
                    "mar-search-files",
                    "mar-search-usb-connected-storage-devices",
                    "mar-search-user-profiles",
                    "mar-search-scheduled-tasks",
                    "mar-search-host-info"
                ],
                "pack": "McAfee-MAR"
            }
        },
        {
            "McAfee Advanced Threat Defense": {
                "name": "McAfee Advanced Threat Defense",
                "file_path": "Integrations/McAfee_Advanced_Threat_Defense/McAfee_Advanced_Threat_Defense.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "atd-file-upload",
                    "atd-get-task-ids",
                    "atd-get-report",
                    "atd-list-analyzer-profiles",
                    "atd-list-user",
                    "atd-login",
                    "detonate-file",
                    "detonate-url",
                    "atd-check-status"
                ],
                "tests": [
                    "Test Playbook McAfee ATD"
                ]
            }
        },
        {
            "McAfee Advanced Threat Defense": {
                "name": "McAfee Advanced Threat Defense",
                "file_path": "Integrations/integration-ATD-old.yml",
                "toversion": "3.1.0",
                "fromversion": "2.0.4",
                "commands": [
                    "atd-file-upload",
                    "atd-get-task-ids",
                    "atd-check-status",
                    "atd-get-report",
                    "atd-list-analyzer-profiles",
                    "atd-list-user",
                    "atd-login"
                ]
            }
        },
        {
            "McAfee DXL": {
                "name": "McAfee DXL",
                "file_path": "Integrations/McAfee_DXL/McAfee_DXL.yml",
                "commands": [
                    "dxl-send-event",
                    "dxl-push-ip",
                    "dxl-push-url",
                    "dxl-push-domain",
                    "dxl-push-hash"
                ],
                "tests": [
                    "McAfee DXL - Test"
                ]
            }
        },
        {
            "McAfee ESM-v10": {
                "name": "McAfee ESM-v10",
                "file_path": "Integrations/McAfee_ESM-v10/McAfee_ESM-v10.yml",
                "commands": [
                    "esm-fetch-fields",
                    "esm-search",
                    "esm-fetch-alarms",
                    "esm-get-case-list",
                    "esm-add-case",
                    "esm-edit-case",
                    "esm-get-case-statuses",
                    "esm-edit-case-status",
                    "esm-get-case-detail",
                    "esm-get-case-event-list",
                    "esm-add-case-status",
                    "esm-delete-case-status",
                    "esm-get-organization-list",
                    "esm-get-user-list",
                    "esm-acknowledge-alarms",
                    "esm-unacknowledge-alarms",
                    "esm-delete-alarms",
                    "esm-get-alarm-event-details",
                    "esm-list-alarm-events"
                ]
            }
        },
        {
            "McAfee NSM": {
                "name": "McAfee NSM",
                "file_path": "Integrations/integration-McAfeeNSM.yml",
                "commands": [
                    "nsm-get-sensors",
                    "nsm-get-domains",
                    "nsm-get-alerts",
                    "nsm-update-alerts",
                    "nsm-get-alert-details",
                    "nsm-get-ips-policies",
                    "nsm-get-ips-policy-details",
                    "nsm-get-attacks"
                ]
            }
        },
        {
            "McAfee Threat Intelligence Exchange": {
                "name": "McAfee Threat Intelligence Exchange",
                "file_path": "Integrations/McAfee-TIE/McAfee-TIE.yml",
                "commands": [
                    "file",
                    "tie-set-file-reputation",
                    "tie-file-references"
                ],
                "tests": [
                    "McAfee-TIE Test"
                ]
            }
        },
        {
            "McAfee Web Gateway": {
                "name": "McAfee Web Gateway",
                "file_path": "Integrations/integration-McAfeeWebGateway.yml",
                "commands": [
                    "mwg-get-available-lists",
                    "mwg-get-list",
                    "mwg-get-list-entry",
                    "mwg-insert-entry",
                    "mwg-delete-entry"
                ],
                "tests": [
                    "McAfeeWebGatewayTest"
                ]
            }
        },
        {
            "McAfeeDAM": {
                "name": "McAfeeDAM",
                "file_path": "Integrations/integration-mcafeeDam.yml",
                "commands": [
                    "dam-get-alert-by-id",
                    "dam-get-latest-by-rule"
                ]
            }
        },
        {
            "Microsoft Graph": {
                "name": "Microsoft Graph",
                "file_path": "Integrations/MicrosoftGraphSecurity/MicrosoftGraphSecurity.yml",
                "commands": [
                    "msg-search-alerts",
                    "msg-get-alert-details",
                    "msg-update-alert",
                    "msg-get-users",
                    "msg-get-user"
                ],
                "tests": [
                    "Microsoft Graph Test"
                ]
            }
        },
        {
            "Microsoft Graph Calendar": {
                "name": "Microsoft Graph Calendar",
                "file_path": "Integrations/MicrosoftGraphCalendar/MicrosoftGraphCalendar.yml",
                "commands": [
                    "msgraph-calendar-list-calendars",
                    "msgraph-calendar-get-calendar",
                    "msgraph-calendar-list-events",
                    "msgraph-calendar-get-event",
                    "msgraph-calendar-create-event",
                    "msgraph-calendar-update-event",
                    "msgraph-calendar-delete-event"
                ],
                "tests": [
                    "Microsoft Graph Calendar - Test"
                ]
            }
        },
        {
            "Microsoft Graph Groups": {
                "name": "Microsoft Graph Groups",
                "file_path": "Integrations/MicrosoftGraphGroups/MicrosoftGraphGroups.yml",
                "commands": [
                    "msgraph-groups-list-groups",
                    "msgraph-groups-get-group",
                    "msgraph-groups-create-group",
                    "msgraph-groups-delete-group",
                    "msgraph-groups-list-members",
                    "msgraph-groups-add-member",
                    "msgraph-groups-remove-member"
                ],
                "tests": [
                    "Microsoft Graph Groups - Test"
                ]
            }
        },
        {
            "Microsoft Graph Mail Single User": {
                "name": "Microsoft Graph Mail Single User",
                "file_path": "Integrations/MicrosoftGraphListener/MicrosoftGraphListener.yml",
                "commands": [
                    "msgraph-mail-create-draft",
                    "send-mail",
                    "msgraph-mail-reply-to",
                    "msgraph-mail-send-draft",
                    "msgraph-mail-test"
                ],
                "tests": [
                    "No test - manual test playbook-Microsoft_Graph_Mail_Sender_test is available in NonCircleTests folder"
                ]
            }
        },
        {
            "Microsoft Graph User": {
                "name": "Microsoft Graph User",
                "file_path": "Integrations/MicrosoftGraphUser/MicrosoftGraphUser.yml",
                "commands": [
                    "msgraph-user-terminate-session",
                    "msgraph-user-unblock",
                    "msgraph-user-update",
                    "msgraph-user-delete",
                    "msgraph-user-create",
                    "msgraph-user-get-delta",
                    "msgraph-user-get",
                    "msgraph-user-list"
                ],
                "tests": [
                    "Microsoft Graph - Test"
                ],
                "deprecated_commands": [
                    "msgraph-user-get-delta"
                ]
            }
        },
        {
            "Microsoft Teams": {
                "name": "Microsoft Teams",
                "file_path": "Integrations/MicrosoftTeams/MicrosoftTeams.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "send-notification",
                    "mirror-investigation",
                    "close-channel",
                    "microsoft-teams-integration-health",
                    "create-channel",
                    "add-user-to-channel"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Microsoft_Graph_Files": {
                "name": "Microsoft_Graph_Files",
                "file_path": "Integrations/MicrosoftGraphFiles/MicrosoftGraphFiles.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "msgraph-delete-file",
                    "msgraph-upload-new-file",
                    "msgraph-replace-existing-file",
                    "msgraph-create-new-folder",
                    "msgraph-list-drives-in-site",
                    "msgraph-list-drive-content",
                    "msgraph-list-sharepoint-sites",
                    "msgraph-download-file"
                ],
                "tests": [
                    "test_MsGraphFiles"
                ]
            }
        },
        {
            "MicrosoftGraphMail": {
                "name": "MicrosoftGraphMail",
                "file_path": "Integrations/MicrosoftGraphMail/MicrosoftGraphMail.yml",
                "commands": [
                    "msgraph-mail-list-emails",
                    "msgraph-mail-get-email",
                    "msgraph-mail-delete-email",
                    "msgraph-mail-list-attachments",
                    "msgraph-mail-get-attachment",
                    "msgraph-mail-list-folders",
                    "msgraph-mail-list-child-folders",
                    "msgraph-mail-create-folder",
                    "msgraph-mail-update-folder",
                    "msgraph-mail-delete-folder",
                    "msgraph-mail-move-email",
                    "msgraph-mail-get-email-as-eml",
                    "msgraph-mail-create-draft",
                    "send-mail",
                    "msgraph-mail-reply-to",
                    "msgraph-mail-send-draft"
                ],
                "tests": [
                    "MicrosoftGraphMail-Test"
                ]
            }
        },
        {
            "Mimecast": {
                "name": "Mimecast",
                "file_path": "Integrations/integration-Mimecast.yml",
                "fromversion": "1.6.2",
                "commands": [
                    "mimecast-query"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "mimecast-query"
                ]
            }
        },
        {
            "Mimecast Authentication": {
                "name": "Mimecast Authentication",
                "file_path": "Integrations/integration-Mimecast-Auth.yml",
                "commands": [
                    "mimecast-login",
                    "mimecast-discover",
                    "mimecast-refresh-token"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "mimecast-login",
                    "mimecast-discover",
                    "mimecast-refresh-token"
                ]
            }
        },
        {
            "MimecastV2": {
                "name": "MimecastV2",
                "file_path": "Integrations/MimecastV2/MimecastV2.yml",
                "commands": [
                    "mimecast-query",
                    "mimecast-list-blocked-sender-policies",
                    "mimecast-get-policy",
                    "mimecast-create-policy",
                    "mimecast-delete-policy",
                    "mimecast-manage-sender",
                    "mimecast-list-managed-url",
                    "mimecast-create-managed-url",
                    "mimecast-list-messages",
                    "mimecast-get-attachment-logs",
                    "mimecast-get-url-logs",
                    "mimecast-get-impersonation-logs",
                    "mimecast-url-decode",
                    "mimecast-discover",
                    "mimecast-refresh-token",
                    "mimecast-login",
                    "mimecast-get-message",
                    "mimecast-download-attachments",
                    "mimecast-find-groups",
                    "mimecast-get-group-members",
                    "mimecast-add-group-member",
                    "mimecast-remove-group-member",
                    "mimecast-create-group",
                    "mimecast-update-group",
                    "mimecast-create-remediation-incident",
                    "mimecast-get-remediation-incident",
                    "mimecast-search-file-hash",
                    "mimecast-update-policy"
                ],
                "tests": [
                    "Mimecast test"
                ]
            }
        },
        {
            "Minerva Labs Anti-Evasion Platform": {
                "name": "Minerva Labs Anti-Evasion Platform",
                "file_path": "Integrations/integration-MinervaLabsAntiEvasionPlatform.yml",
                "commands": [
                    "minerva-add-exclusion",
                    "minerva-add-vaccine",
                    "minerva-search-process",
                    "minerva-search-endpoint",
                    "minerva-get-groups",
                    "minerva-get-vaccines",
                    "minerva-delete-vaccine",
                    "minerva-get-exclusions",
                    "minerva-delete-exclusion",
                    "minerva-unarchive-events"
                ],
                "tests": [
                    "Minerva Test playbook"
                ]
            }
        },
        {
            "MISP": {
                "name": "MISP",
                "file_path": "Integrations/integration-MISP.yml",
                "commands": [
                    "internal-misp-upload-sample",
                    "misp-search",
                    "file",
                    "url",
                    "ip",
                    "internal-misp-download-sample",
                    "internal-misp-create-event",
                    "internal-misp-add-attribute"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "internal-misp-upload-sample",
                    "misp-search",
                    "file",
                    "url",
                    "ip",
                    "internal-misp-download-sample",
                    "internal-misp-create-event",
                    "internal-misp-add-attribute"
                ]
            }
        },
        {
            "MISP V2": {
                "name": "MISP V2",
                "file_path": "Integrations/MISP_V2/MISP_V2.yml",
                "commands": [
                    "misp-search",
                    "file",
                    "url",
                    "ip",
                    "internal-misp-create-event",
                    "misp-create-event",
                    "internal-misp-add-attribute",
                    "misp-download-sample",
                    "misp-add-attribute",
                    "misp-upload-sample",
                    "misp-delete-event",
                    "misp-add-tag",
                    "misp-add-sighting",
                    "misp-add-events-from-feed",
                    "misp-add-email-object",
                    "misp-add-domain-object",
                    "misp-add-url-object",
                    "misp-add-object",
                    "misp-add-ip-object"
                ],
                "tests": [
                    "MISP V2 Test"
                ],
                "deprecated_commands": [
                    "internal-misp-create-event",
                    "internal-misp-add-attribute"
                ]
            }
        },
        {
            "Moloch": {
                "name": "Moloch",
                "file_path": "Integrations/integration-Moloch.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "moloch_connections_json",
                    "moloch_connections_csv",
                    "moloch_files_json",
                    "moloch_sessions_json",
                    "moloch_sessions_csv",
                    "moloch_sessions_pcap",
                    "moloch_spigraph_json",
                    "moloch_spiview_json",
                    "moloch_unique_json"
                ]
            }
        },
        {
            "Moloch": {
                "name": "Moloch",
                "file_path": "Integrations/integration-Moloch-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "moloch_connections_json",
                    "moloch_connections_csv",
                    "moloch_files_json",
                    "moloch_sessions_json",
                    "moloch_sessions_csv",
                    "moloch_sessions_pcap",
                    "moloch_spigraph_json",
                    "moloch_spiview_json",
                    "moloch_unique_json"
                ]
            }
        },
        {
            "MxToolBox": {
                "name": "MxToolBox",
                "file_path": "Integrations/integration-MxToolBox.yml",
                "commands": [
                    "mxtoolbox"
                ]
            }
        },
        {
            "Nessus": {
                "name": "Nessus",
                "file_path": "Integrations/integration-nessus.yml",
                "commands": [
                    "nessus-list-scans",
                    "scans-list",
                    "nessus-launch-scan",
                    "scan-launch",
                    "nessus-scan-details",
                    "scan-details",
                    "scan-host-details",
                    "nessus-scan-host-details",
                    "nessus-scan-export",
                    "scan-export",
                    "scan-report-download",
                    "nessus-scan-report-download",
                    "scan-create",
                    "nessus-scan-create",
                    "nessus-get-scans-editors",
                    "scan-export-status",
                    "nessus-scan-export-status",
                    "nessus-scan-status"
                ],
                "deprecated_commands": [
                    "scans-list",
                    "scan-launch",
                    "scan-details",
                    "scan-host-details",
                    "scan-export",
                    "scan-report-download",
                    "scan-create",
                    "scan-export-status"
                ]
            }
        },
        {
            "Netcraft": {
                "name": "Netcraft",
                "file_path": "Integrations/Netcraft/Netcraft.yml",
                "commands": [
                    "netcraft-report-attack",
                    "netcraft-get-takedown-info",
                    "netcraft-get-takedown-notes",
                    "netcraft-add-notes-to-takedown",
                    "netcraft-escalate-takedown"
                ]
            }
        },
        {
            "Netskope": {
                "name": "Netskope",
                "file_path": "Integrations/integration-Netskope.yml",
                "commands": [
                    "netskope-events",
                    "netskope-alerts"
                ],
                "tests": [
                    "Netskope Test"
                ]
            }
        },
        {
            "nmap": {
                "name": "nmap",
                "file_path": "Integrations/integration-nmap_4.5.yml",
                "toversion": "4.5.9",
                "commands": [
                    "nmap-scan"
                ]
            }
        },
        {
            "nmap": {
                "name": "nmap",
                "file_path": "Integrations/Nmap/Nmap.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "nmap-scan"
                ]
            }
        },
        {
            "Office 365 Feed": {
                "name": "Office 365 Feed",
                "file_path": "Packs/FeedOffice365/Integrations/FeedOffice365/FeedOffice365.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "office365-get-indicators"
                ],
                "tests": [
                    "Office365_Feed_Test"
                ],
                "pack": "FeedOffice365"
            }
        },
        {
            "okta": {
                "name": "okta",
                "file_path": "Integrations/integration-Okta.yml",
                "fromversion": "3.6.0",
                "commands": [
                    "okta-unlock-user",
                    "okta-deactivate-user",
                    "okta-activate-user",
                    "okta-suspend-user",
                    "okta-unsuspend-user",
                    "okta-get-user-factors",
                    "okta-verify-push-factor",
                    "okta-reset-factor",
                    "okta-get-groups",
                    "okta-set-password",
                    "okta-search",
                    "okta-get-user",
                    "okta-create-user",
                    "okta-update-user",
                    "okta-get-failed-logins",
                    "okta-get-group-assignments",
                    "okta-get-application-assignments",
                    "okta-get-application-authentication",
                    "okta-get-logs",
                    "okta-add-to-group",
                    "okta-remove-from-group",
                    "okta-list-groups",
                    "okta-get-group-members"
                ]
            }
        },
        {
            "okta": {
                "name": "okta",
                "file_path": "Integrations/integration-Okta_V350.yml",
                "toversion": "3.5.1",
                "fromversion": "3.1.0",
                "commands": [
                    "okta-unlock-user",
                    "okta-deactivate-user",
                    "okta-activate-user",
                    "okta-get-groups",
                    "okta-set-password",
                    "okta-search",
                    "okta-get-user",
                    "okta-create-user",
                    "okta-update-user"
                ]
            }
        },
        {
            "OnboardingIntegration": {
                "name": "OnboardingIntegration",
                "file_path": "Integrations/OnboardingIntegration/OnboardingIntegration.yml",
                "commands": [
                    "demo-ip",
                    "demo-url",
                    "demo-domain",
                    "demo-file",
                    "demo-email"
                ],
                "tests": [
                    "No Tests"
                ]
            }
        },
        {
            "OpenLDAP": {
                "name": "OpenLDAP",
                "file_path": "Beta_Integrations/OpenLDAP/OpenLDAP.yml",
                "commands": [
                    "ad-authenticate",
                    "ad-groups",
                    "ad-authenticate-and-roles"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "OpenPhish": {
                "name": "OpenPhish",
                "file_path": "Integrations/integration-OpenPhish.yml",
                "commands": [
                    "url",
                    "openphish-reload",
                    "openphish-status"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "OpsGenie": {
                "name": "OpsGenie",
                "file_path": "Integrations/integration-OpsGenie.yml",
                "commands": [
                    "opsgenie-get-on-call",
                    "opsgenie-get-user",
                    "opsgenie-get-schedules",
                    "opsgenie-get-schedule-timeline"
                ]
            }
        },
        {
            "OPSWAT-Metadefender": {
                "name": "OPSWAT-Metadefender",
                "file_path": "Integrations/integration-opswat-metadefender.yml",
                "commands": [
                    "opswat-hash",
                    "opswat-scan-file",
                    "opswat-scan-result"
                ],
                "tests": [
                    "No tests - no instance"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "opswat-hash",
                    "opswat-scan-file",
                    "opswat-scan-result"
                ]
            }
        },
        {
            "OPSWAT-Metadefender V2": {
                "name": "OPSWAT-Metadefender V2",
                "file_path": "Integrations/integration-opswat-metadefender-v2.yml",
                "commands": [
                    "opswat-scan-file",
                    "opswat-hash",
                    "opswat-scan-result"
                ],
                "tests": [
                    "No tests - no instance"
                ]
            }
        },
        {
            "OTRS": {
                "name": "OTRS",
                "file_path": "Integrations/integration-OTRS.yml",
                "fromversion": "4.1.0",
                "commands": [
                    "otrs-get-ticket",
                    "otrs-search-ticket",
                    "otrs-create-ticket",
                    "otrs-update-ticket",
                    "otrs-close-ticket"
                ],
                "tests": [
                    "OTRS Test"
                ]
            }
        },
        {
            "PacketMail": {
                "name": "PacketMail",
                "file_path": "Integrations/integration-PacketMail.yml",
                "commands": [
                    "packetmail-ip"
                ]
            }
        },
        {
            "Packetsled": {
                "name": "Packetsled",
                "file_path": "Integrations/integration-Packetsled.yml",
                "commands": [
                    "packetsled-get-incidents",
                    "packetsled-sensors",
                    "packetsled-get-flows",
                    "packetsled-get-files",
                    "packetsled-get-pcaps",
                    "packetsled-get-events"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "PagerDuty v2": {
                "name": "PagerDuty v2",
                "file_path": "Integrations/PagerDuty/PagerDuty.yml",
                "commands": [
                    "PagerDuty-get-all-schedules",
                    "PagerDuty-get-users-on-call",
                    "PagerDuty-get-users-on-call-now",
                    "PagerDuty-incidents",
                    "PagerDuty-submit-event",
                    "PagerDuty-get-contact-methods",
                    "PagerDuty-get-users-notification",
                    "PagerDuty-resolve-event",
                    "PagerDuty-acknowledge-event",
                    "PagerDuty-get-incident-data",
                    "PagerDuty-get-service-keys"
                ],
                "tests": [
                    "PagerDuty Test"
                ]
            }
        },
        {
            "Palo Alto Minemeld": {
                "name": "Palo Alto Minemeld",
                "file_path": "Integrations/PaloAlto_MineMeld/PaloAlto_MineMeld.yml",
                "commands": [
                    "minemeld-add-to-miner",
                    "minemeld-remove-from-miner",
                    "minemeld-retrieve-miner",
                    "minemeld-get-indicator-from-miner",
                    "ip",
                    "file",
                    "domain",
                    "url",
                    "minemeld-get-all-miners-names"
                ],
                "tests": [
                    "minemeld_test"
                ]
            }
        },
        {
            "Palo Alto Networks Cortex": {
                "name": "Palo Alto Networks Cortex",
                "file_path": "Integrations/PaloAltoNetworksCortex/PaloAltoNetworksCortex.yml",
                "fromversion": "4.1.0",
                "commands": [
                    "cortex-query-logs",
                    "cortex-get-critical-threat-logs",
                    "cortex-get-social-applications",
                    "cortex-search-by-file-hash",
                    "cortex-query-traffic-logs",
                    "cortex-query-threat-logs",
                    "cortex-query-traps-logs",
                    "cortex-query-analytics-logs"
                ],
                "tests": [
                    "Palo Alto Networks Cortex Test"
                ]
            }
        },
        {
            "Palo Alto Traps ESM (Beta)": {
                "name": "Palo Alto Traps ESM (Beta)",
                "file_path": "Beta_Integrations/PaloAlto_TrapsESM_Beta/PaloAlto_TrapsESM_Beta.yml",
                "commands": [
                    "traps-esm-hash-detail",
                    "traps-esm-override-hash-verdict"
                ]
            }
        },
        {
            "palo_alto_networks_pan_os_edl_management": {
                "name": "palo_alto_networks_pan_os_edl_management",
                "file_path": "Integrations/PaloAltoNetworks_PAN_OS_EDL_Management/PaloAltoNetworks_PAN_OS_EDL_Management.yml",
                "commands": [
                    "pan-os-edl-get-external-file",
                    "pan-os-edl-search-external-file",
                    "pan-os-edl-update",
                    "pan-os-edl-update-from-external-file",
                    "pan-os-edl-delete-external-file",
                    "pan-os-edl-print-internal-list",
                    "pan-os-edl-dump-internal-list",
                    "pan-os-edl-list-internal-lists",
                    "pan-os-edl-search-internal-list",
                    "pan-os-edl-compare",
                    "pan-os-edl-get-external-file-metadata",
                    "pan-os-edl-update-internal-list",
                    "pan-os-edl-update-external-file"
                ],
                "tests": [
                    "PAN OS EDL Management - Test"
                ]
            }
        },
        {
            "PaloAltoNetworks_PrismaCloudCompute": {
                "name": "PaloAltoNetworks_PrismaCloudCompute",
                "file_path": "Packs/PrismaCloudCompute/Integrations/PaloAltoNetworks_PrismaCloudCompute/PaloAltoNetworks_PrismaCloudCompute.yml",
                "tests": [
                    "No test"
                ],
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "Panorama": {
                "name": "Panorama",
                "file_path": "Integrations/Panorama/Panorama.yml",
                "fromversion": "3.0.0",
                "commands": [
                    "panorama",
                    "panorama-commit",
                    "panorama-push-to-device-group",
                    "panorama-list-addresses",
                    "panorama-get-address",
                    "panorama-create-address",
                    "panorama-delete-address",
                    "panorama-list-address-groups",
                    "panorama-get-address-group",
                    "panorama-create-address-group",
                    "panorama-delete-address-group",
                    "panorama-edit-address-group",
                    "panorama-list-services",
                    "panorama-get-service",
                    "panorama-create-service",
                    "panorama-delete-service",
                    "panorama-list-service-groups",
                    "panorama-get-service-group",
                    "panorama-create-service-group",
                    "panorama-delete-service-group",
                    "panorama-edit-service-group",
                    "panorama-get-custom-url-category",
                    "panorama-create-custom-url-category",
                    "panorama-delete-custom-url-category",
                    "panorama-edit-custom-url-category",
                    "panorama-get-url-category",
                    "panorama-get-url-category-from-cloud",
                    "panorama-get-url-category-from-host",
                    "panorama-get-url-filter",
                    "panorama-create-url-filter",
                    "panorama-edit-url-filter",
                    "panorama-delete-url-filter",
                    "panorama-list-edls",
                    "panorama-get-edl",
                    "panorama-create-edl",
                    "panorama-edit-edl",
                    "panorama-delete-edl",
                    "panorama-refresh-edl",
                    "panorama-create-rule",
                    "panorama-custom-block-rule",
                    "panorama-move-rule",
                    "panorama-edit-rule",
                    "panorama-delete-rule",
                    "panorama-list-applications",
                    "panorama-commit-status",
                    "panorama-push-status",
                    "panorama-get-pcap",
                    "panorama-list-pcaps",
                    "panorama-register-ip-tag",
                    "panorama-unregister-ip-tag",
                    "panorama-register-user-tag",
                    "panorama-unregister-user-tag",
                    "panorama-query-traffic-logs",
                    "panorama-check-traffic-logs-status",
                    "panorama-get-traffic-logs",
                    "panorama-list-rules",
                    "panorama-query-logs",
                    "panorama-check-logs-status",
                    "panorama-get-logs",
                    "panorama-security-policy-match",
                    "panorama-list-static-routes",
                    "panorama-get-static-route",
                    "panorama-add-static-route",
                    "panorama-delete-static-route",
                    "panorama-show-device-version",
                    "panorama-download-latest-content-update",
                    "panorama-content-update-download-status",
                    "panorama-install-latest-content-update",
                    "panorama-content-update-install-status",
                    "panorama-check-latest-panos-software",
                    "panorama-download-panos-version",
                    "panorama-download-panos-status",
                    "panorama-install-panos-version",
                    "panorama-install-panos-status",
                    "panorama-device-reboot"
                ],
                "tests": [
                    "palo_alto_firewall_test_pb",
                    "palo_alto_panorama_test_pb"
                ],
                "deprecated_commands": [
                    "panorama-query-traffic-logs",
                    "panorama-check-traffic-logs-status",
                    "panorama-get-traffic-logs"
                ]
            }
        },
        {
            "PassiveTotal": {
                "name": "PassiveTotal",
                "file_path": "Integrations/integration-PassiveTotal.yml",
                "commands": [
                    "pt-get-subdomains",
                    "pt-account",
                    "pt-monitors",
                    "pt-passive-dns",
                    "pt-passive-unique",
                    "pt-dns-keyword",
                    "pt-enrichment",
                    "pt-malware",
                    "url",
                    "domain",
                    "ip",
                    "pt-osint",
                    "pt-whois",
                    "pt-whois-keyword",
                    "pt-whois-search",
                    "pt-get-components",
                    "pt-get-pairs",
                    "pt-ssl-cert",
                    "pt-ssl-cert-history",
                    "pt-ssl-cert-keyword",
                    "pt-ssl-cert-search"
                ]
            }
        },
        {
            "Pentera": {
                "name": "Pentera",
                "file_path": "Packs/Pcysys/Integrations/Pcysys/Pcysys.yml",
                "commands": [
                    "pentera-run-template-by-name",
                    "pentera-get-task-run-status",
                    "pentera-get-task-run-full-action-report"
                ],
                "pack": "Pcysys"
            }
        },
        {
            "PerceptionPoint": {
                "name": "PerceptionPoint",
                "file_path": "Integrations/PerceptionPoint/PerceptionPoint.yml",
                "commands": [
                    "pp-release-email"
                ],
                "tests": [
                    "PerceptionPoint Test"
                ]
            }
        },
        {
            "Perch": {
                "name": "Perch",
                "file_path": "Integrations/Perch/Perch.yml",
                "commands": [
                    "perch-search-alerts",
                    "perch-get-community",
                    "perch-list-communities",
                    "perch-create-indicator"
                ],
                "tests": [
                    "Perch-Test"
                ]
            }
        },
        {
            "Phish.AI": {
                "name": "Phish.AI",
                "file_path": "Integrations/integration-PhishAI.yml",
                "fromversion": "4.0.0",
                "commands": [
                    "phish-ai-scan-url",
                    "phish-ai-check-status",
                    "phish-ai-dispute-url"
                ],
                "tests": [
                    "PhishAi-Test"
                ]
            }
        },
        {
            "PhishLabs IOC": {
                "name": "PhishLabs IOC",
                "file_path": "Integrations/PhishLabsIOC/PhishLabsIOC.yml",
                "commands": [
                    "phishlabs-global-feed",
                    "phishlabs-get-incident-indicators"
                ],
                "tests": [
                    "PhishLabsIOC TestPlaybook"
                ]
            }
        },
        {
            "PhishLabs IOC DRP": {
                "name": "PhishLabs IOC DRP",
                "file_path": "Integrations/PhishLabsIOC_DRP/PhishLabsIOC_DRP.yml",
                "commands": [
                    "phishlabs-ioc-drp-get-cases",
                    "phishlabs-ioc-drp-get-case-by-id",
                    "phishlabs-ioc-drp-get-open-cases",
                    "phishlabs-ioc-drp-get-closed-cases"
                ],
                "tests": [
                    "PhishlabsIOC_DRP-Test"
                ]
            }
        },
        {
            "PhishLabs IOC EIR": {
                "name": "PhishLabs IOC EIR",
                "file_path": "Integrations/PhishLabsIOC_EIR/PhishLabsIOC_EIR.yml",
                "commands": [
                    "phishlabs-ioc-eir-get-incidents",
                    "phishlabs-ioc-eir-get-incident-by-id"
                ],
                "tests": [
                    "PhishlabsIOC_EIR-Test"
                ]
            }
        },
        {
            "Phishme Intelligence": {
                "name": "Phishme Intelligence",
                "file_path": "Integrations/integration-PhishMe.yml",
                "commands": [
                    "url",
                    "file",
                    "ip",
                    "phishme-search",
                    "email"
                ],
                "tests": [
                    "No test - Replaced by Cofense Integration"
                ],
                "deprecated": true
            }
        },
        {
            "PhishTank": {
                "name": "PhishTank",
                "file_path": "Integrations/integration-PhishTank.yml",
                "commands": [
                    "url",
                    "phishtank-reload",
                    "phishtank-status"
                ],
                "tests": [
                    "PhishTank Testing"
                ]
            }
        },
        {
            "Pipl": {
                "name": "Pipl",
                "file_path": "Integrations/integration-Pipl.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "pipl-search",
                    "email"
                ]
            }
        },
        {
            "Plain Text Feed": {
                "name": "Plain Text Feed",
                "file_path": "Packs/FeedPlainText/Integrations/FeedPlainText/FeedPlainText.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "plaintext-get-indicators"
                ],
                "tests": [
                    "PlainText Feed - Test"
                ],
                "pack": "FeedPlainText"
            }
        },
        {
            "PolySwarm": {
                "name": "PolySwarm",
                "file_path": "Integrations/PolySwarm/PolySwarm.yml",
                "commands": [
                    "polyswarm-get-report",
                    "file",
                    "ip",
                    "url",
                    "domain",
                    "url-scan",
                    "file-rescan",
                    "get-file",
                    "file-scan"
                ]
            }
        },
        {
            "PostgreSQL": {
                "name": "PostgreSQL",
                "file_path": "Integrations/integration-PostgreSQL.yml",
                "commands": [
                    "pgsql-query"
                ]
            }
        },
        {
            "Preempt": {
                "name": "Preempt",
                "file_path": "Integrations/integration-Preempt.yml",
                "commands": [
                    "preempt-add-to-watch-list",
                    "preempt-remove-from-watch-list",
                    "preempt-get-activities",
                    "preempt-get-user-endpoints",
                    "preempt-get-alerts"
                ]
            }
        },
        {
            "Proofpoint Server Protection": {
                "name": "Proofpoint Server Protection",
                "file_path": "Beta_Integrations/ProofpointServerProtection/ProofpointServerProtection.yml",
                "commands": [
                    "proofpoint-download-email",
                    "proofpoint-quarantine-messages",
                    "proofpoint-smart-search",
                    "proofpoint-quarantine-folders",
                    "proofpoint-release-email",
                    "proofpoint-add-to-blocked-senders-list",
                    "proofpoint-add-to-safe-senders-list",
                    "proofpoint-remove-from-blocked-senders-list",
                    "proofpoint-remove-from-safe-senders-list"
                ]
            }
        },
        {
            "Proofpoint TAP": {
                "name": "Proofpoint TAP",
                "file_path": "Integrations/integration-ProofpointTAP.yml",
                "commands": [
                    "proofpoint-get-events"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "proofpoint-get-events"
                ]
            }
        },
        {
            "Proofpoint TAP v2": {
                "name": "Proofpoint TAP v2",
                "file_path": "Integrations/ProofpointTAP_v2/ProofpointTAP_v2.yml",
                "commands": [
                    "proofpoint-get-events",
                    "proofpoint-get-forensics"
                ],
                "tests": [
                    "No test - no instance"
                ]
            }
        },
        {
            "Proofpoint Threat Response": {
                "name": "Proofpoint Threat Response",
                "file_path": "Beta_Integrations/ProofpointThreatResponse/ProofpointThreatResponse.yml",
                "commands": [
                    "proofpoint-tr-get-list",
                    "proofpoint-tr-add-to-list",
                    "proofpoint-tr-block-ip",
                    "proofpoint-tr-block-domain",
                    "proofpoint-tr-search-indicator",
                    "proofpoint-tr-delete-indicator",
                    "proofpoint-tr-block-url",
                    "proofpoint-tr-block-hash"
                ],
                "tests": [
                    "No test - beta_integration"
                ]
            }
        },
        {
            "ProofpointFeed": {
                "name": "ProofpointFeed",
                "file_path": "Packs/FeedProofpoint/Integrations/FeedProofpoint/FeedProofpoint.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "proofpoint-get-indicators"
                ],
                "tests": [
                    "TestProofpointFeed"
                ],
                "pack": "FeedProofpoint"
            }
        },
        {
            "ProtectWise": {
                "name": "ProtectWise",
                "file_path": "Integrations/integration-ProtectWise-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "sensors",
                    "protectwise-show-sensors",
                    "search",
                    "protectwise-search-events",
                    "pw-event-get",
                    "protectwise-event-info",
                    "observation-search",
                    "protectwise-search-observations",
                    "pw-observation-get",
                    "protectwise-observation-info",
                    "event-pcap-download",
                    "protectwise-event-pcap-download",
                    "event-pcap-info",
                    "protectwise-event-pcap-info",
                    "observation-pcap-download",
                    "protectwise-observation-pcap-download",
                    "observation-pcap-info",
                    "protectwise-observation-pcap-info",
                    "get-token"
                ],
                "deprecated_commands": [
                    "sensors",
                    "search",
                    "pw-event-get",
                    "observation-search",
                    "pw-observation-get",
                    "event-pcap-download",
                    "event-pcap-info",
                    "observation-pcap-download",
                    "observation-pcap-info",
                    "get-token"
                ]
            }
        },
        {
            "ProtectWise": {
                "name": "ProtectWise",
                "file_path": "Integrations/integration-ProtectWise.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "sensors",
                    "protectwise-show-sensors",
                    "search",
                    "protectwise-search-events",
                    "pw-event-get",
                    "protectwise-event-info",
                    "observation-search",
                    "protectwise-search-observations",
                    "pw-observation-get",
                    "protectwise-observation-info",
                    "event-pcap-download",
                    "protectwise-event-pcap-download",
                    "event-pcap-info",
                    "protectwise-event-pcap-info",
                    "observation-pcap-download",
                    "protectwise-observation-pcap-download",
                    "observation-pcap-info",
                    "protectwise-observation-pcap-info",
                    "get-token"
                ],
                "tests": [
                    "Protectwise-Test"
                ],
                "deprecated_commands": [
                    "sensors",
                    "search",
                    "pw-event-get",
                    "observation-search",
                    "pw-observation-get",
                    "event-pcap-download",
                    "event-pcap-info",
                    "observation-pcap-download",
                    "observation-pcap-info",
                    "get-token"
                ]
            }
        },
        {
            "Pwned": {
                "name": "Pwned",
                "file_path": "Integrations/integration-Pwned.yml",
                "commands": [
                    "pwned-email",
                    "pwned-domain",
                    "email",
                    "domain"
                ],
                "tests": [
                    "Pwned test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "pwned-email",
                    "pwned-domain",
                    "email",
                    "domain"
                ]
            }
        },
        {
            "QRadar": {
                "name": "QRadar",
                "file_path": "Integrations/QRadar_5_4_9/QRadar_5_4_9.yml",
                "toversion": "5.4.9",
                "commands": [
                    "qradar-offenses",
                    "qradar-offense-by-id",
                    "qradar-searches",
                    "qradar-get-search",
                    "qradar-get-search-results",
                    "qradar-update-offense",
                    "qradar-get-assets",
                    "qradar-get-asset-by-id",
                    "qr-searches",
                    "qr-get-search",
                    "qr-get-search-results",
                    "qr-update-offense",
                    "qr-get-assets",
                    "qr-offenses",
                    "qradar-get-closing-reasons",
                    "qradar-create-note",
                    "qradar-get-note",
                    "qradar-get-reference-by-name",
                    "qradar-create-reference-set",
                    "qradar-delete-reference-set",
                    "qradar-create-reference-set-value",
                    "qradar-update-reference-set-value",
                    "qradar-delete-reference-set-value",
                    "qradar-get-domains",
                    "qradar-get-domain-by-id"
                ],
                "tests": [
                    "test_Qradar"
                ],
                "deprecated_commands": [
                    "qr-searches",
                    "qr-get-search",
                    "qr-get-search-results",
                    "qr-update-offense",
                    "qr-get-assets",
                    "qr-offenses"
                ]
            }
        },
        {
            "QRadar": {
                "name": "QRadar",
                "file_path": "Integrations/QRadar/QRadar.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "qradar-offenses",
                    "qradar-offense-by-id",
                    "qradar-searches",
                    "qradar-get-search",
                    "qradar-get-search-results",
                    "qradar-update-offense",
                    "qradar-get-assets",
                    "qradar-get-asset-by-id",
                    "qr-searches",
                    "qr-get-search",
                    "qr-get-search-results",
                    "qr-update-offense",
                    "qr-get-assets",
                    "qr-offenses",
                    "qradar-get-closing-reasons",
                    "qradar-create-note",
                    "qradar-get-note",
                    "qradar-get-reference-by-name",
                    "qradar-create-reference-set",
                    "qradar-delete-reference-set",
                    "qradar-create-reference-set-value",
                    "qradar-update-reference-set-value",
                    "qradar-delete-reference-set-value",
                    "qradar-get-domains",
                    "qradar-get-domain-by-id",
                    "qradar-upload-indicators"
                ],
                "tests": [
                    "test_Qradar"
                ],
                "deprecated_commands": [
                    "qr-searches",
                    "qr-get-search",
                    "qr-get-search-results",
                    "qr-update-offense",
                    "qr-get-assets",
                    "qr-offenses"
                ]
            }
        },
        {
            "Qualys": {
                "name": "Qualys",
                "file_path": "Integrations/integration-qualys-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "qualys-report-list",
                    "qualys-report-cancel",
                    "qualys-report-delete",
                    "qualys-scorecard-launch",
                    "qualys-report-fetch",
                    "qualys-vm-scan-list",
                    "qualys-vm-scan-launch",
                    "qualys-vm-scan-action",
                    "qualys-scap-scan-list",
                    "qualys-pc-scan-launch",
                    "qualys-pc-scan-manage",
                    "qualys-schedule-scan-list",
                    "qualys-ip-list",
                    "qualys-ip-add",
                    "qualys-ip-update",
                    "qualys-virtual-host-list",
                    "qualys-virtual-host-manage",
                    "qualys-host-excluded-list",
                    "qualys-host-excluded-manage",
                    "qualys-scheduled-report-list",
                    "qualys-scheduled-report-launch",
                    "qualys-host-list",
                    "qualys-pc-scan-list",
                    "qualys-report-template-list",
                    "qualys-report-launch-map",
                    "qualys-report-launch-scan-based-findings",
                    "qualys-report-launch-host-based-findings",
                    "qualys-report-launch-patch",
                    "qualys-report-launch-remediation",
                    "qualys-report-launch-compliance",
                    "qualys-report-launch-compliance-policy",
                    "qualys-vulnerability-list",
                    "qualys-group-list",
                    "qualys-vm-scan-fetch",
                    "qualys-pc-scan-fetch"
                ]
            }
        },
        {
            "Qualys": {
                "name": "Qualys",
                "file_path": "Integrations/integration-qualys.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "qualys-report-list",
                    "qualys-report-cancel",
                    "qualys-report-delete",
                    "qualys-scorecard-launch",
                    "qualys-report-fetch",
                    "qualys-vm-scan-list",
                    "qualys-vm-scan-launch",
                    "qualys-vm-scan-action",
                    "qualys-scap-scan-list",
                    "qualys-pc-scan-launch",
                    "qualys-pc-scan-manage",
                    "qualys-schedule-scan-list",
                    "qualys-ip-list",
                    "qualys-ip-add",
                    "qualys-ip-update",
                    "qualys-virtual-host-list",
                    "qualys-virtual-host-manage",
                    "qualys-host-excluded-list",
                    "qualys-host-excluded-manage",
                    "qualys-scheduled-report-list",
                    "qualys-scheduled-report-launch",
                    "qualys-host-list",
                    "qualys-pc-scan-list",
                    "qualys-report-template-list",
                    "qualys-report-launch-map",
                    "qualys-report-launch-scan-based-findings",
                    "qualys-report-launch-host-based-findings",
                    "qualys-report-launch-patch",
                    "qualys-report-launch-remediation",
                    "qualys-report-launch-compliance",
                    "qualys-report-launch-compliance-policy",
                    "qualys-vulnerability-list",
                    "qualys-group-list",
                    "qualys-vm-scan-fetch",
                    "qualys-pc-scan-fetch"
                ]
            }
        },
        {
            "Rapid7 Nexpose": {
                "name": "Rapid7 Nexpose",
                "file_path": "Integrations/Rapid7_Nexpose/Rapid7_Nexpose.yml",
                "fromversion": "3.6.0",
                "commands": [
                    "nexpose-get-asset",
                    "nexpose-get-assets",
                    "nexpose-search-assets",
                    "nexpose-get-scan",
                    "nexpose-get-asset-vulnerability",
                    "nexpose-create-site",
                    "nexpose-delete-site",
                    "nexpose-get-sites",
                    "nexpose-get-report-templates",
                    "nexpose-create-assets-report",
                    "nexpose-create-sites-report",
                    "nexpose-create-scan-report",
                    "nexpose-start-site-scan",
                    "nexpose-start-assets-scan",
                    "nexpose-stop-scan",
                    "nexpose-pause-scan",
                    "nexpose-resume-scan",
                    "nexpose-get-scans"
                ],
                "tests": [
                    "nexpose_test"
                ]
            }
        },
        {
            "Rasterize": {
                "name": "Rasterize",
                "file_path": "Packs/rasterize/Integrations/rasterize/rasterize.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "rasterize",
                    "rasterize-email",
                    "rasterize-image",
                    "rasterize-pdf"
                ],
                "tests": [
                    "Rasterize Test"
                ],
                "pack": "rasterize"
            }
        },
        {
            "Recorded Future": {
                "name": "Recorded Future",
                "file_path": "Integrations/Recorded_Future/Recorded_Future.yml",
                "commands": [
                    "domain",
                    "ip",
                    "file",
                    "recorded-future-get-related-entities",
                    "url",
                    "recorded-future-get-threats-hash",
                    "recorded-future-get-threats-ip",
                    "recorded-future-get-threats-url",
                    "recorded-future-get-threats-domain",
                    "recorded-future-get-threats-vulnerabilities",
                    "recorded-future-get-domain-risklist",
                    "recorded-future-get-url-risklist",
                    "recorded-future-get-ip-risklist",
                    "recorded-future-get-vulnerability-risklist",
                    "recorded-future-get-hash-risklist",
                    "recorded-future-get-domain-riskrules",
                    "recorded-future-get-hash-riskrules",
                    "recorded-future-get-ip-riskrules",
                    "recorded-future-get-url-riskrules",
                    "recorded-future-get-vulnerability-riskrules",
                    "recorded-future-get-alert-rules",
                    "recorded-future-get-alerts"
                ],
                "tests": [
                    "Recorded Future Test"
                ]
            }
        },
        {
            "Recorded Future Feed": {
                "name": "Recorded Future Feed",
                "file_path": "Packs/FeedRecordedFuture/Integrations/FeedRecordedFuture/FeedRecordedFuture.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "rf-feed-get-indicators",
                    "rf-feed-get-risk-rules"
                ],
                "tests": [
                    "RecordedFutureFeed - Test"
                ],
                "pack": "FeedRecordedFuture"
            }
        },
        {
            "RedCanary": {
                "name": "RedCanary",
                "file_path": "Integrations/RedCanary/RedCanary.yml",
                "commands": [
                    "redcanary-acknowledge-detection",
                    "redcanary-update-remediation-state",
                    "redcanary-list-detections",
                    "redcanary-list-endpoints",
                    "redcanary-execute-playbook",
                    "redcanary-get-endpoint",
                    "redcanary-get-endpoint-detections",
                    "redcanary-get-detection"
                ],
                "tests": [
                    "RedCanaryTest"
                ]
            }
        },
        {
            "RedLock": {
                "name": "RedLock",
                "file_path": "Integrations/RedLock/RedLock.yml",
                "commands": [
                    "redlock-search-alerts",
                    "redlock-get-alert-details",
                    "redlock-dismiss-alerts",
                    "redlock-reopen-alerts",
                    "redlock-list-alert-filters"
                ]
            }
        },
        {
            "Remedy AR": {
                "name": "Remedy AR",
                "file_path": "Integrations/integration-Remedy_AR.yml",
                "commands": [
                    "remedy-get-server-details"
                ]
            }
        },
        {
            "Remedy On-Demand": {
                "name": "Remedy On-Demand",
                "file_path": "Integrations/integration-Remedy-On-Demand.yml",
                "commands": [
                    "remedy-incident-create",
                    "remedy-get-incident",
                    "remedy-fetch-incidents",
                    "remedy-incident-update"
                ]
            }
        },
        {
            "remedy_sr_beta": {
                "name": "remedy_sr_beta",
                "file_path": "Beta_Integrations/remedy_SR/remedy_SR.yml",
                "commands": [
                    "remedy-get-ticket",
                    "remedy-create-ticket",
                    "remedy-update-ticket"
                ],
                "tests": [
                    "No Test"
                ]
            }
        },
        {
            "ReversingLabs A1000": {
                "name": "ReversingLabs A1000",
                "file_path": "Integrations/integration-ReversingLabs_A1000.yml",
                "commands": [
                    "file",
                    "reversinglabs-upload",
                    "reversinglabs-delete",
                    "reversinglabs-extracted-files",
                    "reversinglabs-download",
                    "reversinglabs-analyze",
                    "reversinglabs-download-unpacked"
                ]
            }
        },
        {
            "ReversingLabs Titanium Cloud": {
                "name": "ReversingLabs Titanium Cloud",
                "file_path": "Integrations/integration-ReversingLabs_Titanium_Cloud.yml",
                "commands": [
                    "file"
                ]
            }
        },
        {
            "RiskSense": {
                "name": "RiskSense",
                "file_path": "Integrations/RiskSense/RiskSense.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "risksense-get-hosts",
                    "risksense-get-host-detail",
                    "risksense-get-unique-cves",
                    "risksense-get-unique-open-findings",
                    "risksense-get-host-findings",
                    "risksense-get-apps",
                    "risksense-get-host-finding-detail",
                    "risksense-get-app-detail"
                ],
                "tests": [
                    "RiskSense Get Apps - Test",
                    "RiskSense Get Host Detail - Test",
                    "RiskSense Get Host Finding Detail - Test",
                    "RiskSense Get Hosts - Test",
                    "RiskSense Get Host Findings - Test",
                    "RiskSense Get Unique Cves - Test",
                    "RiskSense Get Unique Open Findings - Test",
                    "RiskSense Get Apps Detail - Test"
                ]
            }
        },
        {
            "RSA Archer": {
                "name": "RSA Archer",
                "file_path": "Integrations/integration-ArcherRSA.yml",
                "commands": [
                    "archer-create-record",
                    "archer-update-record",
                    "archer-get-record",
                    "archer-search-applications",
                    "archer-search-records",
                    "archer-get-application-fields",
                    "archer-delete-record",
                    "archer-get-field",
                    "archer-get-reports",
                    "archer-execute-statistic-search-by-report",
                    "archer-get-search-options-by-guid",
                    "archer-search-records-by-report",
                    "archer-get-mapping-by-level",
                    "archer-manually-fetch-incident",
                    "archer-get-file",
                    "archer-upload-file",
                    "archer-add-to-detailed-analysis",
                    "archer-get-user-id",
                    "archer-get-valuelist",
                    "archer-reset-cache"
                ],
                "tests": [
                    "Archer-Test-Playbook"
                ]
            }
        },
        {
            "RSA NetWitness Endpoint": {
                "name": "RSA NetWitness Endpoint",
                "file_path": "Integrations/integration-RSANetWitnessEndpoint.yml",
                "commands": [
                    "netwitness-get-machines",
                    "netwitness-get-machine",
                    "netwitness-get-machine-iocs",
                    "netwitness-get-machine-modules",
                    "netwitness-get-machine-module",
                    "netwitness-blacklist-ips",
                    "netwitness-blacklist-domains"
                ],
                "tests": [
                    "NetWitness Endpoint Test"
                ]
            }
        },
        {
            "RSA NetWitness Packets and Logs": {
                "name": "RSA NetWitness Packets and Logs",
                "file_path": "Integrations/integration-RsaNetWitnessPacketsAndLogs-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "netwitness-msearch",
                    "netwitness-search",
                    "netwitness-query",
                    "netwitness-packets",
                    "nw-sdk-session",
                    "nw-sdk-cancel",
                    "nw-sdk-query",
                    "nw-sdk-validate",
                    "nw-sdk-aliases",
                    "nw-sdk-content",
                    "nw-sdk-ls",
                    "nw-sdk-count",
                    "nw-sdk-timeline",
                    "nw-sdk-mon",
                    "nw-sdk-stopMon",
                    "nw-sdk-msearch",
                    "nw-sdk-precache",
                    "nw-sdk-delCache",
                    "nw-sdk-info",
                    "nw-sdk-search",
                    "nw-sdk-language",
                    "nw-sdk-packets",
                    "nw-sdk-summary",
                    "nw-sdk-reconfig",
                    "nw-sdk-values",
                    "nw-sdk-xforms",
                    "nw-database-info",
                    "nw-database-count",
                    "nw-database-dbState",
                    "nw-database-dump",
                    "nw-database-hashInfo",
                    "nw-database-resetMax",
                    "nw-database-optimize",
                    "nw-database-reconfig",
                    "nw-database-ls",
                    "nw-database-timeRoll",
                    "nw-database-stopMon",
                    "nw-database-manifest",
                    "nw-database-wipe",
                    "nw-database-sizeRoll",
                    "nw-database-mon",
                    "nw-decoder-reset",
                    "nw-decoder-info",
                    "nw-decoder-reconfig",
                    "nw-decoder-agg",
                    "nw-decoder-stop",
                    "nw-decoder-count",
                    "nw-decoder-start",
                    "nw-decoder-meta",
                    "nw-decoder-ls",
                    "nw-decoder-stopMon",
                    "nw-decoder-resetMax",
                    "nw-decoder-whoAgg",
                    "nw-decoder-logStats",
                    "nw-decoder-select",
                    "nw-decoder-mon",
                    "nw-index-ls",
                    "nw-index-mon",
                    "nw-index-save",
                    "nw-index-info",
                    "nw-index-drop",
                    "nw-index-count",
                    "nw-index-values",
                    "nw-index-profile",
                    "nw-index-stopMon",
                    "nw-index-inspect",
                    "nw-index-language",
                    "nw-index-reconfig",
                    "nw-index-sizeRoll",
                    "nw-decoderParsers-ls",
                    "nw-decoderParsers-mon",
                    "nw-decoderParsers-feed",
                    "nw-decoderParsers-info",
                    "nw-decoderParsers-count",
                    "nw-decoderParsers-schema",
                    "nw-decoderParsers-reload",
                    "nw-decoderParsers-upload",
                    "nw-decoderParsers-delete",
                    "nw-decoderParsers-stopMon",
                    "nw-decoderParsers-devices",
                    "nw-decoderParsers-content",
                    "nw-decoderParsers-ipdevice",
                    "nw-decoderParsers-iptmzone",
                    "nw-logs-ls",
                    "nw-logs-mon",
                    "nw-logs-pull",
                    "nw-logs-info",
                    "nw-logs-count",
                    "nw-logs-stopMon",
                    "nw-logs-download",
                    "nw-logs-timeRoll",
                    "nw-sys-ls",
                    "nw-sys-mon",
                    "nw-sys-save",
                    "nw-sys-info",
                    "nw-sys-count",
                    "nw-sys-caCert",
                    "nw-sys-stopMon",
                    "nw-sys-shutdown",
                    "nw-sys-fileEdit",
                    "nw-sys-peerCert",
                    "nw-sys-servCert",
                    "nw-sys-statHist",
                    "nw-users-ls",
                    "nw-users-mon",
                    "nw-users-info",
                    "nw-users-auths",
                    "nw-users-count",
                    "nw-users-delete",
                    "nw-users-unlock",
                    "nw-users-stopMon",
                    "nw-users-addOrMod",
                    "nw-decoder-import",
                    "nw-decoder-parsers-upload",
                    "nw-concentrator-reset",
                    "nw-concentrator-reconfig",
                    "nw-concentrator-start",
                    "nw-concentrator-stop",
                    "nw-concentrator-count",
                    "nw-concentrator-edit",
                    "nw-concentrator-add",
                    "nw-concentrator-meta",
                    "nw-concentrator-status",
                    "nw-concentrator-ls",
                    "nw-concentrator-resetMax",
                    "nw-concentrator-stopMon",
                    "nw-concentrator-delete",
                    "nw-concentrator-whoAgg",
                    "nw-concentrator-mon",
                    "nw-broker-reset",
                    "nw-broker-start",
                    "nw-broker-stop",
                    "nw-broker-count",
                    "nw-broker-edit",
                    "nw-broker-add",
                    "nw-broker-meta",
                    "nw-broker-status",
                    "nw-broker-ls",
                    "nw-broker-resetMax",
                    "nw-broker-stopMon",
                    "nw-broker-delete",
                    "nw-broker-whoAgg",
                    "nw-broker-mon"
                ],
                "deprecated_commands": [
                    "nw-sdk-query",
                    "nw-sdk-msearch",
                    "nw-sdk-search",
                    "nw-sdk-packets"
                ]
            }
        },
        {
            "RSA NetWitness Packets and Logs": {
                "name": "RSA NetWitness Packets and Logs",
                "file_path": "Integrations/integration-RsaNetWitnessPacketsAndLogs.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "netwitness-msearch",
                    "netwitness-search",
                    "netwitness-query",
                    "netwitness-packets",
                    "nw-sdk-session",
                    "nw-sdk-content",
                    "nw-sdk-summary",
                    "nw-sdk-values",
                    "nw-database-dump"
                ],
                "deprecated_commands": [
                    "netwitness-search"
                ]
            }
        },
        {
            "RSA NetWitness Security Analytics": {
                "name": "RSA NetWitness Security Analytics",
                "file_path": "Integrations/integration-RsaNetwitnessSecurityAnalytics.yml",
                "fromversion": "2.0.0",
                "commands": [
                    "nw-list-incidents",
                    "nw-login",
                    "nw-get-components",
                    "nw-get-events",
                    "nw-get-available-assignees",
                    "nw-create-incident",
                    "nw-add-events-to-incident",
                    "nw-update-incident",
                    "fetch-incidents",
                    "nw-get-alerts",
                    "nw-get-alert-details",
                    "nw-get-event-details",
                    "nw-get-incident-details",
                    "nw-get-alert-original",
                    "netwitness-im-list-incidents",
                    "netwitness-im-login",
                    "netwitness-im-get-components",
                    "netwitness-im-get-events",
                    "netwitness-im-get-available-assignees",
                    "netwitness-im-create-incident",
                    "netwitness-im-add-events-to-incident",
                    "netwitness-im-update-incident",
                    "netwitness-im-get-alerts",
                    "netwitness-im-get-alert-details",
                    "netwitness-im-get-event-details",
                    "netwitness-im-get-incident-details",
                    "netwitness-im-get-alert-original"
                ],
                "deprecated_commands": [
                    "nw-list-incidents",
                    "nw-get-components",
                    "nw-get-events",
                    "nw-get-available-assignees",
                    "nw-create-incident",
                    "nw-add-events-to-incident",
                    "nw-update-incident",
                    "nw-get-alerts",
                    "nw-get-alert-details",
                    "nw-get-event-details",
                    "nw-get-incident-details",
                    "nw-get-alert-original"
                ]
            }
        },
        {
            "RSA NetWitness v11.1": {
                "name": "RSA NetWitness v11.1",
                "file_path": "Integrations/RSANetWitness_v11_1/RSANetWitness_v11_1.yml",
                "commands": [
                    "netwitness-get-incident",
                    "netwitness-get-incidents",
                    "netwitness-update-incident",
                    "netwitness-delete-incident",
                    "netwitness-get-alerts"
                ],
                "tests": [
                    "RSA NetWitness Test"
                ]
            }
        },
        {
            "RTIR": {
                "name": "RTIR",
                "file_path": "Integrations/RTIR/RTIR.yml",
                "commands": [
                    "rtir-create-ticket",
                    "rtir-search-ticket",
                    "rtir-resolve-ticket",
                    "rtir-edit-ticket",
                    "rtir-ticket-history",
                    "rtir-get-ticket",
                    "rtir-ticket-attachments",
                    "rtir-add-comment",
                    "rtir-add-reply"
                ],
                "tests": [
                    "RTIR Test"
                ]
            }
        },
        {
            "SafeBreach": {
                "name": "SafeBreach",
                "file_path": "Integrations/integration-SafeBreach.yml",
                "commands": [
                    "safebreach-rerun",
                    "safebreach-get-simulation"
                ]
            }
        },
        {
            "Salesforce": {
                "name": "Salesforce",
                "file_path": "Integrations/integration-Salesforce.yml",
                "commands": [
                    "salesforce-search",
                    "salesforce-query",
                    "salesforce-get-object",
                    "salesforce-update-object",
                    "salesforce-create-object",
                    "salesforce-push-comment",
                    "salesforce-get-case",
                    "salesforce-create-case",
                    "salesforce-update-case",
                    "salesforce-get-cases",
                    "salesforce-close-case",
                    "salesforce-push-comment-threads",
                    "salesforce-delete-case",
                    "salesforce-get-casecomment",
                    "salesforce-post-casecomment",
                    "salesforce-get-user",
                    "salesforce-get-org"
                ]
            }
        },
        {
            "Sample Incident Generator": {
                "name": "Sample Incident Generator",
                "file_path": "Integrations/integration-sampleSiem.yml",
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SCADAfence CNM": {
                "name": "SCADAfence CNM",
                "file_path": "Integrations/integration-SCADAfence_CNM.yml",
                "commands": [
                    "scadafence-getAlerts",
                    "scadafence-getAsset",
                    "scadafence-setAlertStatus",
                    "scadafence-getAssetConnections",
                    "scadafence-getAssetTraffic",
                    "scadafence-createAlert",
                    "scadafence-getAllConnections"
                ],
                "tests": [
                    "SCADAfence_test"
                ]
            }
        },
        {
            "SecBI": {
                "name": "SecBI",
                "file_path": "Integrations/SecBI/SecBI.yml",
                "commands": [
                    "secbi-get-incidents-list",
                    "secbi-get-incident",
                    "secbi-get-incident-by-host"
                ],
                "tests": [
                    "SecBI - Test"
                ]
            }
        },
        {
            "Secdo": {
                "name": "Secdo",
                "file_path": "Integrations/integration-secdo.yml",
                "commands": [
                    "secdo-add-IOCs"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "secdo-add-IOCs"
                ]
            }
        },
        {
            "SecurityAdvisor": {
                "name": "SecurityAdvisor",
                "file_path": "Integrations/SecurityAdvisor/SecurityAdvisor.yml",
                "fromversion": "4.5.0",
                "commands": [
                    "coach-end-user"
                ],
                "tests": [
                    "SecurityAdvisor-Test"
                ]
            }
        },
        {
            "Securonix": {
                "name": "Securonix",
                "file_path": "Integrations/Securonix/Securonix.yml",
                "fromversion": "4.5.0",
                "commands": [
                    "securonix-list-workflows",
                    "securonix-get-default-assignee-for-workflow",
                    "securonix-list-possible-threat-actions",
                    "securonix-list-policies",
                    "securonix-list-resource-groups",
                    "securonix-list-users",
                    "securonix-list-activity-data",
                    "securonix-list-violation-data",
                    "securonix-list-incidents",
                    "securonix-get-incident",
                    "securonix-get-incident-status",
                    "securonix-get-incident-workflow",
                    "securonix-get-incident-available-actions",
                    "securonix-perform-action-on-incident",
                    "securonix-add-comment-to-incident",
                    "securonix-list-watchlists",
                    "securonix-get-watchlist",
                    "securonix-create-watchlist",
                    "securonix-check-entity-in-watchlist",
                    "securonix-add-entity-to-watchlist",
                    "securonix-create-incident"
                ],
                "tests": [
                    "No test - no instance"
                ]
            }
        },
        {
            "SentinelOne": {
                "name": "SentinelOne",
                "file_path": "Integrations/integration-SentinelOne.yml",
                "fromversion": "3.1.0",
                "commands": [
                    "so-activities",
                    "so-count-by-filters",
                    "so-agents-count",
                    "so-agent-decommission",
                    "so-get-agent",
                    "so-agents-query",
                    "so-get-agent-processes",
                    "so-agent-recommission",
                    "so-agent-unquarentine",
                    "so-agent-shutdown",
                    "so-agent-uninstall",
                    "so-agents-broadcast",
                    "so-agents-connect",
                    "so-agent-quarentine",
                    "so-agents-decommission",
                    "so-agents-disconnect",
                    "so-agents-fetch-logs",
                    "so-agents-shutdown",
                    "so-agents-uninstall",
                    "so-agents-upgrade-software",
                    "so-create-exclusion-list",
                    "so-delete-exclusion-list",
                    "so-get-exclusion-list",
                    "so-get-exclusion-lists",
                    "so-update-exclusion-list",
                    "so-get-groups",
                    "so-create-group",
                    "so-get-group",
                    "so-update-group",
                    "so-delete-group",
                    "so-add-agent-to-group",
                    "so-set-cloud-intelligence",
                    "so-create-hash",
                    "so-delete-hash",
                    "so-get-hash-reputation",
                    "so-get-hash",
                    "so-get-hashes",
                    "so-update-hash",
                    "so-get-policies",
                    "so-create-policy",
                    "so-get-policy",
                    "so-update-policy",
                    "so-delete-policy",
                    "so-get-threat",
                    "so-get-threats",
                    "so-threat-summary",
                    "so-mark-as-threat",
                    "so-mitigate-threat",
                    "so-reslove-threats"
                ]
            }
        },
        {
            "SentinelOne V2": {
                "name": "SentinelOne V2",
                "file_path": "Integrations/SentinelOne-V2/SentinelOne-V2.yml",
                "commands": [
                    "sentinelone-list-agents",
                    "sentinelone-create-white-list-item",
                    "sentinelone-get-white-list",
                    "sentinelone-get-hash",
                    "sentinelone-get-threats",
                    "sentinelone-threat-summary",
                    "sentinelone-mark-as-threat",
                    "sentinelone-mitigate-threat",
                    "sentinelone-resolve-threat",
                    "sentinelone-get-agent",
                    "sentinelone-get-sites",
                    "sentinelone-get-site",
                    "sentinelone-reactivate-site",
                    "sentinelone-expire-site",
                    "sentinelone-get-activities",
                    "sentinelone-get-groups",
                    "sentinelone-move-agent",
                    "sentinelone-delete-group",
                    "sentinelone-agent-processes",
                    "sentinelone-connect-agent",
                    "sentinelone-disconnect-agent",
                    "sentinelone-broadcast-message",
                    "sentinelone-get-events",
                    "sentinelone-create-query",
                    "sentinelone-get-processes",
                    "sentinelone-shutdown-agent",
                    "sentinelone-uninstall-agent"
                ],
                "tests": [
                    "SentinelOne V2 - test"
                ]
            }
        },
        {
            "Server Message Block (SMB)": {
                "name": "Server Message Block (SMB)",
                "file_path": "Integrations/SMB/SMB.yml",
                "commands": [
                    "smb-download",
                    "smb-upload"
                ],
                "tests": [
                    "SMB test"
                ]
            }
        },
        {
            "Service Manager": {
                "name": "Service Manager",
                "file_path": "Integrations/integration-HPE_Service_Manager.yml",
                "commands": [
                    "hpsm-create-incident",
                    "hpsm-list-incidents",
                    "hpsm-get-incident-by-id",
                    "hpsm-list-devices",
                    "hpsm-get-device"
                ]
            }
        },
        {
            "ServiceNow": {
                "name": "ServiceNow",
                "file_path": "Packs/ServiceNow/Integrations/ServiceNow/ServiceNow.yml",
                "commands": [
                    "servicenow-get-ticket",
                    "servicenow-get",
                    "servicenow-incident-get",
                    "servicenow-create-ticket",
                    "servicenow-create",
                    "servicenow-incident-create",
                    "servicenow-update-ticket",
                    "servicenow-update",
                    "servicenow-incident-update",
                    "servicenow-delete-ticket",
                    "servicenow-add-link",
                    "servicenow-incident-add-link",
                    "servicenow-add-comment",
                    "servicenow-incident-add-comment",
                    "servicenow-query-tickets",
                    "servicenow-query",
                    "servicenow-incidents-query",
                    "servicenow-upload-file",
                    "servicenow-incident-upload-file",
                    "servicenow-get-groups",
                    "servicenow-get-computer",
                    "servicenow-get-record",
                    "servicenow-query-table",
                    "servicenow-create-record",
                    "servicenow-update-record",
                    "servicenow-delete-record",
                    "servicenow-list-table-fields",
                    "servicenow-query-computers",
                    "servicenow-query-groups",
                    "servicenow-query-users",
                    "servicenow-get-table-name",
                    "servicenow-get-ticket-notes"
                ],
                "tests": [
                    "No test - Hibernating instance"
                ],
                "deprecated_commands": [
                    "servicenow-get",
                    "servicenow-incident-get",
                    "servicenow-create",
                    "servicenow-incident-create",
                    "servicenow-update",
                    "servicenow-incident-update",
                    "servicenow-incident-add-link",
                    "servicenow-incident-add-comment",
                    "servicenow-query",
                    "servicenow-incidents-query",
                    "servicenow-incident-upload-file",
                    "servicenow-get-groups",
                    "servicenow-get-computer"
                ],
                "pack": "ServiceNow"
            }
        },
        {
            "Shodan": {
                "name": "Shodan",
                "file_path": "Integrations/integration-Shodan.yml",
                "commands": [
                    "search",
                    "ip"
                ],
                "tests": [
                    "ShodanTest"
                ],
                "deprecated": true
            }
        },
        {
            "Shodan_v2": {
                "name": "Shodan_v2",
                "file_path": "Integrations/Shodan_v2/Shodan_v2.yml",
                "commands": [
                    "search",
                    "ip",
                    "shodan-search-count",
                    "shodan-scan-ip",
                    "shodan-scan-internet",
                    "shodan-scan-status",
                    "shodan-create-network-alert",
                    "shodan-network-get-alert-by-id",
                    "shodan-network-get-alerts",
                    "shodan-network-delete-alert",
                    "shodan-network-alert-set-trigger",
                    "shodan-network-alert-remove-trigger",
                    "shodan-network-alert-whitelist-service",
                    "shodan-network-alert-remove-service-from-whitelist"
                ],
                "tests": [
                    "Test-Shodan_v2"
                ]
            }
        },
        {
            "Signal Sciences WAF": {
                "name": "Signal Sciences WAF",
                "file_path": "Integrations/SignalSciences/SignalSciences.yml",
                "commands": [
                    "sigsci-get-whitelist",
                    "sigsci-get-blacklist",
                    "sigsci-whitelist-add-ip",
                    "sigsci-blacklist-add-ip",
                    "sigsci-whitelist-remove-ip",
                    "sigsci-blacklist-remove-ip",
                    "sigsci-get-sites",
                    "sigsci-create-site-list",
                    "sigsci-get-site-list",
                    "sigsci-delete-site-list",
                    "sigsci-update-site-list",
                    "sigsci-add-alert",
                    "sigsci-get-alert",
                    "sigsci-delete-alert",
                    "sigsci-update-alert",
                    "sigsci-get-all-alerts",
                    "sigsci-get-all-site-lists",
                    "sigsci-create-corp-list",
                    "sigsci-get-corp-list",
                    "sigsci-delete-corp-list",
                    "sigsci-update-corp-list",
                    "sigsci-get-all-corp-lists",
                    "sigsci-get-events",
                    "sigsci-get-event-by-id",
                    "sigsci-expire-event",
                    "sigsci-get-requests",
                    "sigsci-get-request-by-id"
                ]
            }
        },
        {
            "Sixgill": {
                "name": "Sixgill",
                "file_path": "Packs/Sixgill/Integrations/Sixgill/Sixgill.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "sixgill-get-indicators"
                ],
                "pack": "Sixgill"
            }
        },
        {
            "Skyformation": {
                "name": "Skyformation",
                "file_path": "Integrations/integration-Skyformation.yml",
                "commands": [
                    "skyformation-get-accounts",
                    "skyformation-suspend-user",
                    "skyformation-unsuspend-user"
                ]
            }
        },
        {
            "SlackV2": {
                "name": "SlackV2",
                "file_path": "Packs/Slack/Integrations/Slack/Slack.yml",
                "fromversion": "5.0.0",
                "commands": [
                    "slack-mirror-investigation",
                    "mirror-investigation",
                    "send-notification",
                    "slack-send",
                    "slack-close-channel",
                    "close-channel",
                    "slack-send-file",
                    "slack-set-channel-topic",
                    "slack-create-channel",
                    "slack-invite-to-channel",
                    "slack-kick-from-channel",
                    "slack-rename-channel",
                    "slack-get-user-details"
                ],
                "deprecated_commands": [
                    "slack-mirror-investigation",
                    "slack-send",
                    "slack-close-channel"
                ],
                "pack": "Slack"
            }
        },
        {
            "SlashNext Phishing Incident Response": {
                "name": "SlashNext Phishing Incident Response",
                "file_path": "Integrations/SlashNextPhishingIncidentResponse/SlashNextPhishingIncidentResponse.yml",
                "commands": [
                    "ip",
                    "domain",
                    "slashnext-host-reputation",
                    "slashnext-host-report",
                    "slashnext-host-urls",
                    "slashnext-url-scan",
                    "slashnext-url-scan-sync",
                    "slashnext-scan-report",
                    "slashnext-download-screenshot",
                    "slashnext-download-html",
                    "slashnext-download-text"
                ]
            }
        },
        {
            "SMIME Messaging": {
                "name": "SMIME Messaging",
                "file_path": "Integrations/SMIME_Messaging/SMIME_Messaging.yml",
                "commands": [
                    "smime-sign-email",
                    "smime-encrypt-email-body",
                    "smime-verify-sign",
                    "smime-decrypt-email-body",
                    "smime-sign-and-encrypt"
                ],
                "tests": [
                    "No tests - added unitest"
                ]
            }
        },
        {
            "SNDBOX": {
                "name": "SNDBOX",
                "file_path": "Integrations/SNDBOX/SNDBOX.yml",
                "commands": [
                    "sndbox-is-online",
                    "sndbox-analysis-info",
                    "sndbox-analysis-submit-sample",
                    "sndbox-download-report",
                    "sndbox-detonate-file",
                    "sndbox-download-sample"
                ],
                "tests": [
                    "SNDBOX_Test"
                ],
                "deprecated_commands": [
                    "sndbox-detonate-file"
                ]
            }
        },
        {
            "Snowflake": {
                "name": "Snowflake",
                "file_path": "Integrations/Snowflake/Snowflake.yml",
                "commands": [
                    "snowflake-query",
                    "snowflake-update"
                ],
                "tests": [
                    "Snowflake-Test"
                ]
            }
        },
        {
            "SpamhausFeed": {
                "name": "SpamhausFeed",
                "file_path": "Packs/FeedSpamhaus/Integrations/FeedSpamhaus/FeedSpamhaus.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "spamhaus-get-indicators"
                ],
                "pack": "FeedSpamhaus"
            }
        },
        {
            "SplunkPy": {
                "name": "SplunkPy",
                "file_path": "Integrations/SplunkPy/SplunkPy.yml",
                "commands": [
                    "splunk-results",
                    "splunk-search",
                    "splunk-submit-event",
                    "splunk-get-indexes",
                    "splunk-notable-event-edit",
                    "splunk-job-create",
                    "splunk-parse-raw",
                    "splunk-submit-event-hec"
                ],
                "tests": [
                    "SplunkPy-Test-V2"
                ]
            }
        },
        {
            "Stealthwatch Cloud": {
                "name": "Stealthwatch Cloud",
                "file_path": "Integrations/Stealthwatch_Cloud/Stealthwatch_Cloud.yml",
                "commands": [
                    "sw-show-alert",
                    "sw-update-alert",
                    "sw-list-alerts",
                    "sw-block-domain-or-ip",
                    "sw-unblock-domain",
                    "sw-list-blocked-domains",
                    "sw-list-observations",
                    "sw-list-sessions"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "SumoLogic": {
                "name": "SumoLogic",
                "file_path": "Integrations/integration-SumoLogic.yml",
                "commands": [
                    "search"
                ],
                "tests": [
                    "SumoLogic-Test"
                ]
            }
        },
        {
            "Symantec Advanced Threat Protection": {
                "name": "Symantec Advanced Threat Protection",
                "file_path": "Integrations/integration-Symantec_Advanced_Threat_Protection.yml",
                "commands": [
                    "satp-appliances",
                    "satp-command",
                    "satp-command-state",
                    "satp-command-cancel",
                    "satp-events",
                    "satp-files",
                    "satp-incident-events",
                    "satp-incidents"
                ]
            }
        },
        {
            "Symantec Blue Coat Content and Malware Analysis": {
                "name": "Symantec Blue Coat Content and Malware Analysis",
                "file_path": "Beta_Integrations/SymantecBlueCoatMalwareAnalysis/SymantecBlueCoatMalwareAnalysis.yml",
                "commands": [
                    "symantec-cma-upload-url",
                    "symantec-cma-upload-file",
                    "symantec-cma-get-report"
                ]
            }
        },
        {
            "Symantec Data Loss Prevention": {
                "name": "Symantec Data Loss Prevention",
                "file_path": "Beta_Integrations/SymantecDLP/SymantecDLP.yml",
                "fromversion": "4.5.0",
                "commands": [
                    "symantec-dlp-list-incidents",
                    "symantec-dlp-get-incident-details",
                    "symantec-dlp-update-incident",
                    "symantec-dlp-incident-binaries",
                    "symantec-dlp-list-custom-attributes",
                    "symantec-dlp-list-incident-status",
                    "symantec-dlp-incident-violations"
                ]
            }
        },
        {
            "Symantec Deepsight Intelligence": {
                "name": "Symantec Deepsight Intelligence",
                "file_path": "Beta_Integrations/integration-Symantec_Deepsight.yml",
                "commands": [
                    "ip",
                    "domain",
                    "file",
                    "url",
                    "deepsight-get-request-status"
                ],
                "tests": [
                    "Symantec Deepsight Test"
                ]
            }
        },
        {
            "Symantec Endpoint Protection": {
                "name": "Symantec Endpoint Protection",
                "file_path": "Integrations/integration-SymantecEndpointProtectionOld.yml",
                "commands": [
                    "sep-endpoints-info",
                    "sep-update-content",
                    "sep-scan",
                    "sep-groups-info",
                    "sep-system-info",
                    "sep-command-status",
                    "sep-quarantine",
                    "sep-client-content"
                ],
                "tests": [
                    "No test - deprecated integration"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "sep-endpoints-info",
                    "sep-update-content",
                    "sep-scan",
                    "sep-groups-info",
                    "sep-system-info",
                    "sep-command-status",
                    "sep-quarantine",
                    "sep-client-content"
                ]
            }
        },
        {
            "Symantec Endpoint Protection V2": {
                "name": "Symantec Endpoint Protection V2",
                "file_path": "Integrations/SymantecEndpointProtection_V2/SymantecEndpointProtection_V2.yml",
                "commands": [
                    "sep-endpoints-info",
                    "sep-groups-info",
                    "sep-system-info",
                    "sep-command-status",
                    "sep-client-content",
                    "sep-list-policies",
                    "sep-assign-policy",
                    "sep-list-locations",
                    "sep-endpoint-quarantine",
                    "sep-scan-endpoint",
                    "sep-update-endpoint-content",
                    "sep-move-client-to-group",
                    "sep-identify-old-clients"
                ],
                "tests": [
                    "SymantecEndpointProtection_Test"
                ]
            }
        },
        {
            "Symantec Management Center": {
                "name": "Symantec Management Center",
                "file_path": "Integrations/SymantecManagementCenter/SymantecManagementCenter.yml",
                "commands": [
                    "symantec-mc-list-devices",
                    "symantec-mc-get-device",
                    "symantec-mc-get-device-health",
                    "symantec-mc-get-device-license",
                    "symantec-mc-get-device-status",
                    "symantec-mc-list-policies",
                    "symantec-mc-get-policy",
                    "symantec-mc-create-policy",
                    "symantec-mc-update-policy",
                    "symantec-mc-delete-policy",
                    "symantec-mc-list-tenants",
                    "symantec-mc-add-policy-content",
                    "symantec-mc-delete-policy-content"
                ],
                "tests": [
                    "SymantecMC_TestPlaybook"
                ]
            }
        },
        {
            "Symantec Messaging Gateway": {
                "name": "Symantec Messaging Gateway",
                "file_path": "Integrations/integration-Symantec_Messaging_Gateway.yml",
                "commands": [
                    "smg-block-email",
                    "smg-unblock-email",
                    "smg-block-domain",
                    "smg-block-ip",
                    "smg-unblock-ip",
                    "smg-unblock-domain",
                    "smg-get-blocked-domains",
                    "smg-get-blocked-ips"
                ]
            }
        },
        {
            "Symantec MSS": {
                "name": "Symantec MSS",
                "file_path": "Integrations/SymantecMSS/SymantecMSS.yml",
                "commands": [
                    "symantec-mss-update-incident",
                    "symantec-mss-get-incident",
                    "symantec-mss-incidents-list"
                ],
                "tests": [
                    "SymantecMSSTest"
                ]
            }
        },
        {
            "Syslog Sender": {
                "name": "Syslog Sender",
                "file_path": "Packs/Syslog/Integrations/SyslogSender/SyslogSender.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "mirror-investigation",
                    "send-notification",
                    "syslog-send"
                ],
                "tests": [
                    "Test Syslog"
                ],
                "pack": "Syslog"
            }
        },
        {
            "Tanium": {
                "name": "Tanium",
                "file_path": "Integrations/Tanium/Tanium.yml",
                "commands": [
                    "tn-get-package",
                    "tn-get-all-packages",
                    "tn-get-object",
                    "tn-get-all-saved-questions",
                    "tn-deploy-package",
                    "tn-ask-question",
                    "tn-ask-system",
                    "tn-get-saved-question",
                    "tn-create-package",
                    "tn-approve-pending-action",
                    "tn-get-all-objects",
                    "tn-get-all-saved-actions",
                    "tn-get-all-pending-actions",
                    "tn-get-all-sensors",
                    "tn-parse-query",
                    "tn-ask-manual-question",
                    "tn-get-sensor",
                    "tn-get-action"
                ],
                "tests": [
                    "Tanium Test Playbook"
                ]
            }
        },
        {
            "Tanium v2": {
                "name": "Tanium v2",
                "file_path": "Integrations/Tanium_v2/Tanium_v2.yml",
                "commands": [
                    "tn-get-package",
                    "tn-ask-question",
                    "tn-get-question-result",
                    "tn-list-sensors",
                    "tn-get-sensor",
                    "tn-create-saved-question",
                    "tn-list-saved-questions",
                    "tn-get-saved-question-result",
                    "tn-get-system-status",
                    "tn-create-package",
                    "tn-list-packages",
                    "tn-get-question-metadata",
                    "tn-list-saved-actions",
                    "tn-get-saved-action",
                    "tn-get-saved-question-metadata",
                    "tn-create-saved-action",
                    "tn-create-action",
                    "tn-list-actions",
                    "tn-get-action",
                    "tn-list-saved-actions-pending-approval",
                    "tn-get-group",
                    "tn-create-manual-group",
                    "tn-create-filter-based-group",
                    "tn-list-groups",
                    "tn-delete-group",
                    "tn-create-action-by-host"
                ],
                "tests": [
                    "Tanium v2 - Test"
                ]
            }
        },
        {
            "TAXII Server": {
                "name": "TAXII Server",
                "file_path": "Packs/TAXIIServer/Integrations/TAXIIServer/TAXIIServer.yml",
                "fromversion": "5.5.0",
                "tests": [
                    "No test"
                ],
                "pack": "TAXIIServer"
            }
        },
        {
            "TAXIIFeed": {
                "name": "TAXIIFeed",
                "file_path": "Integrations/FeedTAXII/FeedTAXII.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "get-indicators"
                ],
                "tests": [
                    "TAXII_Feed_Test"
                ]
            }
        },
        {
            "TCPIPUtils": {
                "name": "TCPIPUtils",
                "file_path": "Integrations/integration-TCPIPUtils.yml",
                "commands": [
                    "ip"
                ]
            }
        },
        {
            "Telegram_Beta": {
                "name": "Telegram_Beta",
                "file_path": "Beta_Integrations/Telegram/Telegram.yml",
                "commands": [
                    "telegram-send-message",
                    "telegram-list-users"
                ]
            }
        },
        {
            "Tenable.io": {
                "name": "Tenable.io",
                "file_path": "Integrations/Tenable_io/Tenable_io.yml",
                "commands": [
                    "tenable-io-list-scans",
                    "tenable-io-launch-scan",
                    "tenable-io-get-scan-report",
                    "tenable-io-get-vulnerability-details",
                    "tenable-io-get-vulnerabilities-by-asset",
                    "tenable-io-get-scan-status"
                ],
                "tests": [
                    "Tenable.io test"
                ]
            }
        },
        {
            "Tenable.sc": {
                "name": "Tenable.sc",
                "file_path": "Integrations/Tenable_sc/Tenable_sc.yml",
                "commands": [
                    "tenable-sc-list-scans",
                    "tenable-sc-launch-scan",
                    "tenable-sc-get-vulnerability",
                    "tenable-sc-get-scan-status",
                    "tenable-sc-get-scan-report",
                    "tenable-sc-list-credentials",
                    "tenable-sc-list-policies",
                    "tenable-sc-list-report-definitions",
                    "tenable-sc-list-repositories",
                    "tenable-sc-list-zones",
                    "tenable-sc-create-scan",
                    "tenable-sc-delete-scan",
                    "tenable-sc-list-assets",
                    "tenable-sc-create-asset",
                    "tenable-sc-get-asset",
                    "tenable-sc-delete-asset",
                    "tenable-sc-list-alerts",
                    "tenable-sc-get-alert",
                    "tenable-sc-get-device",
                    "tenable-sc-list-users",
                    "tenable-sc-get-system-licensing",
                    "tenable-sc-get-system-information",
                    "tenable-sc-get-all-scan-results"
                ],
                "tests": [
                    "tenable-sc-test"
                ]
            }
        },
        {
            "Thinkst Canary": {
                "name": "Thinkst Canary",
                "file_path": "Integrations/ThinkstCanary/ThinkstCanary.yml",
                "commands": [
                    "canarytools-list-canaries",
                    "canarytools-list-tokens",
                    "canarytools-check-whitelist",
                    "canarytools-whitelist-ip",
                    "canarytools-edit-alert-status",
                    "canarytools-get-token"
                ],
                "tests": [
                    "CanaryTools Test"
                ]
            }
        },
        {
            "Threat Crowd": {
                "name": "Threat Crowd",
                "file_path": "Integrations/integration-Threat_Crowd.yml",
                "commands": [
                    "threat-crowd-email",
                    "threat-crowd-domain",
                    "threat-crowd-ip",
                    "threat-crowd-antivirus",
                    "threat-crowd-file"
                ],
                "tests": [
                    "ThreatCrowd - Test"
                ]
            }
        },
        {
            "Threat Grid": {
                "name": "Threat Grid",
                "file_path": "Integrations/integration-Threat_Grid-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "threat-grid-feeds-ip",
                    "threat-grid-feeds-domain",
                    "threat-grid-feeds-url",
                    "threat-grid-feeds-path",
                    "threat-grid-feeds-artifacts",
                    "threat-grid-feeds-network-stream",
                    "threat-grid-feeds-registry-key",
                    "threat-grid-get-samples",
                    "threat-grid-get-sample-by-id",
                    "threat-grid-get-sample-state-by-id",
                    "threat-grid-get-samples-state",
                    "threat-grid-upload-sample",
                    "threat-grid-search-submissions",
                    "threat-grid-get-video-by-id",
                    "threat-grid-get-analysis-by-id",
                    "threat-grid-get-processes-by-id",
                    "threat-grid-get-pcap-by-id",
                    "threat-grid-get-warnings-by-id",
                    "threat-grid-get-summary-by-id",
                    "threat-grid-get-threat-summary-by-id",
                    "threat-grid-get-html-report-by-id",
                    "threat-grid-download-sample-by-id",
                    "threat-grid-get-analysis-iocs",
                    "threat-grid-get-analysis-ioc",
                    "threat-grid-get-analysis-network-streams",
                    "threat-grid-get-analysis-artifacts",
                    "threat-grid-get-analysis-network-stream",
                    "threat-grid-get-analysis-artifact",
                    "threat-grid-get-analysis-processes",
                    "threat-grid-get-analysis-process",
                    "threat-grid-get-analysis-annotations",
                    "threat-grid-get-analysis-metadata",
                    "threat-grid-download-artifact",
                    "threat-grid-who-am-i",
                    "threat-grid-user-get-rate-limit",
                    "threat-grid-get-specific-feed"
                ]
            }
        },
        {
            "Threat Grid": {
                "name": "Threat Grid",
                "file_path": "Integrations/integration-Threat_Grid.yml",
                "commands": [
                    "threat-grid-get-samples",
                    "threat-grid-get-sample-by-id",
                    "threat-grid-get-sample-state-by-id",
                    "threat-grid-upload-sample",
                    "threat-grid-search-submissions",
                    "threat-grid-get-video-by-id",
                    "threat-grid-get-analysis-by-id",
                    "threat-grid-get-processes-by-id",
                    "threat-grid-get-pcap-by-id",
                    "threat-grid-get-warnings-by-id",
                    "threat-grid-get-summary-by-id",
                    "threat-grid-get-threat-summary-by-id",
                    "threat-grid-get-html-report-by-id",
                    "threat-grid-download-sample-by-id",
                    "threat-grid-get-analysis-iocs",
                    "threat-grid-download-artifact",
                    "threat-grid-who-am-i",
                    "threat-grid-user-get-rate-limit",
                    "threat-grid-get-specific-feed",
                    "threat-grid-detonate-file",
                    "threat-grid-url-to-file",
                    "threat-grid-organization-get-rate-limit",
                    "threat-grid-search-ips",
                    "threat-grid-get-analysis-annotations",
                    "threat-grid-search-samples",
                    "threat-grid-search-urls",
                    "threat-grid-get-samples-state",
                    "threat-grid-feeds-artifacts",
                    "threat-grid-feeds-domain",
                    "threat-grid-feeds-ip",
                    "threat-grid-feeds-network-stream",
                    "threat-grid-feeds-path",
                    "threat-grid-feeds-url",
                    "threat-grid-get-analysis-artifact",
                    "threat-grid-get-analysis-artifacts",
                    "threat-grid-get-analysis-ioc",
                    "threat-grid-get-analysis-metadata",
                    "threat-grid-get-analysis-network-stream",
                    "threat-grid-get-analysis-network-streams",
                    "threat-grid-get-analysis-process",
                    "threat-grid-get-analysis-processes"
                ],
                "tests": [
                    "ThreatGridTest"
                ],
                "deprecated_commands": [
                    "threat-grid-download-artifact",
                    "threat-grid-detonate-file"
                ]
            }
        },
        {
            "ThreatConnect": {
                "name": "ThreatConnect",
                "file_path": "Integrations/ThreatConnect/ThreatConnect.yml",
                "commands": [
                    "ip",
                    "url",
                    "file",
                    "tc-owners",
                    "tc-indicators",
                    "tc-get-tags",
                    "tc-tag-indicator",
                    "tc-get-indicator",
                    "tc-get-indicators-by-tag",
                    "tc-add-indicator",
                    "tc-create-incident",
                    "tc-fetch-incidents",
                    "tc-incident-associate-indicator",
                    "domain",
                    "tc-get-incident-associate-indicators",
                    "tc-update-indicator",
                    "tc-delete-indicator-tag",
                    "tc-delete-indicator",
                    "tc-create-campaign",
                    "tc-create-event",
                    "tc-create-threat",
                    "tc-delete-group",
                    "tc-add-group-attribute",
                    "tc-get-events",
                    "tc-get-groups",
                    "tc-add-group-security-label",
                    "tc-add-group-tag",
                    "tc-get-indicator-types",
                    "tc-group-associate-indicator",
                    "tc-create-document-group",
                    "tc-get-group",
                    "tc-get-group-attributes",
                    "tc-get-group-security-labels",
                    "tc-get-group-tags",
                    "tc-download-document",
                    "tc-get-group-indicators",
                    "tc-get-associated-groups",
                    "tc-associate-group-to-group"
                ],
                "tests": [
                    "test-ThreatConnect"
                ]
            }
        },
        {
            "ThreatExchange": {
                "name": "ThreatExchange",
                "file_path": "Integrations/integration-ThreatExchange.yml",
                "fromversion": "2.5.0",
                "commands": [
                    "file",
                    "ip",
                    "url",
                    "domain",
                    "threatexchange-query",
                    "threatexchange-members"
                ]
            }
        },
        {
            "ThreatMiner": {
                "name": "ThreatMiner",
                "file_path": "Integrations/integration-ThreatMiner.yml",
                "commands": [
                    "domain",
                    "ip",
                    "file"
                ],
                "tests": [
                    "ThreatMiner-Test"
                ]
            }
        },
        {
            "ThreatQ v2": {
                "name": "ThreatQ v2",
                "file_path": "Integrations/ThreatQ_v2/ThreatQ_v2.yml",
                "commands": [
                    "threatq-search-by-name",
                    "ip",
                    "url",
                    "file",
                    "email",
                    "domain",
                    "threatq-create-indicator",
                    "threatq-add-attribute",
                    "threatq-modify-attribute",
                    "threatq-link-objects",
                    "threatq-create-adversary",
                    "threatq-create-event",
                    "threatq-get-related-indicators",
                    "threatq-update-status",
                    "threatq-get-related-events",
                    "threatq-get-related-adversaries",
                    "threatq-upload-file",
                    "threatq-search-by-id",
                    "threatq-unlink-objects",
                    "threatq-delete-object",
                    "threatq-add-source",
                    "threatq-delete-source",
                    "threatq-delete-attribute",
                    "threatq-edit-adversary",
                    "threatq-edit-indicator",
                    "threatq-edit-event",
                    "threatq-update-score",
                    "threatq-download-file",
                    "threatq-get-all-indicators",
                    "threatq-get-all-events",
                    "threatq-get-all-adversaries",
                    "threatq-advanced-search"
                ]
            }
        },
        {
            "ThreatQ_Beta": {
                "name": "ThreatQ_Beta",
                "file_path": "Beta_Integrations/integration-ThreatQ.yml",
                "commands": [
                    "tq-search-by-name",
                    "ip",
                    "url",
                    "file"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "ThreatX": {
                "name": "ThreatX",
                "file_path": "Integrations/ThreatX/ThreatX.yml",
                "commands": [
                    "threatx-block-ip",
                    "threatx-unblock-ip",
                    "threatx-blacklist-ip",
                    "threatx-unblacklist-ip",
                    "threatx-whitelist-ip",
                    "threatx-unwhitelist-ip",
                    "threatx-get-entities",
                    "threatx-get-entity-notes",
                    "threatx-add-entity-note"
                ]
            }
        },
        {
            "Tor Exit Addresses Feed": {
                "name": "Tor Exit Addresses Feed",
                "file_path": "Packs/FeedTorExitAddresses/Integrations/FeedTorExitAddresses/FeedTorExitAddresses.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "tor-get-indicators"
                ],
                "tests": [
                    "No tests"
                ],
                "pack": "FeedTorExitAddresses"
            }
        },
        {
            "Traps": {
                "name": "Traps",
                "file_path": "Integrations/PaloAltoNetworks_Traps/PaloAltoNetworks_Traps.yml",
                "commands": [
                    "traps-get-endpoint-by-id",
                    "traps-endpoint-files-retrieve",
                    "traps-endpoint-scan",
                    "traps-event-update",
                    "traps-event-bulk-update-status",
                    "traps-hash-blacklist",
                    "traps-hash-blacklist-remove",
                    "traps-hashes-blacklist-status",
                    "traps-event-quarantine",
                    "traps-endpoint-isolate",
                    "traps-event-quarantine-result",
                    "traps-endpoint-isolate-status",
                    "traps-endpoint-files-retrieve-result",
                    "traps-endpoint-scan-result"
                ],
                "tests": [
                    "Traps test"
                ]
            }
        },
        {
            "Trend Micro": {
                "name": "Trend Micro",
                "file_path": "Integrations/integration-trendMicroDsm.yml",
                "commands": [
                    "trendmicro-host-retrieve-all",
                    "trendmicro-system-event-retrieve",
                    "trendmicro-host-antimalware-scan",
                    "trendmicro-alert-status",
                    "trendmicro-security-profile-retrieve-all",
                    "trendmicro-security-profile-assign-to-host",
                    "trendmicro-anti-malware-event-retrieve"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Trend Micro Apex": {
                "name": "Trend Micro Apex",
                "file_path": "Beta_Integrations/TrendMicroApex/TrendMicroApex.yml",
                "commands": [
                    "trendmicro-apex-usdo-list",
                    "trendmicro-apex-usdo-add",
                    "trendmicro-apex-usdo-delete",
                    "trendmicro-apex-isolate",
                    "trendmicro-apex-restore"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Trend Micro Deep Discovery Analyzer Beta": {
                "name": "Trend Micro Deep Discovery Analyzer Beta",
                "file_path": "Beta_Integrations/integration-TrendMicroDDA.yml",
                "commands": [
                    "trendmicro-dda-get-sample",
                    "trendmicro-dda-get-openioc",
                    "trendmicro-dda-get-report",
                    "trendmicro-dda-get-sample-list",
                    "trendmicro-dda-check-status",
                    "trendmicro-dda-upload-url",
                    "trendmicro-dda-upload-file",
                    "trendmicro-dda-get-brief-report"
                ],
                "tests": [
                    "No Test - run \"Test Playbook TrendMicroDDA\" manually"
                ]
            }
        },
        {
            "TruSTAR": {
                "name": "TruSTAR",
                "file_path": "Integrations/TruSTAR/TruSTAR.yml",
                "commands": [
                    "trustar-related-indicators",
                    "trustar-trending-indicators",
                    "trustar-search-indicators",
                    "trustar-submit-report",
                    "trustar-update-report",
                    "trustar-report-details",
                    "trustar-delete-report",
                    "trustar-get-reports",
                    "trustar-correlated-reports",
                    "trustar-search-reports",
                    "trustar-add-to-whitelist",
                    "trustar-remove-from-whitelist",
                    "trustar-get-enclaves",
                    "file",
                    "ip",
                    "url",
                    "domain"
                ]
            }
        },
        {
            "Tufin": {
                "name": "Tufin",
                "file_path": "Integrations/integration-Tufin.yml",
                "commands": [
                    "tufin-search-topology",
                    "tufin-search-topology-image",
                    "tufin-object-resolve",
                    "tufin-policy-search"
                ]
            }
        },
        {
            "Twilio": {
                "name": "Twilio",
                "file_path": "Integrations/integration-Twilio.yml",
                "fromversion": "2.5.0",
                "commands": [
                    "TwilioSendSMS"
                ]
            }
        },
        {
            "Uptycs": {
                "name": "Uptycs",
                "file_path": "Integrations/Uptycs/Uptycs.yml",
                "commands": [
                    "uptycs-get-assets",
                    "uptycs-run-query",
                    "uptycs-get-alerts",
                    "uptycs-get-alert-rules",
                    "uptycs-get-event-rules",
                    "uptycs-get-events",
                    "uptycs-get-process-open-sockets",
                    "uptycs-get-process-information",
                    "uptycs-get-process-child-processes",
                    "uptycs-get-processes",
                    "uptycs-get-process-open-files",
                    "uptycs-set-alert-status",
                    "uptycs-set-asset-tag",
                    "uptycs-get-user-information",
                    "uptycs-get-threat-indicators",
                    "uptycs-get-threat-sources",
                    "uptycs-get-threat-vendors",
                    "uptycs-get-parent-information",
                    "uptycs-post-threat-source",
                    "uptycs-get-users",
                    "uptycs-get-asset-groups",
                    "uptycs-get-user-asset-groups",
                    "uptycs-get-threat-indicator",
                    "uptycs-get-threat-source",
                    "uptycs-get-process-events",
                    "uptycs-get-process-event-information",
                    "uptycs-get-socket-events",
                    "uptycs-get-parent-event-information",
                    "uptycs-get-socket-event-information",
                    "uptycs-get-asset-tags",
                    "uptycs-get-saved-queries",
                    "uptycs-run-saved-query",
                    "uptycs-post-saved-query"
                ]
            }
        },
        {
            "URLhaus": {
                "name": "URLhaus",
                "file_path": "Integrations/URLHaus/URLHaus.yml",
                "commands": [
                    "url",
                    "domain",
                    "file",
                    "urlhaus-download-sample"
                ]
            }
        },
        {
            "urlscan.io": {
                "name": "urlscan.io",
                "file_path": "Integrations/UrlScan/UrlScan.yml",
                "commands": [
                    "urlscan-search",
                    "urlscan-submit",
                    "url",
                    "urlscan-get-http-transaction-list",
                    "urlscan-submit-url-command",
                    "urlscan-poll-uri",
                    "urlscan-get-result-page"
                ],
                "deprecated_commands": [
                    "urlscan-submit",
                    "urlscan-get-http-transaction-list",
                    "urlscan-submit-url-command",
                    "urlscan-poll-uri",
                    "urlscan-get-result-page"
                ]
            }
        },
        {
            "urlscan.io": {
                "name": "urlscan.io",
                "file_path": "Integrations/integration-UrlScan-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "url",
                    "ip",
                    "file",
                    "urlscan-submit"
                ],
                "tests": [
                    "No tests"
                ]
            }
        },
        {
            "Vectra": {
                "name": "Vectra",
                "file_path": "Integrations/integration-Vectra.yml",
                "commands": [
                    "vec-detections",
                    "vectra-detections",
                    "vec-hosts",
                    "vectra-hosts",
                    "vec-settings",
                    "vectra-settings",
                    "vec-health",
                    "vectra-health",
                    "vec-triage",
                    "vectra-triage",
                    "vec-sensors",
                    "vectra-sensors",
                    "vec-get-host-by-id",
                    "vec-get-detetctions-by-id"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated_commands": [
                    "vec-detections",
                    "vec-hosts",
                    "vec-settings",
                    "vec-health",
                    "vec-triage",
                    "vec-sensors",
                    "vec-get-host-by-id",
                    "vec-get-detetctions-by-id"
                ]
            }
        },
        {
            "Vectra v2": {
                "name": "Vectra v2",
                "file_path": "Integrations/Vectra_v2/Vectra_v2.yml",
                "commands": [
                    "vectra-get-detections",
                    "vectra-get-hosts",
                    "vectra-triage",
                    "vectra-get-host-by-id",
                    "vectra-get-detection-by-id",
                    "vectra-get-users",
                    "vectra-get-proxies",
                    "vectra-get-threatfeed",
                    "vectra-search"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Venafi": {
                "name": "Venafi",
                "file_path": "Integrations/integration-Venafi.yml",
                "commands": [
                    "venafi-get-certificates",
                    "venafi-get-certificate-details"
                ],
                "tests": [
                    "No test - no instance"
                ]
            }
        },
        {
            "Verodin": {
                "name": "Verodin",
                "file_path": "Integrations/integration-Verodin.yml",
                "commands": [
                    "verodin-get-topology-nodes",
                    "verodin-get-topology-map",
                    "verodin-manage-sims-actions",
                    "verodin-manage-sims-actions-run",
                    "verodin-get-security-zones",
                    "verodin-get-security-zone",
                    "verodin-delete-security-zone",
                    "verodin-get-sims-of-type",
                    "verodin-get-sim",
                    "verodin-delete-sim",
                    "verodin-get-jobs",
                    "verodin-get-job",
                    "verodin-run-job-again",
                    "verodin-get-job-sim-actions",
                    "verodin-job-cancel"
                ]
            }
        },
        {
            "Vertica": {
                "name": "Vertica",
                "file_path": "Integrations/Vertica/Vertica.yml",
                "commands": [
                    "vertica-query"
                ],
                "tests": [
                    "Vertica Test"
                ]
            }
        },
        {
            "VirusTotal": {
                "name": "VirusTotal",
                "file_path": "Integrations/integration-VirusTotal_5.5.yml",
                "fromversion": "5.5.0",
                "commands": [
                    "file",
                    "ip",
                    "url",
                    "domain",
                    "file-scan",
                    "file-rescan",
                    "url-scan",
                    "vt-comments-add",
                    "vt-file-scan-upload-url",
                    "vt-comments-get"
                ]
            }
        },
        {
            "VirusTotal": {
                "name": "VirusTotal",
                "file_path": "Integrations/integration-VirusTotal.yml",
                "toversion": "5.1.0",
                "commands": [
                    "file",
                    "ip",
                    "url",
                    "domain",
                    "file-scan",
                    "file-rescan",
                    "url-scan",
                    "vt-comments-add",
                    "vt-file-scan-upload-url",
                    "vt-comments-get"
                ]
            }
        },
        {
            "VirusTotal - Private API": {
                "name": "VirusTotal - Private API",
                "file_path": "Integrations/VirusTotal-Private_API/VirusTotal-Private_API.yml",
                "commands": [
                    "vt-private-check-file-behaviour",
                    "vt-private-get-domain-report",
                    "vt-private-get-file-report",
                    "vt-private-get-url-report",
                    "vt-private-get-ip-report",
                    "vt-private-search-file",
                    "vt-private-hash-communication",
                    "vt-private-download-file"
                ],
                "tests": [
                    "virusTotalPrivateAPI-test-playbook",
                    "File Enrichment - Virus Total Private API Test"
                ]
            }
        },
        {
            "vmray": {
                "name": "vmray",
                "file_path": "Integrations/VMRay/VMRay.yml",
                "fromversion": "4.0.0",
                "commands": [
                    "vmray-upload-sample",
                    "vmray-get-analysis-by-sample",
                    "vmray-get-job-by-sample",
                    "vmray-get-submission",
                    "vmray-get-sample",
                    "vmray-get-threat-indicators",
                    "vmray-add-tag",
                    "vmray-delete-tag",
                    "vmray-get-iocs",
                    "vmray-get-job-by-id",
                    "get_job_sample",
                    "get_results",
                    "upload_sample"
                ],
                "deprecated_commands": [
                    "get_job_sample",
                    "get_results",
                    "upload_sample"
                ]
            }
        },
        {
            "VMware": {
                "name": "VMware",
                "file_path": "Integrations/integration-VMware.yml",
                "commands": [
                    "vmware-get-vms",
                    "vmware-poweron",
                    "vmware-poweroff",
                    "vmware-hard-reboot",
                    "vmware-suspend",
                    "vmware-soft-reboot",
                    "vmware-create-snapshot",
                    "vmware-revert-snapshot",
                    "vmware-get-events"
                ]
            }
        },
        {
            "VulnDB": {
                "name": "VulnDB",
                "file_path": "Integrations/VulnDB/VulnDB.yml",
                "commands": [
                    "vulndb-get-vuln-by-id",
                    "vulndb-get-vendor",
                    "vulndb-get-product",
                    "vulndb-get-version",
                    "vulndb-get-updates-by-dates-or-hours",
                    "vulndb-get-vuln-by-vendor-and-product-name",
                    "vulndb-get-vuln-by-vendor-and-product-id",
                    "vulndb-get-vuln-by-vendor-id",
                    "vulndb-get-vuln-by-product-id",
                    "vulndb-get-vuln-by-cve-id",
                    "cve"
                ],
                "tests": [
                    "Test-VulnDB"
                ]
            }
        },
        {
            "VxStream": {
                "name": "VxStream",
                "file_path": "Integrations/integration-CrowdStrikeFalconSandbox.yml",
                "commands": [
                    "vx-scan",
                    "crowdstrike-scan",
                    "vx-get-environments",
                    "crowdstrike-get-environments",
                    "vx-submit-sample",
                    "crowdstrike-submit-sample",
                    "vx-search",
                    "crowdstrike-search",
                    "vx-result",
                    "crowdstrike-result",
                    "vx-detonate-file",
                    "crowdstrike-detonate-file",
                    "crowdstrike-submit-url",
                    "crowdstrike-get-screenshots",
                    "crowdstrike-detonate-url",
                    "crowdstrike-submit-file-by-url"
                ],
                "tests": [
                    "VxStream Test",
                    "detonate_file_-_generic_test"
                ],
                "deprecated_commands": [
                    "vx-scan",
                    "vx-get-environments",
                    "vx-submit-sample",
                    "vx-search",
                    "vx-result",
                    "vx-detonate-file",
                    "crowdstrike-detonate-file",
                    "crowdstrike-detonate-url"
                ]
            }
        },
        {
            "WhatsMyBrowser": {
                "name": "WhatsMyBrowser",
                "file_path": "Integrations/WhatIsMyBrowser/WhatIsMyBrowser.yml",
                "commands": [
                    "ua-parse"
                ],
                "tests": [
                    "WhatsMyBrowser-Test"
                ]
            }
        },
        {
            "Where is the egg?": {
                "name": "Where is the egg?",
                "file_path": "Integrations/integration-WhereIsTheEgg.yml",
                "fromversion": "3.6.0",
                "commands": [
                    "clue"
                ],
                "tests": [
                    "No test"
                ]
            }
        },
        {
            "Whois": {
                "name": "Whois",
                "file_path": "Integrations/Whois/Whois.yml",
                "fromversion": "4.1.0",
                "commands": [
                    "whois",
                    "domain"
                ],
                "tests": [
                    "whois_test"
                ]
            }
        },
        {
            "WildFire": {
                "name": "WildFire",
                "file_path": "Integrations/integration-Wildfire.yml",
                "fromversion": "4.0.0",
                "commands": [
                    "file",
                    "wildfire-upload",
                    "wildfire-upload-file-url",
                    "wildfire-report",
                    "wildfire-get-verdict",
                    "wildfire-get-verdicts",
                    "wildfire-get-sample",
                    "wildfire-upload-file-remote",
                    "detonate-file",
                    "detonate-file-remote"
                ],
                "tests": [
                    "No test"
                ],
                "deprecated": true,
                "deprecated_commands": [
                    "file",
                    "wildfire-upload",
                    "wildfire-upload-file-url",
                    "wildfire-report",
                    "wildfire-get-verdict",
                    "wildfire-get-verdicts",
                    "wildfire-upload-file-remote",
                    "detonate-file",
                    "detonate-file-remote"
                ]
            }
        },
        {
            "WildFire": {
                "name": "WildFire",
                "file_path": "Integrations/integration-Wildfire_3_6_0.yml",
                "toversion": "3.6.0",
                "fromversion": "3.5.0",
                "commands": [
                    "wildfire-report",
                    "file",
                    "wildfire-upload",
                    "detonate-file",
                    "detonate-file-remote"
                ]
            }
        },
        {
            "WildFire": {
                "name": "WildFire",
                "file_path": "Integrations/integration-Wildfire_3_1_0.yml",
                "toversion": "3.1.0",
                "fromversion": "2.5.0",
                "commands": [
                    "wildfire-report",
                    "file",
                    "wildfire-upload",
                    "detonate-file",
                    "detonate-file-remote"
                ]
            }
        },
        {
            "WildFire-v2": {
                "name": "WildFire-v2",
                "file_path": "Integrations/Palo_Alto_Networks_WildFire_v2/Palo_Alto_Networks_WildFire_v2.yml",
                "fromversion": "4.0.0",
                "commands": [
                    "file",
                    "wildfire-upload",
                    "wildfire-upload-file-url",
                    "wildfire-report",
                    "wildfire-get-verdict",
                    "wildfire-get-verdicts",
                    "wildfire-upload-url",
                    "wildfire-get-sample"
                ],
                "tests": [
                    "Wildfire Test"
                ]
            }
        },
        {
            "Windows Defender Advanced Threat Protection": {
                "name": "Windows Defender Advanced Threat Protection",
                "file_path": "Integrations/WindowsDefenderAdvancedThreatProtection/WindowsDefenderAdvancedThreatProtection.yml",
                "commands": [
                    "microsoft-atp-isolate-machine",
                    "microsoft-atp-unisolate-machine",
                    "microsoft-atp-get-machines",
                    "microsoft-atp-get-file-related-machines",
                    "microsoft-atp-get-machine-details",
                    "microsoft-atp-run-antivirus-scan",
                    "microsoft-atp-list-alerts",
                    "microsoft-atp-update-alert",
                    "microsoft-atp-advanced-hunting",
                    "microsoft-atp-create-alert",
                    "microsoft-atp-get-alert-related-user"
                ],
                "tests": [
                    "Test - Windows Defender Advanced Threat Protection"
                ]
            }
        },
        {
            "XFE": {
                "name": "XFE",
                "file_path": "Integrations/integration-XFE.yml",
                "fromversion": "2.5.0",
                "commands": [
                    "url",
                    "file",
                    "ip",
                    "domain",
                    "cve-search",
                    "cve-latest"
                ],
                "tests": [
                    "XFE Test"
                ]
            }
        },
        {
            "XFE_v2": {
                "name": "XFE_v2",
                "file_path": "Packs/XForceExchange/Integrations/XFE_v2/XFE_v2.yml",
                "commands": [
                    "ip",
                    "url",
                    "file",
                    "domain",
                    "cve-search",
                    "cve-latest",
                    "xfe-whois",
                    "xfe-search-cves"
                ],
                "pack": "XForceExchange"
            }
        },
        {
            "Zendesk": {
                "name": "Zendesk",
                "file_path": "Integrations/integration-Zendesk.yml",
                "fromversion": "3.5.0",
                "commands": [
                    "zendesk-create-ticket",
                    "zendesk-list-tickets",
                    "zendesk-ticket-details",
                    "zendesk-update-ticket",
                    "zendesk-add-comment",
                    "zendesk-list-agents",
                    "zendesk-get-attachment",
                    "zendesk-clear-cache",
                    "zendesk-add-user",
                    "zendesk-get-article"
                ],
                "tests": [
                    "No test - tested manually Zendesk_test playbook"
                ]
            }
        },
        {
            "Zendesk": {
                "name": "Zendesk",
                "file_path": "Integrations/integration-Zendesk-old.yml",
                "toversion": "3.1.0",
                "commands": [
                    "zendesk-create-ticket",
                    "zendesk-list-tickets",
                    "zendesk-ticket-details",
                    "zendesk-update-ticket",
                    "zendesk-add-comment",
                    "zendesk-list-agents",
                    "zendesk-get-attachment",
                    "zendesk-clear-cache",
                    "zendesk-add-user",
                    "zendesk-get-article"
                ]
            }
        },
        {
            "ZeroFox": {
                "name": "ZeroFox",
                "file_path": "Integrations/ZeroFox/ZeroFox.yml",
                "commands": [
                    "zerofox-get-alert",
                    "zerofox-alert-user-assignment",
                    "zerofox-close-alert",
                    "zerofox-alert-request-takedown",
                    "zerofox-modify-alert-tags",
                    "zerofox-list-alerts",
                    "zerofox-create-entity",
                    "zerofox-alert-cancel-takedown",
                    "zerofox-open-alert",
                    "zerofox-list-entities",
                    "zerofox-get-entity-types",
                    "zerofox-get-policy-types"
                ],
                "tests": [
                    "ZeroFox-Test"
                ]
            }
        },
        {
            "Zoom": {
                "name": "Zoom",
                "file_path": "Integrations/integration-Zoom.yml",
                "commands": [
                    "zoom-create-user",
                    "zoom-create-meeting",
                    "zoom-fetch-recording",
                    "zoom-list-users",
                    "zoom-delete-user"
                ]
            }
        },
        {
            "Zscaler": {
                "name": "Zscaler",
                "file_path": "Packs/Zscaler/Integrations/Zscaler/Zscaler.yml",
                "commands": [
                    "zscaler-blacklist-url",
                    "url",
                    "ip",
                    "zscaler-undo-blacklist-url",
                    "zscaler-whitelist-url",
                    "zscaler-undo-whitelist-url",
                    "zscaler-undo-whitelist-ip",
                    "zscaler-whitelist-ip",
                    "zscaler-undo-blacklist-ip",
                    "zscaler-blacklist-ip",
                    "zscaler-category-add-url",
                    "zscaler-category-add-ip",
                    "zscaler-category-remove-url",
                    "zscaler-category-remove-ip",
                    "zscaler-get-categories",
                    "zscaler-get-blacklist",
                    "zscaler-get-whitelist",
                    "zscaler-sandbox-report"
                ],
                "tests": [
                    "Zscaler Test"
                ],
                "pack": "Zscaler"
            }
        }
    ],
    "TestPlaybooks": [
        {
            "2142f8de-29d5-4288-8426-0db39abe988b": {
                "name": "AWS - EC2 Test Playbook ",
                "file_path": "TestPlaybooks/playbook-AWS-EC2_test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "aws-ec2-describe-instances": "AWS - EC2",
                    "aws-ec2-describe-images": "AWS - EC2",
                    "aws-ec2-describe-regions": "AWS - EC2",
                    "aws-ec2-describe-addresses": "AWS - EC2",
                    "aws-ec2-describe-snapshots": "AWS - EC2",
                    "aws-ec2-describe-launch-templates": "AWS - EC2",
                    "aws-ec2-describe-key-pairs": "AWS - EC2",
                    "aws-ec2-describe-volumes": "AWS - EC2",
                    "aws-ec2-describe-vpcs": "AWS - EC2",
                    "aws-ec2-describe-subnets": "AWS - EC2",
                    "aws-ec2-describe-security-groups": "AWS - EC2"
                }
            }
        },
        {
            "2cddaacb-4e4c-407e-8ef5-d924867b810c": {
                "name": "AWS - CloudWatchLogs Test Playbook_copy",
                "file_path": "TestPlaybooks/playbook-AWS-CloudWatchLogs_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "GetTime",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "aws-logs-create-log-group": "AWS - CloudWatchLogs",
                    "aws-logs-put-log-events": "AWS - CloudWatchLogs",
                    "aws-logs-put-metric-filter": "AWS - CloudWatchLogs",
                    "aws-logs-delete-metric-filter": "AWS - CloudWatchLogs",
                    "aws-logs-describe-metric-filters": "AWS - CloudWatchLogs",
                    "aws-logs-describe-log-groups": "AWS - CloudWatchLogs",
                    "aws-logs-describe-log-streams": "AWS - CloudWatchLogs",
                    "aws-logs-put-retention-policy": "AWS - CloudWatchLogs",
                    "aws-logs-delete-retention-policy": "AWS - CloudWatchLogs",
                    "aws-logs-delete-log-group": "AWS - CloudWatchLogs",
                    "aws-logs-delete-log-stream": "AWS - CloudWatchLogs",
                    "aws-logs-create-log-stream": "AWS - CloudWatchLogs"
                }
            }
        },
        {
            "4078d8b6-37c6-42d7-8324-16096a2feb51": {
                "name": "AWS - Route53 Test Playbook",
                "file_path": "TestPlaybooks/playbook-AWS-Route53-Test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "aws-route53-create-record": "AWS - Route53",
                    "aws-route53-delete-record": "AWS - Route53",
                    "aws-route53-list-hosted-zones": "AWS - Route53",
                    "aws-route53-list-resource-record-sets": "AWS - Route53",
                    "aws-route53-waiter-resource-record-sets-changed": "AWS - Route53",
                    "aws-route53-test-dns-answer": "AWS - Route53",
                    "aws-route53-upsert-record": "AWS - Route53"
                }
            }
        },
        {
            "67b0f25f-b061-4468-8613-43ab13147173": {
                "name": "CbP-PlayBook",
                "file_path": "TestPlaybooks/playbook-CbP-PlayBook.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "cbp-connector-search": "carbonblackprotection",
                    "cbp-connector-get": "carbonblackprotection",
                    "cbp-fileAnalysis-createOrUpdate": "carbonblackprotection",
                    "cbp-fileAnalysis-get": "carbonblackprotection",
                    "cbp-fileUpload-createOrUpdate": "carbonblackprotection",
                    "cbp-fileUpload-get": "carbonblackprotection",
                    "cbp-fileUpload-download": "carbonblackprotection"
                }
            }
        },
        {
            "97393cfc-2fc4-4dfe-8b6e-af64067fc436": {
                "name": "AWS - S3 Test Playbook",
                "file_path": "TestPlaybooks/playbook-AWS-S3Test.yml",
                "implementing_scripts": [
                    "http",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "aws-s3-list-buckets": "AWS - S3",
                    "aws-s3-upload-file": "AWS - S3",
                    "aws-s3-download-file": "AWS - S3",
                    "aws-s3-get-bucket-policy": "AWS - S3",
                    "aws-s3-list-bucket-objects": "AWS - S3"
                }
            }
        },
        {
            "AbuseIPDB PopulateIndicators Test": {
                "name": "AbuseIPDB PopulateIndicators Test",
                "file_path": "TestPlaybooks/playbook-AbuseIPDBPopulateIndicators-test.yml",
                "implementing_scripts": [
                    "AbuseIPDBPopulateIndicators"
                ]
            }
        },
        {
            "AbuseIPDB Test": {
                "name": "AbuseIPDB Test",
                "file_path": "TestPlaybooks/playbook-AbuseIPDB-test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "ip": "AbuseIPDB",
                    "abuseipdb-report-ip": "",
                    "abuseipdb-check-cidr-block": "",
                    "abuseipdb-get-blacklist": ""
                }
            }
        },
        {
            "Account Enrichment - Generic v2 - Test": {
                "name": "Account Enrichment - Generic v2 - Test",
                "file_path": "TestPlaybooks/playbook-Account_Enrichment_-_Generic_v2_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Account Enrichment - Generic v2"
                ]
            }
        },
        {
            "Account Enrichment - Generic v2.1 - Test": {
                "name": "Account Enrichment - Generic v2.1 - Test",
                "file_path": "TestPlaybooks/playbook-Account_Enrichment_-_Generic_v2.1_-_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Account Enrichment - Generic v2.1"
                ]
            }
        },
        {
            "account_enrichment_-_generic_test": {
                "name": "Account Enrichment - Generic Test",
                "file_path": "TestPlaybooks/playbook-Account_Enrichment_-_Generic_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "VerifyContext",
                    "Set",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Account Enrichment - Generic"
                ]
            }
        },
        {
            "ACM-Test": {
                "name": "ACM-Test",
                "file_path": "TestPlaybooks/playbook-AWS-ACM.yml",
                "command_to_integration": {
                    "aws-acm-list-certificates": "AWS - ACM",
                    "aws-acm-describe-certificate": "AWS - ACM"
                }
            }
        },
        {
            "Active Directory - Get User Manager Details - Test": {
                "name": "Active Directory - Get User Manager Details - Test",
                "file_path": "Packs/Active_Directory_Query/TestPlaybooks/playbook-Active_Directory_-_Get_User_Manager_Email_-_Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Active Directory - Get User Manager Details"
                ],
                "pack": "Active_Directory_Query"
            }
        },
        {
            "Active Directory Query V2 configuration with port": {
                "name": "Active Directory Query V2 configuration with port",
                "file_path": "Packs/Active_Directory_Query/TestPlaybooks/playbook-Active_Directory_Query_V2_with_port_conf_Test.yml",
                "command_to_integration": {
                    "ad-get-user": ""
                },
                "pack": "Active_Directory_Query"
            }
        },
        {
            "Active Directory Test": {
                "name": "Active Directory Test",
                "file_path": "Packs/Active_Directory_Query/TestPlaybooks/playbook-Active_Directory_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "ad-create-user": "Active Directory Query v2",
                    "ad-add-to-group": "Active Directory Query v2",
                    "ad-update-contact": "Active Directory Query v2",
                    "ad-get-user": "Active Directory Query v2",
                    "ad-get-group-members": "Active Directory Query v2",
                    "ad-remove-from-group": "Active Directory Query v2",
                    "ad-delete-user": "Active Directory Query v2",
                    "ad-disable-account": "Active Directory Query v2",
                    "ad-enable-account": "Active Directory Query v2",
                    "ad-search": ""
                },
                "pack": "Active_Directory_Query"
            }
        },
        {
            "ActiveMQ Test": {
                "name": "ActiveMQ Test",
                "file_path": "Packs/ActiveMQ/TestPlaybooks/playbook-ActiveMQ_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "activemq-send": "ActiveMQ",
                    "activemq-subscribe": "ActiveMQ"
                },
                "pack": "ActiveMQ"
            }
        },
        {
            "AD v2 - debug-mode - Test": {
                "name": "AD v2 - debug-mode - Test",
                "file_path": "TestPlaybooks/playbook-AD_v2_-_debug-mode_-_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "ExecuteCommandGeneric",
                    "PrintErrorEntry",
                    "Print",
                    "DeleteContext",
                    "ReadFile"
                ]
            }
        },
        {
            "Akamai_WAF-Test": {
                "name": "Akamai_WAF-Test",
                "file_path": "TestPlaybooks/playbook-Akamai_WAF-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "PrintContext"
                ],
                "command_to_integration": {
                    "akamai-create-network-list": "",
                    "akamai-get-network-list-by-id": "",
                    "akamai-remove-element-from-network-list": "",
                    "akamai-add-elements-to-network-list": "",
                    "akamai-get-network-list-activation-status": "",
                    "akamai-delete-network-list": "",
                    "akamai-get-network-lists": ""
                }
            }
        },
        {
            "Akamai_WAF_SIEM-Test": {
                "name": "Akamai-WAF-SIEM_Test",
                "file_path": "TestPlaybooks/playbook-Akamai_WAF_SIEM-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "akamai-siem-get-events": ""
                }
            }
        },
        {
            "Alexa Test Playbook": {
                "name": "Alexa Test Playbook",
                "file_path": "TestPlaybooks/playbook-Alexa-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "domain": "Alexa Rank Indicator"
                }
            }
        },
        {
            "Alienvault_OTX_v2 - Test": {
                "name": "Alienvault_OTX_v2 - Test",
                "file_path": "TestPlaybooks/playbook-Alienvault_OTX_v2-test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "PrintContext"
                ],
                "command_to_integration": {
                    "ip": "AlienVault OTX v2",
                    "domain": "AlienVault OTX v2",
                    "alienvault-search-ipv6": "",
                    "alienvault-search-hostname": "",
                    "file": "AlienVault OTX v2",
                    "alienvault-search-cve": "",
                    "alienvault-get-related-urls-by-indicator": "",
                    "alienvault-get-passive-dns-data-by-indicator": "",
                    "alienvault-search-pulses": "",
                    "alienvault-get-pulse-details": "",
                    "url": "AlienVault OTX v2",
                    "alienvault-get-related-hashes-by-indicator": ""
                }
            }
        },
        {
            "AlienVaultOTX Test": {
                "name": "AlienVaultOTX Test",
                "file_path": "TestPlaybooks/playbook-AlienVaultOTX_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "url": "AlienVault OTX",
                    "ip": "AlienVault OTX",
                    "ipv6": "AlienVault OTX",
                    "domain": "AlienVault OTX"
                }
            }
        },
        {
            "AlienVaultReputationFeed_Test": {
                "name": "AlienVaultReputationFeed_Test",
                "file_path": "Packs/FeedAlienVault/TestPlaybooks/playbook-AlienVaultReputationFeed_Test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "alienvault-get-indicators": "AlienVault Reputation Feed"
                },
                "pack": "FeedAlienVault"
            }
        },
        {
            "AlienVaultUSMAnywhereTest": {
                "name": "AlienVaultUSMAnywhereTest",
                "file_path": "TestPlaybooks/playbook-AlienVaultUSMAnywhereTest.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "command_to_integration": {
                    "alienvault-search-alarms": "",
                    "alienvault-get-alarm": "",
                    "alienvault-get-events-by-alarm": "",
                    "alienvault-search-events": ""
                }
            }
        },
        {
            "AlphaSOC-Wisdom-Test": {
                "name": "AlphaSOC Wisdom Test",
                "file_path": "TestPlaybooks/playbook-AlphaSOC_Wisdom_Response_Test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "wisdom-domain-flags": "AlphaSOC Wisdom",
                    "wisdom-ip-flags": "AlphaSOC Wisdom"
                }
            }
        },
        {
            "Anomali_ThreatStream_Test": {
                "name": "Anomali ThreatStream Test",
                "file_path": "TestPlaybooks/playbook-Anomali_ThreatStream_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "threatstream-intelligence": "Anomali ThreatStream",
                    "ip": "Anomali ThreatStream",
                    "domain": "Anomali ThreatStream",
                    "file": "Anomali ThreatStream",
                    "threatstream-email-reputation": "Anomali ThreatStream"
                }
            }
        },
        {
            "ANYRUN-Test": {
                "name": "ANYRUN-Test",
                "file_path": "TestPlaybooks/playbook-ANYRUN-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "anyrun-get-history": "ANYRUN"
                }
            }
        },
        {
            "Archer-Test-Playbook": {
                "name": "Archer-Test-Playbook",
                "file_path": "TestPlaybooks/playbook-Archer_Playbook_Test.yml",
                "implementing_scripts": [
                    "VerifyContextFields",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "archer-create-record": "RSA Archer",
                    "archer-search-applications": "RSA Archer",
                    "archer-get-record": "RSA Archer",
                    "archer-get-application-fields": "RSA Archer",
                    "archer-update-record": "RSA Archer",
                    "archer-search-records": "RSA Archer",
                    "archer-delete-record": "RSA Archer"
                }
            }
        },
        {
            "ArcSight ESM v2 Test": {
                "name": "ArcSight ESM v2 Test",
                "file_path": "TestPlaybooks/playbook-ArcSight_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "as-get-all-cases": "",
                    "as-get-case-event-ids": "",
                    "as-get-case": "",
                    "as-update-case": "",
                    "as-get-entries": "",
                    "as-add-entries": "",
                    "as-get-all-query-viewers": "",
                    "as-clear-entries": "",
                    "as-get-query-viewer-results": ""
                }
            }
        },
        {
            "ArcSight Logger test": {
                "name": "ArcSight Logger test",
                "file_path": "TestPlaybooks/playbook-ArcsightLogger-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "as-search": "ArcSight Logger",
                    "as-drilldown": "ArcSight Logger",
                    "as-events": "ArcSight Logger",
                    "as-close": "ArcSight Logger",
                    "as-status": "ArcSight Logger",
                    "as-search-events": "ArcSight Logger"
                }
            }
        },
        {
            "AttackIQ - Test": {
                "name": "AttackIQ - Test",
                "file_path": "TestPlaybooks/playbook-AttackIQ_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "attackiq-activate-assessment": "",
                    "attackiq-get-assessment-execution-status": "",
                    "attackiq-get-test-results": "",
                    "attackiq-list-assessments": "",
                    "attackiq-list-tests-by-assessment": "",
                    "attackiq-get-assessment-by-id": "",
                    "attackiq-list-assessment-templates": "",
                    "attackiq-create-assessment": "",
                    "attackiq-list-assets": "",
                    "attackiq-add-assets-to-assessment": "",
                    "attackiq-delete-assessment": ""
                }
            }
        },
        {
            "AttivoBotsinkTest": {
                "name": "AttivoBotsinkTest",
                "file_path": "TestPlaybooks/playbook-AttivoBotsinkTest.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "attivo-list-hosts": "",
                    "attivo-list-users": "",
                    "attivo-check-user": "",
                    "attivo-check-host": "",
                    "attivo-list-playbooks": "",
                    "attivo-run-playbook": "",
                    "attivo-get-events": "",
                    "attivo-deploy-decoy": ""
                }
            }
        },
        {
            "Autoextract - Test": {
                "name": "Autoextract - Test",
                "file_path": "TestPlaybooks/playbook-Autoextract_-_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "autoextract_test"
                ]
            }
        },
        {
            "Autofocus Query Samples, Sessions and Tags Test Playbook": {
                "name": "Autofocus Query Samples, Sessions and Tags Test Playbook",
                "file_path": "TestPlaybooks/playbook-Autofocus_Query_Samples_and_Sessions_and_Tags_Test_Playbook.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "Autofocus Query Samples, Sessions and Tags"
                ]
            }
        },
        {
            "AutoFocus V2 test": {
                "name": "AutoFocus V2 test",
                "file_path": "TestPlaybooks/playbook-AutoFocus_V2_test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "autofocus-search-samples": "",
                    "autofocus-search-sessions": "",
                    "autofocus-samples-search-results": "",
                    "autofocus-sessions-search-results": "AutoFocus V2",
                    "autofocus-sample-analysis": "AutoFocus V2",
                    "autofocus-get-session-details": "AutoFocus V2",
                    "autofocus-top-tags-search": "AutoFocus V2",
                    "autofocus-top-tags-results": "AutoFocus V2",
                    "autofocus-tag-details": "AutoFocus V2",
                    "url": "AutoFocus V2",
                    "ip": "AutoFocus V2",
                    "file": "AutoFocus V2",
                    "domain": "AutoFocus V2"
                }
            }
        },
        {
            "autofocus_test": {
                "name": "Autofocus Test",
                "file_path": "TestPlaybooks/playbook-Autofocus_test.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "IsMaliciousIndicatorFound"
                ],
                "command_to_integration": {
                    "autofocus-search-samples": "",
                    "autofocus-search-sessions": "",
                    "file": "Autofocus"
                }
            }
        },
        {
            "awake_security_test_pb": {
                "name": "awake_security_test_pb",
                "file_path": "TestPlaybooks/playbook-Awake_Security_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "ip": "Awake Security",
                    "email": "Awake Security",
                    "domain": "Awake Security",
                    "device": "Awake Security",
                    "awake-query-domains": "",
                    "awake-query-activities": "",
                    "awake-query-devices": "",
                    "awake-pcap-download": ""
                }
            }
        },
        {
            "AWS Feed Test": {
                "name": "AWS Feed Test",
                "file_path": "Packs/FeedAWS/TestPlaybooks/playbook-FeedAWS_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "aws-get-indicators": "AWS Feed"
                },
                "pack": "FeedAWS"
            }
        },
        {
            "AWS-Lambda-Test (Read-Only)": {
                "name": "AWS-Lambda-Test (Read-Only)",
                "file_path": "TestPlaybooks/playbook-AWS-Lambda-Test-(Read-Only).yml",
                "command_to_integration": {
                    "aws-lambda-list-functions": "AWS - Lambda",
                    "aws-lambda-get-account-settings": "AWS - Lambda"
                }
            }
        },
        {
            "AWS_DynamoDB-Test": {
                "name": "AWS_DynamoDB-Test",
                "file_path": "TestPlaybooks/playbook-AWS-DynamoDB-Test.yml",
                "command_to_integration": {
                    "aws-dynamodb-list-tables": "Amazon DynamoDB",
                    "aws-dynamodb-list-backups": "Amazon DynamoDB",
                    "aws-dynamodb-describe-table": "Amazon DynamoDB",
                    "aws-dynamodb-describe-backup": "Amazon DynamoDB"
                }
            }
        },
        {
            "Azure Compute - Test": {
                "name": "Azure Compute - Test",
                "file_path": "TestPlaybooks/playbook-AzureComputeTest.yml",
                "command_to_integration": {
                    "azure-list-subscriptions": "Azure Compute v2",
                    "azure-list-resource-groups": "Azure Compute v2",
                    "azure-vm-list-instances": "Azure Compute v2",
                    "azure-vm-get-instance-details": "Azure Compute v2",
                    "azure-vm-start-instance": "Azure Compute v2"
                }
            }
        },
        {
            "Azure SecurityCenter - Test": {
                "name": "Azure SecurityCenter - Test",
                "file_path": "TestPlaybooks/playbook-AzureSCTestPlaybook.yml",
                "command_to_integration": {
                    "azure-sc-list-aps": "Azure Security Center v2",
                    "azure-sc-get-aps": "Azure Security Center v2",
                    "azure-sc-list-alert": "Azure Security Center v2",
                    "azure-sc-list-jit": "Azure Security Center v2",
                    "azure-sc-list-location": "Azure Security Center v2",
                    "azure-sc-list-storage": "Azure Security Center v2",
                    "azure-sc-update-aps": "Azure Security Center v2",
                    "azure-list-subscriptions": "Azure Security Center v2"
                }
            }
        },
        {
            "AzureFeed - Test": {
                "name": "AzureFeed - Test",
                "file_path": "Packs/FeedAzure/TestPlaybooks/playbook-FeedAzure_test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "azure-get-indicators": ""
                },
                "pack": "FeedAzure"
            }
        },
        {
            "BambenekConsultingFeed_Test": {
                "name": "BambenekConsultingFeed_Test",
                "file_path": "Packs/FeedBambenekConsulting/TestPlaybooks/playbook-FeedBambenekConsulting.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "bambenek-get-indicators": "Bambenek Consulting Feed"
                },
                "pack": "FeedBambenekConsulting"
            }
        },
        {
            "Base64 File in List Test": {
                "name": "Base64 File in List Test",
                "file_path": "TestPlaybooks/playbook-Base64_File_in_List_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "Base64ListToFile"
                ]
            }
        },
        {
            "Beta-Athena-Test": {
                "name": "Beta-Athena-Test",
                "file_path": "TestPlaybooks/playbook-AWS-Athena-Beta.yml",
                "command_to_integration": {
                    "aws-athena-start-query": ""
                }
            }
        },
        {
            "BeyondTrust-Test": {
                "name": "BeyondTrust-Test",
                "file_path": "TestPlaybooks/playbook-BeyondTrust-test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "beyondtrust-get-managed-accounts": "",
                    "beyondtrust-get-managed-systems": "",
                    "beyondtrust-create-release-request": "",
                    "beyondtrust-check-in-credentials": ""
                }
            }
        },
        {
            "BigFixTest": {
                "name": "BigFixTest",
                "file_path": "TestPlaybooks/playbook-BigFixTest.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "bigfix-get-sites": "BigFix",
                    "bigfix-get-site": "BigFix",
                    "bigfix-get-patches": "BigFix",
                    "bigfix-deploy-patch": "BigFix",
                    "bigfix-get-endpoints": "BigFix",
                    "bigfix-action-stop": "",
                    "bigfix-action-status": "",
                    "bigfix-action-delete": ""
                }
            }
        },
        {
            "block_indicators_-_generic_-_test": {
                "name": "Block Indicators - Generic - Test",
                "file_path": "TestPlaybooks/playbook-Block_Indicators_-_Generic_-_Test.yml",
                "implementing_playbooks": [
                    "Block Indicators - Generic"
                ]
            }
        },
        {
            "blockip_test_playbook": {
                "name": "blockip_test_playbook",
                "file_path": "TestPlaybooks/playbook-BlockIP_test.yml",
                "implementing_scripts": [
                    "BlockIP"
                ]
            }
        },
        {
            "Blocklist_de - Test": {
                "name": "Blocklist_de - Test",
                "file_path": "Packs/FeedBlocklist_de/TestPlaybooks/playbook-FeedBlocklist_de_test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "blocklist_de-get-indicators": ""
                },
                "pack": "FeedBlocklist_de"
            }
        },
        {
            "Bluecat Address Manager test": {
                "name": "Bluecat Address Manager test",
                "file_path": "TestPlaybooks/playbook-Bluecat_Address_Manager_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "bluecat-am-query-ip": "",
                    "bluecat-am-get-response-policies": "",
                    "bluecat-am-response-policy-add-domain": "",
                    "bluecat-am-search-response-policies-by-domain": "",
                    "bluecat-am-response-policy-remove-domain": "",
                    "bluecat-am-get-range-by-ip": ""
                }
            }
        },
        {
            "buildewsquery_test": {
                "name": "BuildEWSQuery Test",
                "file_path": "TestPlaybooks/playbook-BuildEWSQuery_Test.yml",
                "implementing_scripts": [
                    "BuildEWSQuery",
                    "VerifyContext"
                ]
            }
        },
        {
            "C2sec-Test": {
                "name": "C2sec-Test",
                "file_path": "TestPlaybooks/playbook-C2sec-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "irisk-add-domain": "",
                    "irisk-get-scan-results": "",
                    "irisk-get-domain-issues": "",
                    "irisk-get-scan-status": "",
                    "irisk-rescan-domain": ""
                }
            }
        },
        {
            "c48ce58e-79ec-460f-818e-8b41689453cd": {
                "name": "Test-URLhaus",
                "file_path": "TestPlaybooks/playbook-Test-URLhaus.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "url": "URLhaus",
                    "domain": "URLhaus",
                    "file": "URLhaus",
                    "urlhaus-download-sample": "URLhaus"
                }
            }
        },
        {
            "c7d68ad5MxToolbox_test": {
                "name": "MxToolbox_test",
                "file_path": "TestPlaybooks/playbook-MxToolbox_test.yml",
                "implementing_scripts": [
                    "Exists",
                    "ToTable",
                    "CloseInvestigation"
                ],
                "command_to_integration": {
                    "mxtoolbox": "MxToolBox"
                }
            }
        },
        {
            "Calculate Severity - Generic v2 - Test": {
                "name": "Calculate Severity - Generic v2 - Test",
                "file_path": "TestPlaybooks/playbook-Calculate_Severity_-_Generic_v2_-_Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Calculate Severity - Generic v2"
                ],
                "command_to_integration": {
                    "ad-get-user": "Active Directory Query v2",
                    "ad-get-computer": "Active Directory Query v2",
                    "minemeld-add-to-miner": "",
                    "url": "Palo Alto Minemeld"
                }
            }
        },
        {
            "Calculate Severity - Standard - Test": {
                "name": "Calculate Severity - Standard - Test",
                "file_path": "TestPlaybooks/playbook-Calculate_Severity_-_Standard_-_Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Calculate Severity - Standard"
                ],
                "command_to_integration": {
                    "minemeld-add-to-miner": "",
                    "url": "Palo Alto Minemeld"
                }
            }
        },
        {
            "calculate_severity_-_critical_assets_-_test": {
                "name": "Calculate Severity - Critical assets - Test",
                "file_path": "TestPlaybooks/playbook-Calculate_Severity_-_Critical_assets_-_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "ADGetUser"
                ],
                "implementing_playbooks": [
                    "Calculate Severity - Critical assets"
                ]
            }
        },
        {
            "CanaryTools Test": {
                "name": "CanaryTools Test",
                "file_path": "TestPlaybooks/playbook-CanaryTools_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "isError",
                    "IsTrue",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "canarytools-check-whitelist": "Thinkst Canary",
                    "canarytools-edit-alert-status": "Thinkst Canary",
                    "canarytools-list-canaries": "Thinkst Canary",
                    "canarytools-list-tokens": "Thinkst Canary",
                    "canarytools-get-token": "Thinkst Canary",
                    "canarytools-whitelist-ip": "Thinkst Canary"
                }
            }
        },
        {
            "CanaryTools Test": {
                "name": "CanaryTools Test",
                "file_path": "TestPlaybooks/playbook-CanaryTools_Test_4_0.yml",
                "toversion": "4.0.9",
                "implementing_scripts": [
                    "DeleteContext",
                    "isError",
                    "IsTrue"
                ],
                "command_to_integration": {
                    "canarytools-check-whitelist": "Thinkst Canary",
                    "canarytools-edit-alert-status": "Thinkst Canary",
                    "canarytools-list-canaries": "Thinkst Canary",
                    "canarytools-list-tokens": "Thinkst Canary",
                    "canarytools-get-token": "Thinkst Canary",
                    "canarytools-whitelist-ip": "Thinkst Canary"
                }
            }
        },
        {
            "Carbon Black Enterprise Protection V2 Test": {
                "name": "Carbon Black Enterprise Protection V2 Test",
                "file_path": "TestPlaybooks/playbook-CarbonBlackProtectV2-test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "cbp-connector-search": "CarbonBlackProtectionV2",
                    "cbp-connector-get": "CarbonBlackProtectionV2",
                    "cbp-computer-search": "CarbonBlackProtectionV2",
                    "cbp-computer-get": "CarbonBlackProtectionV2",
                    "cbp-fileCatalog-search": "CarbonBlackProtectionV2",
                    "cbp-fileInstance-search": "CarbonBlackProtectionV2",
                    "cbp-event-search": "CarbonBlackProtectionV2",
                    "cbp-fileRule-update": "CarbonBlackProtectionV2",
                    "cbp-fileRule-delete": "CarbonBlackProtectionV2",
                    "cbp-fileRule-get": "CarbonBlackProtectionV2",
                    "cbp-fileRule-search": "CarbonBlackProtectionV2",
                    "cbp-policy-search": "CarbonBlackProtectionV2",
                    "cbp-serverConfig-search": "CarbonBlackProtectionV2",
                    "cbp-publisher-search": "CarbonBlackProtectionV2",
                    "cbp-fileAnalysis-createOrUpdate": "CarbonBlackProtectionV2",
                    "cbp-fileAnalysis-get": "CarbonBlackProtectionV2",
                    "cbp-fileUpload-search": "CarbonBlackProtectionV2",
                    "cbp-fileUpload-get": "CarbonBlackProtectionV2",
                    "cbp-fileAnalysis-search": "CarbonBlackProtectionV2"
                }
            }
        },
        {
            "Carbon Black Enterprise Protection V2 Test": {
                "name": "Carbon Black Enterprise Protection V2 Test",
                "file_path": "TestPlaybooks/playbook-CarbonBlackProtectV2-test_4_0.yml",
                "toversion": "4.0.9",
                "command_to_integration": {
                    "cbp-connector-search": "CarbonBlackProtectionV2",
                    "cbp-connector-get": "CarbonBlackProtectionV2",
                    "cbp-computer-search": "CarbonBlackProtectionV2",
                    "cbp-computer-get": "CarbonBlackProtectionV2",
                    "cbp-fileCatalog-search": "CarbonBlackProtectionV2",
                    "cbp-fileInstance-search": "CarbonBlackProtectionV2",
                    "cbp-event-search": "CarbonBlackProtectionV2",
                    "cbp-fileRule-update": "CarbonBlackProtectionV2",
                    "cbp-fileRule-delete": "CarbonBlackProtectionV2",
                    "cbp-fileRule-get": "CarbonBlackProtectionV2",
                    "cbp-fileRule-search": "CarbonBlackProtectionV2",
                    "cbp-policy-search": "CarbonBlackProtectionV2",
                    "cbp-serverConfig-search": "CarbonBlackProtectionV2",
                    "cbp-publisher-search": "CarbonBlackProtectionV2",
                    "cbp-fileAnalysis-createOrUpdate": "CarbonBlackProtectionV2",
                    "cbp-fileAnalysis-get": "CarbonBlackProtectionV2",
                    "cbp-fileUpload-search": "CarbonBlackProtectionV2",
                    "cbp-fileUpload-get": "CarbonBlackProtectionV2",
                    "cbp-fileAnalysis-search": "CarbonBlackProtectionV2"
                }
            }
        },
        {
            "CarbonBlackLiveResponseTest": {
                "name": "Carbon Black Live Response Test",
                "file_path": "TestPlaybooks/playbook-Carbon_Black_Live_Response_Test.yml",
                "implementing_scripts": [
                    "TestCreateWordFile",
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "cb-session-close": "carbonblackliveresponse",
                    "cb-session-create-and-wait": "",
                    "cb-list-sessions": "",
                    "cb-push-file-to-endpoint": "",
                    "cb-get-file-from-endpoint": "",
                    "cb-file-delete-from-endpoint": "",
                    "cb-command-create-and-wait": "carbonblackliveresponse",
                    "cb-keepalive": "carbonblackliveresponse"
                }
            }
        },
        {
            "CarbonBlackResponseTest": {
                "name": "Carbon Black Response Test",
                "file_path": "TestPlaybooks/playbook-Carbon_Black_Response_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "command_to_integration": {
                    "cb-sensor-info": "",
                    "cb-quarantine-device": "",
                    "cb-binary": "",
                    "cb-block-hash": "",
                    "cb-unblock-hash": "",
                    "cb-get-hash-blacklist": "",
                    "cb-alert": "",
                    "cb-alert-update": "",
                    "cb-binary-get": "",
                    "cb-unquarantine-device": "",
                    "cb-watchlist-new": "",
                    "cb-watchlist-set": "",
                    "cb-watchlist-del": "",
                    "cb-get-processes": ""
                }
            }
        },
        {
            "CBFindIP - Test": {
                "name": "CBFindIP - Test",
                "file_path": "TestPlaybooks/playbook-CBFinfIP-test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "CBFindIP"
                ]
            }
        },
        {
            "Centreon-Test-Playbook": {
                "name": "Centreon-Test-Playbook",
                "file_path": "TestPlaybooks/playbook-Centreon_Test.yml",
                "command_to_integration": {
                    "centreon-get-host-status": "Centreon"
                }
            }
        },
        {
            "CheckDockerImageAvailableTest": {
                "name": "CheckDockerImageAvailableTest",
                "file_path": "TestPlaybooks/playbook-CheckDockerImageAvailableTest.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "PrintContext",
                    "CheckDockerImageAvailable"
                ]
            }
        },
        {
            "CheckPhish-Test": {
                "name": "CheckPhish-Test",
                "file_path": "TestPlaybooks/playbook-CheckPhish-Test.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "Print"
                ],
                "command_to_integration": {
                    "CheckPhish-check-urls": "CheckPhish"
                }
            }
        },
        {
            "CheckpointFW-test": {
                "name": "CheckpointFW-test",
                "file_path": "TestPlaybooks/playbook-Checkpoint-FW-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "checkpoint-show-access-rule-base": "",
                    "checkpoint-set-rule": "",
                    "checkpoint-show-hosts": ""
                }
            }
        },
        {
            "Cherwell - test": {
                "name": "Cherwell - test",
                "file_path": "TestPlaybooks/playbook-Cherwell_-_test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "FetchFromInstance",
                    "FileCreateAndUpload"
                ],
                "command_to_integration": {
                    "cherwell-create-business-object": "",
                    "cherwell-update-business-object": "",
                    "cherwell-get-business-object": "",
                    "cherwell-upload-attachment": "",
                    "cherwell-get-attachments-info": "",
                    "cherwell-download-attachments": "",
                    "cherwell-remove-attachment": "",
                    "cherwell-link-business-objects": "",
                    "cherwell-unlink-business-objects": "",
                    "cherwell-query-business-object": "",
                    "cherwell-get-field-info": "",
                    "cherwell-delete-business-object": "",
                    "cherwell-get-business-object-id": "",
                    "cherwell-run-saved-search": ""
                }
            }
        },
        {
            "Cherwell Example Scripts - test": {
                "name": "Cherwell Example Scripts - test",
                "file_path": "TestPlaybooks/playbook-Cherwell_Example_Scripts_-_test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "CherwellIncidentOwnTask",
                    "CherwellCreateIncident",
                    "CherwellQueryIncidents",
                    "CherwellGetIncident",
                    "CherwellUpdateIncident",
                    "CherwellIncidentUnlinkTask"
                ],
                "command_to_integration": {
                    "cherwell-create-business-object": "",
                    "cherwell-get-business-object": "",
                    "cherwell-delete-business-object": ""
                }
            }
        },
        {
            "CirclIntegrationTest": {
                "name": "CIRCL Test",
                "file_path": "TestPlaybooks/playbook-CIRCL.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "isError",
                    "VerifyHumanReadableContains"
                ],
                "command_to_integration": {
                    "circl-dns-get": "CIRCL",
                    "circl-ssl-get-certificate": "",
                    "circl-ssl-list-certificates": "CIRCL",
                    "circl-ssl-query-certificate": ""
                }
            }
        },
        {
            "Cisco Umbrella Test": {
                "name": "Cisco Umbrella Test",
                "file_path": "TestPlaybooks/playbook-Cisco-Umbrella-Python-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "umbrella-domain-categorization": "",
                    "umbrella-domain-co-occurrences": "",
                    "umbrella-domain-related": "",
                    "umbrella-domain-security": "",
                    "umbrella-domain-dns-history": "",
                    "umbrella-ip-dns-history": "",
                    "umbrella-ip-malicious-domains": "",
                    "umbrella-domain-search": "",
                    "domain": "Cisco Umbrella Investigate",
                    "umbrella-get-related-domains": "",
                    "umbrella-get-domain-classifiers": "",
                    "umbrella-get-domain-queryvolume": "",
                    "umbrella-get-domain-details": "",
                    "umbrella-get-domains-for-email-registrar": "",
                    "umbrella-get-domains-for-nameserver": "",
                    "umbrella-get-whois-for-domain": "",
                    "umbrella-get-malicious-domains-for-ip": "",
                    "umbrella-get-domains-using-regex": "",
                    "umbrella-get-domain-timeline": "",
                    "umbrella-get-ip-timeline": "",
                    "umbrella-get-url-timeline": ""
                }
            }
        },
        {
            "cisco-ise-test-playbook": {
                "name": "cisco-ise-test-playbook",
                "file_path": "TestPlaybooks/playbook-cisco-ise-test-playbook.yml",
                "implementing_scripts": [
                    "GenerateRandomString"
                ],
                "command_to_integration": {
                    "cisco-ise-get-endpoints": "",
                    "cisco-ise-get-endpoint-id": "",
                    "cisco-ise-get-policies": "",
                    "cisco-ise-get-policy": "",
                    "cisco-ise-get-groups": "",
                    "cisco-ise-create-policy": "",
                    "cisco-ise-get-endpoint-details": ""
                }
            }
        },
        {
            "Cisco-Meraki-Test": {
                "name": "Cisco-Meraki-Test",
                "file_path": "TestPlaybooks/playbook-Cisco-Meraki-Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "meraki-fetch-organizations": "",
                    "meraki-get-organization-license-state": "",
                    "meraki-fetch-organization-inventory": "",
                    "meraki-fetch-networks": "",
                    "meraki-fetch-devices": ""
                }
            }
        },
        {
            "Claroty - Test": {
                "name": "Claroty - Test",
                "file_path": "Packs/Claroty/TestPlaybooks/playbook-Claroty-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "claroty-get-assets": "",
                    "claroty-query-alerts": "",
                    "claroty-resolve-alert": "",
                    "claroty-get-single-alert": ""
                },
                "pack": "Claroty"
            }
        },
        {
            "Cloaken-Test": {
                "name": "Cloaken-Test",
                "file_path": "TestPlaybooks/playbook-Cloaken-Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry"
                ],
                "command_to_integration": {
                    "cloaken-unshorten-url": "",
                    "cloaken-screenshot-url": ""
                }
            }
        },
        {
            "cloudflare - Test": {
                "name": "cloudflare - Test",
                "file_path": "Packs/FeedCloudflare/TestPlaybooks/playbook-FeedCloudflare-test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "cloudflare-get-indicators": ""
                },
                "pack": "FeedCloudflare"
            }
        },
        {
            "CloudShark - Test Playbook": {
                "name": "CloudShark - Test Playbook",
                "file_path": "TestPlaybooks/playbook-CloudShark-Test.yml",
                "implementing_scripts": [
                    "Exists",
                    "http"
                ],
                "command_to_integration": {
                    "cloudshark-upload": "CloudShark",
                    "cloudshark-download": "CloudShark",
                    "cloudshark-info": "CloudShark",
                    "cloudshark-delete": "CloudShark"
                }
            }
        },
        {
            "Code42 File Search Test": {
                "name": "Code42 File Search Test",
                "file_path": "Packs/Code42/TestPlaybooks/playbook-Code42-File-Search-Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Code42 File Search"
                ],
                "pack": "Code42"
            }
        },
        {
            "Code42-Test": {
                "name": "Code42-Test",
                "file_path": "Packs/Code42/TestPlaybooks/playbook-Code42-Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "code42-alert-get": "Code42",
                    "code42-alert-resolve": "Code42",
                    "code42-departingemployee-add": "Code42",
                    "code42-departingemployee-remove": "Code42",
                    "code42-securitydata-search": "Code42"
                },
                "pack": "Code42"
            }
        },
        {
            "Cofense Triage Test": {
                "name": "Cofense Triage Test",
                "file_path": "TestPlaybooks/playbook-cofense_triage-test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "cofense-get-report-by-id": "",
                    "cofense-get-attachment": "",
                    "cofense-search-reports": "",
                    "cofense-get-reporter": ""
                }
            }
        },
        {
            "CompareIncidentsLabels-test-playbook": {
                "name": "CompareIncidentsLabels test playbook",
                "file_path": "TestPlaybooks/playbook-ComapreIncidentsLabels.yml",
                "implementing_scripts": [
                    "CompareIncidentsLabels",
                    "Sleep"
                ]
            }
        },
        {
            "ContextGetters_Test": {
                "name": "ContextGetters_Test",
                "file_path": "TestPlaybooks/playbook-ContextGetters-Test.yml",
                "implementing_scripts": [
                    "ContextGetEmails",
                    "ContextGetIps",
                    "ExtractHash",
                    "ExtractIP",
                    "ContextGetHashes",
                    "ExtractEmail",
                    "IsTrue"
                ]
            }
        },
        {
            "ConvertFile-Test": {
                "name": "ConvertFile-Test",
                "file_path": "TestPlaybooks/playbook-ConvertFile-Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "ConvertFile",
                    "DeleteContext",
                    "http",
                    "ReadPDFFileV2",
                    "ReadFile"
                ]
            }
        },
        {
            "ConvertKeysToTableFieldFormat_Test": {
                "name": "ConvertKeysToTableFieldFormat Test",
                "file_path": "TestPlaybooks/playbook-ConvertKeysToTableFieldFormat_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "isError",
                    "DeleteContext",
                    "ParseJSON",
                    "ConvertKeysToTableFieldFormat"
                ]
            }
        },
        {
            "CopyContextToFieldTest": {
                "name": "CopyContextToFieldTest",
                "file_path": "TestPlaybooks/playbook-CopyContextToFieldTest.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set",
                    "CopyContextToField",
                    "Sleep"
                ]
            }
        },
        {
            "CounterCraft - Test": {
                "name": "CounterCraft - Test",
                "file_path": "TestPlaybooks/playbook-CounterCraft-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "countercraft-get-object": "CounterCraft Deception Director",
                    "countercraft-list-campaigns": "CounterCraft Deception Director"
                }
            }
        },
        {
            "Create Phishing Classifier V2 ML Test": {
                "name": "Create Phishing Classifier V2 ML Test",
                "file_path": "TestPlaybooks/playbook-Create_Phishing_Classifier_V2_ML_Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "TestCreateIncidentsForPhishingClassifier",
                    "DeleteContext",
                    "DBotPredictPhishingWords"
                ],
                "implementing_playbooks": [
                    "DBot Create Phishing Classifier V2"
                ]
            }
        },
        {
            "CreateEmailHtmlBody_test_pb": {
                "name": "CreateEmailHtmlBody_test_pb",
                "file_path": "TestPlaybooks/playbook-CreateEmailHtmlBody_test_pb.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "CreateEmailHtmlBody"
                ]
            }
        },
        {
            "CreateIndicatorFromSTIXTest": {
                "name": "CreateIndicatorFromSTIXTest",
                "file_path": "TestPlaybooks/playbook-CreateIndicatorFromSTIXTest.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "http",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "CreateIndicatorsFromSTIX": "CreateIndicatorsFromSTIX"
                }
            }
        },
        {
            "CreatePhishingClassifierMLTest": {
                "name": "Create Phishing Classifier ML Test",
                "file_path": "TestPlaybooks/playbook-TestCreatePhishingClassifierML.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext",
                    "TestCreateTagTextFile",
                    "TestCreateIncidents",
                    "DBotPredictPhishingLabel"
                ],
                "implementing_playbooks": [
                    "DBot Create Phishing Classifier"
                ]
            }
        },
        {
            "CrowdStrike Endpoint Enrichment - Test": {
                "name": "CrowdStrike Endpoint Enrichment - Test",
                "file_path": "TestPlaybooks/playbook-CrowdStrike_Endpoint_Enrichment_-_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "CrowdStrike Endpoint Enrichment"
                ],
                "command_to_integration": {
                    "cs-device-search": "FalconHost",
                    "cs-detection-search": "FalconHost"
                }
            }
        },
        {
            "CrowdStrike Falcon Intel v2": {
                "name": "CrowdStrike Falcon Intel v2",
                "file_path": "TestPlaybooks/playbook-CrowdStrike_Intel_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "ip": "FalconIntel",
                    "file": "FalconIntel",
                    "url": "FalconIntel",
                    "domain": "FalconIntel",
                    "cs-actors": "",
                    "cs-indicators": "",
                    "cs-reports": ""
                }
            }
        },
        {
            "crowdstrike_falconhost_test": {
                "name": "CrowdStrike FalconHost Test",
                "file_path": "TestPlaybooks/playbook-CrowdStrike_FalconHost_test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "cs-device-search": "FalconHost",
                    "cs-device-details": "FalconHost",
                    "cs-device-ran-on": "FalconHost",
                    "cs-detection-details": "",
                    "cs-resolve-detection": "",
                    "cs-detection-search": ""
                }
            }
        },
        {
            "CSV_Feed_Test": {
                "name": "CSV_Feed_Test",
                "file_path": "Packs/FeedCSV/TestPlaybooks/playbook-CSV_Feed_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "csv-get-indicators": "CSVFeed"
                },
                "pack": "FeedCSV"
            }
        },
        {
            "CuckooTest": {
                "name": "CuckooTest",
                "file_path": "TestPlaybooks/playbook-Cuckoo-Test.yml",
                "implementing_scripts": [
                    "http",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Detonate File - Cuckoo",
                    "Detonate URL - Cuckoo"
                ]
            }
        },
        {
            "CutTransformerTest": {
                "name": "CutTransformerTest",
                "file_path": "TestPlaybooks/playbook-CutTransformerTest.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ]
            }
        },
        {
            "CVE Search v2 - Test": {
                "name": "CVE Search v2 - Test",
                "file_path": "Packs/CVESearchV2/TestPlaybooks/playbook-CVE-Search-Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "cve-latest": "CVE Search v2",
                    "cve": "CVE Search v2"
                },
                "pack": "CVESearchV2"
            }
        },
        {
            "cve_enrichment_-_generic_-_test": {
                "name": "CVE Enrichment - Generic - Test",
                "file_path": "TestPlaybooks/playbook-CVE_Enrichment_-_Generic_-_Test.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "Set"
                ],
                "implementing_playbooks": [
                    "CVE Enrichment - Generic"
                ]
            }
        },
        {
            "cveReputation Test": {
                "name": "cveReputation Test",
                "file_path": "TestPlaybooks/playbook-CveReputation_Test.yml",
                "implementing_scripts": [
                    "cveReputation",
                    "VerifyHumanReadableContains"
                ]
            }
        },
        {
            "Cybereason Test": {
                "name": "Cybereason Test",
                "file_path": "TestPlaybooks/playbook-Cybereason_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "FetchFromInstance",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "cybereason-is-probe-connected": "Cybereason",
                    "cybereason-query-connections": "Cybereason",
                    "cybereason-query-processes": "Cybereason",
                    "cybereason-query-malops": "Cybereason",
                    "cybereason-malop-processes": "Cybereason",
                    "cybereason-query-file": "Cybereason",
                    "cybereason-query-domain": "",
                    "cybereason-query-user": ""
                }
            }
        },
        {
            "Cylance Protect v2 Test": {
                "name": "Cylance Protect v2 Test",
                "file_path": "TestPlaybooks/playbook-Cylance_Protect_v2_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "cylance-protect-get-devices": "",
                    "cylance-protect-get-device-threats": "",
                    "cylance-protect-get-list": "",
                    "cylance-protect-get-policies": "",
                    "cylance-protect-get-zones": "",
                    "cylance-protect-get-threat": "",
                    "cylance-protect-download-threat": "",
                    "cylance-protect-add-hash-to-list": "",
                    "cylance-protect-delete-hash-from-lists": "",
                    "cylance-protect-get-policy-details": ""
                }
            }
        },
        {
            "Cymulate Immediate Threats": {
                "name": "Cymulate Immediate Threats",
                "file_path": "Packs/Cymulate/TestPlaybooks/playbook-CymulateTest.yml",
                "implementing_scripts": [
                    "Exists"
                ],
                "pack": "Cymulate"
            }
        },
        {
            "d5cb69b1-c81c-4f27-8a40-3106c0cb2620": {
                "name": "AWS - IAM Test Playbook",
                "file_path": "TestPlaybooks/playbook-AWS-IAM-Test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "aws-iam-create-user": "AWS - IAM",
                    "aws-iam-get-user": "AWS - IAM",
                    "aws-iam-list-users": "AWS - IAM",
                    "aws-iam-update-user": "AWS - IAM",
                    "aws-iam-delete-user": "AWS - IAM",
                    "aws-iam-create-group": "AWS - IAM",
                    "aws-iam-list-groups": "AWS - IAM",
                    "aws-iam-list-groups-for-user": "AWS - IAM",
                    "aws-iam-add-user-to-group": "AWS - IAM",
                    "aws-iam-create-access-key": "AWS - IAM",
                    "aws-iam-update-access-key": "AWS - IAM",
                    "aws-iam-list-access-keys-for-user": "AWS - IAM",
                    "aws-iam-list-policies": "AWS - IAM",
                    "aws-iam-list-roles": "AWS - IAM",
                    "aws-iam-attach-policy": "AWS - IAM",
                    "aws-iam-detach-policy": "AWS - IAM",
                    "aws-iam-delete-group": "AWS - IAM",
                    "aws-iam-remove-user-from-group": "AWS - IAM",
                    "aws-iam-delete-access-key": "AWS - IAM",
                    "aws-iam-create-instance-profile": "AWS - IAM",
                    "aws-iam-delete-instance-profile": "AWS - IAM",
                    "aws-iam-list-instance-profiles": "AWS - IAM",
                    "aws-iam-add-role-to-instance-profile": "AWS - IAM",
                    "aws-iam-remove-role-from-instance-profile": "AWS - IAM",
                    "aws-iam-list-instance-profiles-for-role": "AWS - IAM",
                    "aws-iam-get-instance-profile": "AWS - IAM",
                    "aws-iam-get-role": "AWS - IAM",
                    "aws-iam-delete-role": "AWS - IAM",
                    "aws-iam-create-role": "AWS - IAM"
                }
            }
        },
        {
            "d66e5f86-e045-403f-819e-5058aa603c32": {
                "name": "AWS - EC2 Test Playbook actions",
                "file_path": "TestPlaybooks/playbook-AWS-EC2Test_actions.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "aws-ec2-allocate-address": "AWS - EC2",
                    "aws-ec2-associate-address": "AWS - EC2",
                    "aws-ec2-create-snapshot": "AWS - EC2",
                    "aws-ec2-delete-snapshot": "AWS - EC2",
                    "aws-ec2-create-image": "AWS - EC2",
                    "aws-ec2-deregister-image": "AWS - EC2",
                    "aws-ec2-modify-volume": "AWS - EC2",
                    "aws-ec2-create-tags": "AWS - EC2",
                    "aws-ec2-disassociate-address": "AWS - EC2",
                    "aws-ec2-release-address": "AWS - EC2",
                    "aws-ec2-start-instances": "AWS - EC2",
                    "aws-ec2-stop-instances": "AWS - EC2",
                    "aws-ec2-terminate-instances": "AWS - EC2",
                    "aws-ec2-create-volume": "AWS - EC2",
                    "aws-ec2-attach-volume": "AWS - EC2",
                    "aws-ec2-detach-volume": "AWS - EC2",
                    "aws-ec2-delete-volume": "AWS - EC2",
                    "aws-ec2-run-instances": "AWS - EC2",
                    "aws-ec2-waiter-instance-running": "AWS - EC2",
                    "aws-ec2-waiter-instance-status-ok": "AWS - EC2",
                    "aws-ec2-waiter-instance-stopped": "AWS - EC2",
                    "aws-ec2-waiter-instance-terminated": "AWS - EC2",
                    "aws-ec2-waiter-image-available": "AWS - EC2",
                    "aws-ec2-waiter-snapshot_completed": "AWS - EC2",
                    "aws-ec2-get-latest-ami": "AWS - EC2",
                    "aws-ec2-create-security-group": "AWS - EC2",
                    "aws-ec2-delete-security-group": "AWS - EC2",
                    "aws-ec2-authorize-security-group-ingress-rule": "AWS - EC2",
                    "aws-ec2-revoke-security-group-ingress-rule": "AWS - EC2",
                    "aws-ec2-describe-instances": "AWS - EC2",
                    "aws-ec2-reboot-instances": "AWS - EC2_copy",
                    "aws-ec2-unmonitor-instances": "AWS - EC2_copy",
                    "aws-ec2-monitor-instances": "AWS - EC2_copy",
                    "aws-ec2-copy-image": "AWS - EC2_copy",
                    "aws-ec2-copy-snapshot": "AWS - EC2_copy",
                    "aws-ec2-modify-instance-attribute": "AWS - EC2_copy",
                    "aws-ec2-modify-network-interface-attribute": "AWS - EC2_copy"
                }
            }
        },
        {
            "DbotPredictOufOfTheBoxTest": {
                "name": "DbotPredictOufOfTheBoxTest",
                "file_path": "TestPlaybooks/playbook-DBotPredictOutOfTheBox-test.yml",
                "implementing_scripts": [
                    "DBotPredictOutOfTheBox",
                    "DeleteContext"
                ]
            }
        },
        {
            "decodemimeheader_-_test": {
                "name": "DecodeMimeHeader - Test",
                "file_path": "TestPlaybooks/playbook-DecodeMimeHeader_-_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "VerifyContext",
                    "DecodeMimeHeader",
                    "DeleteContext"
                ]
            }
        },
        {
            "Dedup - Generic v2 - Test": {
                "name": "Dedup - Generic v2 - Test",
                "file_path": "TestPlaybooks/playbook-Dedup_-_Generic_v2_-_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "CreateDuplicateIncident"
                ],
                "implementing_playbooks": [
                    "Dedup - Generic v2"
                ]
            }
        },
        {
            "dedup_-_generic_-_test": {
                "name": "Dedup - Generic - Test",
                "file_path": "TestPlaybooks/playbook-Dedup_-_Generic_-_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "CreateDuplicateIncident"
                ],
                "implementing_playbooks": [
                    "Dedup - Generic"
                ]
            }
        },
        {
            "Default - Test": {
                "name": "Default - Test",
                "file_path": "TestPlaybooks/playbook-Default_5.0_-_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "ScheduleCommand"
                ],
                "implementing_playbooks": [
                    "Default"
                ]
            }
        },
        {
            "DeleteContext-auto-subplaybook-test": {
                "name": "DeleteContext-auto-subplaybook-test",
                "file_path": "TestPlaybooks/playbook-DeleteContext-auto-subplaybook-test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "Print",
                    "DeleteContext",
                    "Set"
                ]
            }
        },
        {
            "DeleteContext-auto-test": {
                "name": "DeleteContext-auto-test",
                "file_path": "TestPlaybooks/playbook-DeleteContext-auto-test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "DeleteContext-auto-subplaybook-test"
                ]
            }
        },
        {
            "DemistoLockTest": {
                "name": "DemistoLockTest",
                "file_path": "TestPlaybooks/playbook-DemistoLockingTest.yml",
                "implementing_scripts": [
                    "Print",
                    "isError",
                    "DeleteContext",
                    "Set",
                    "Sleep"
                ],
                "command_to_integration": {
                    "demisto-lock-info": "Demisto Lock",
                    "demisto-lock-get": "Demisto Lock",
                    "demisto-lock-release": "Demisto Lock",
                    "demisto-lock-release-all": "Demisto Lock"
                }
            }
        },
        {
            "DemistoUploadFile Test": {
                "name": "DemistoUploadFile Test",
                "file_path": "TestPlaybooks/playbook-DemistoUploadFile-test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "commentsToContext",
                    "http",
                    "DemistoUploadFile"
                ]
            }
        },
        {
            "DemistoUploadFileToIncident Test": {
                "name": "DemistoUploadFileToIncident Test",
                "file_path": "TestPlaybooks/playbook-DemistoUploadFileToIncident-test.yml",
                "implementing_scripts": [
                    "commentsToContext",
                    "http",
                    "DemistoUploadFileToIncident",
                    "DeleteContext"
                ]
            }
        },
        {
            "Detonate File - ANYRUN - Test": {
                "name": "Detonate File - ANYRUN - Test",
                "file_path": "TestPlaybooks/playbook-Detonate_File_-_ANYRUN_-_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "http"
                ],
                "implementing_playbooks": [
                    "Detonate File - ANYRUN"
                ]
            }
        },
        {
            "Detonate File - BitDam Test": {
                "name": "Detonate File - BitDam Test",
                "file_path": "TestPlaybooks/playbook-BitDam_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "FileCreateAndUpload"
                ],
                "implementing_playbooks": [
                    "Detonate File - BitDam"
                ]
            }
        },
        {
            "Detonate File - FireEye AX - Test": {
                "name": "Detonate File - FireEye AX - Test",
                "file_path": "TestPlaybooks/playbook-Detonate_File_-_FireEye_AX_-_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "http"
                ],
                "implementing_playbooks": [
                    "Detonate File - FireEye AX"
                ]
            }
        },
        {
            "Detonate File - Generic Test": {
                "name": "Detonate File - Generic Test",
                "file_path": "TestPlaybooks/playbook-Detonate_File_-_Generic_Test.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "http",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Detonate File - Generic"
                ]
            }
        },
        {
            "Detonate File - HybridAnalysis - Test": {
                "name": "Detonate File - HybridAnalysis - Test",
                "file_path": "TestPlaybooks/playbook-Detonate_File_-_HybridAnalysis_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "http"
                ],
                "implementing_playbooks": [
                    "Detonate File - HybridAnalysis"
                ]
            }
        },
        {
            "Detonate File - No Files test": {
                "name": "Detonate File - No Files test",
                "file_path": "TestPlaybooks/playbook-Detonate_File_-_No_Files_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Detonate File - Generic"
                ]
            }
        },
        {
            "Detonate File - SNDBOX - Test": {
                "name": "Detonate File - SNDBOX - Test",
                "file_path": "TestPlaybooks/playbook-Detonate_File_-_SNDBOX_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "http"
                ],
                "implementing_playbooks": [
                    "Detonate File - SNDBOX"
                ]
            }
        },
        {
            "Detonate File From URL - ANYRUN - Test": {
                "name": "Detonate File From URL - ANYRUN - Test",
                "file_path": "TestPlaybooks/playbook-Detonate_File_From_URL_-_ANYRUN_-_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Detonate File From URL - ANYRUN"
                ]
            }
        },
        {
            "Detonate URL - ANYRUN - Test": {
                "name": "Detonate URL - ANYRUN - Test",
                "file_path": "TestPlaybooks/playbook-Detonate_URL_-_ANYRUN_-_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Detonate URL - ANYRUN"
                ]
            }
        },
        {
            "Detonate URL - Generic Test": {
                "name": "Detonate URL - Generic Test",
                "file_path": "TestPlaybooks/playbook-Detonate_URL_-_Generic_Test.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Detonate URL - Generic"
                ]
            }
        },
        {
            "Detonate URL - WildFire-v2 - Test": {
                "name": "Detonate URL - WildFire-v2 - Test",
                "file_path": "TestPlaybooks/playbook-Detonate_URL_-_WildFire-v2_-_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Detonate URL - WildFire-v2"
                ],
                "command_to_integration": {
                    "wildfire-report": "WildFire-v2"
                }
            }
        },
        {
            "detonate_file_-_generic_test": {
                "name": "Detonate File - Generic Test",
                "file_path": "TestPlaybooks/playbook-Detonate_File_-_Generic_Test-3.6.0.yml",
                "toversion": "3.6.0",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "http",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Detonate File - Generic"
                ]
            }
        },
        {
            "devo_test_playbook": {
                "name": "Devo test playbook",
                "file_path": "TestPlaybooks/playbook-Devo_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "devo-query": "Devo"
                }
            }
        },
        {
            "Digital Defense FrontlineVM - Scan Asset Not Recently Scanned Test": {
                "name": "Digital Defense FrontlineVM - Scan Asset Not Recently Scanned Test",
                "file_path": "TestPlaybooks/playbook-Digital_Defense_FrontlineVM_-_Scan_Asset_Not_Recently_Scanned_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Digital Defense FrontlineVM - Scan Asset Not Recently Scanned"
                ]
            }
        },
        {
            "Digital Defense FrontlineVM - Test Playbook": {
                "name": "Digital Defense FrontlineVM - Test Playbook",
                "file_path": "TestPlaybooks/playbook-Digital_Defense_FrontlineVM_-_Test_Playbook.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "frontline-get-assets": "",
                    "frontline-get-vulns": ""
                }
            }
        },
        {
            "Digital Shadows - Test": {
                "name": "Digital Shadows - Test",
                "file_path": "TestPlaybooks/playbook-Digital_Shadows_-_Test.yml",
                "command_to_integration": {
                    "ds-find-incidents-filtered": "Digital Shadows",
                    "ds-find-ports": "Digital Shadows",
                    "ds-find-vulnerabilities": "Digital Shadows"
                }
            }
        },
        {
            "DNSDBTest": {
                "name": "DNSDBTest",
                "file_path": "TestPlaybooks/playbook-DNSDB-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "dnsdb-rrset": "Farsight DNSDB_copy",
                    "dnsdb-rdata": "Farsight DNSDB_copy"
                }
            }
        },
        {
            "dnstwistTest": {
                "name": "dnstwistTest",
                "file_path": "TestPlaybooks/playbook-dnstwist_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "dnstwist-domain-variations": "dnstwist"
                }
            }
        },
        {
            "Docker Hardening Test": {
                "name": "Docker Hardening Test",
                "file_path": "TestPlaybooks/playbook-Docker_Hardening_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "Print",
                    "isError",
                    "DeleteContext",
                    "DockerHardeningCheck",
                    "DemistoVersion"
                ]
            }
        },
        {
            "DocumentationTest": {
                "name": "DocumentationTest",
                "file_path": "TestPlaybooks/playbook-DocumentationTest.yml",
                "implementing_scripts": [
                    "DocumentationAutomation",
                    "http",
                    "DeleteContext"
                ]
            }
        },
        {
            "Domain Enrichment - Generic v2 - Test": {
                "name": "Domain Enrichment - Generic v2 - Test",
                "file_path": "TestPlaybooks/playbook-Domain_Enrichment_-_Generic_v2_-_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Domain Enrichment - Generic v2"
                ]
            }
        },
        {
            "DomainTools Iris - Test": {
                "name": "DomainTools Iris - Test",
                "file_path": "TestPlaybooks/playbook-DomainTools_Iris_Test.yml",
                "implementing_playbooks": [
                    "Indicator Pivoting - DomainTools Iris"
                ],
                "command_to_integration": {
                    "domain": "DomainTools Iris",
                    "domaintoolsiris-analytics": "DomainTools Iris",
                    "domaintoolsiris-threat-profile": "DomainTools Iris"
                }
            }
        },
        {
            "DomainTools-Test": {
                "name": "DomainTools-Test",
                "file_path": "TestPlaybooks/playbook-DomainTools-Test.yml",
                "implementing_scripts": [
                    "NotInContextVerification",
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "domain": "DomainTools",
                    "domainSearch": "DomainTools",
                    "reverseIP": "DomainTools",
                    "reverseNameServer": "DomainTools",
                    "reverseWhois": "DomainTools",
                    "whois": "DomainTools",
                    "whoisHistory": "DomainTools",
                    "domainProfile": "DomainTools"
                }
            }
        },
        {
            "DUO Test Playbook": {
                "name": "DUO Test Playbook",
                "file_path": "TestPlaybooks/playbook-DUO-Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "AreValuesEqual",
                    "DeleteContext",
                    "PrintContext"
                ],
                "command_to_integration": {
                    "duo-preauth": ""
                }
            }
        },
        {
            "DuoAdmin API test playbook": {
                "name": "DuoAdmin API test playbook",
                "file_path": "TestPlaybooks/playbook-DuoAdminaAPITest.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "duoadmin-get-users": "",
                    "duoadmin-get-authentication-logs-by-user": "DUO Admin",
                    "duoadmin-get-devices": "",
                    "duoadmin-get-devices-by-user": "",
                    "duoadmin-dissociate-device-from-user": "",
                    "duoadmin-get-u2f-tokens-by-user": "",
                    "duoadmin-delete-u2f-token": "",
                    "duoadmin-associate-device-to-user": ""
                }
            }
        },
        {
            "EclecticIQ Test": {
                "name": "EclecticIQ Test",
                "file_path": "TestPlaybooks/playbook-EclecticIQ_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry"
                ],
                "command_to_integration": {
                    "ip": "EclecticIQ Platform",
                    "url": "EclecticIQ Platform",
                    "domain": "EclecticIQ Platform",
                    "email": "EclecticIQ Platform",
                    "file": "EclecticIQ Platform",
                    "eclecticiq-get-observable-related-entity": ""
                }
            }
        },
        {
            "efc817d2-6660-4d4f-890d-90513ca1e180": {
                "name": "Cisco Spark Test",
                "file_path": "TestPlaybooks/playbook-CiscoSpark_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "cisco-spark-create-team": "Cisco Spark",
                    "cisco-spark-list-teams": "Cisco Spark",
                    "cisco-spark-list-rooms": "Cisco Spark",
                    "cisco-spark-send-message-to-room": "Cisco Spark",
                    "cisco-spark-list-messages": "Cisco Spark",
                    "cisco-spark-delete-team": "Cisco Spark",
                    "cisco-spark-send-message-to-person": "Cisco Spark",
                    "cisco-spark-list-people": "Cisco Spark",
                    "cisco-spark-delete-message": "Cisco Spark"
                }
            }
        },
        {
            "Elasticsearch_Fetch_Custom_Indicators_Test": {
                "name": "Elasticsearch_Fetch_Custom_Indicators_Test",
                "file_path": "TestPlaybooks/playbook-Elasticsearch_Fetch_Custom_Indicators_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "es-get-indicators": ""
                }
            }
        },
        {
            "Elasticsearch_Fetch_Demisto_Indicators_Test": {
                "name": "Elasticsearch_Fetch_Demisto_Indicators_Test",
                "file_path": "TestPlaybooks/playbook-Elasticsearch_Fetch_Demisto_Indicators_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "es-get-indicators": ""
                }
            }
        },
        {
            "Elasticsearch_v2_test": {
                "name": "Elasticsearch_v2_test",
                "file_path": "TestPlaybooks/playbook-Elasticsearch_v2_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "search": "Elasticsearch v2"
                }
            }
        },
        {
            "Elasticsearch_v2_test-v6": {
                "name": "Elasticsearch_v2_test-v6",
                "file_path": "TestPlaybooks/playbook-Elasticsearch_v2_test-v6.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "search": "Elasticsearch v2"
                }
            }
        },
        {
            "Email Address Enrichment - Generic v2 - Test": {
                "name": "Email Address Enrichment - Generic v2 - Test",
                "file_path": "TestPlaybooks/playbook-Email_Address_Enrichment_-_Generic_v2_-_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Email Address Enrichment - Generic v2"
                ]
            }
        },
        {
            "Email Address Enrichment - Generic v2.1 - Test": {
                "name": "Email Address Enrichment - Generic v2.1 - Test",
                "file_path": "TestPlaybooks/playbook-Email_Address_Enrichment_-_Generic_v2.1_-_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Email Address Enrichment - Generic v2.1"
                ]
            }
        },
        {
            "EmailDomainSquattingReputation-Test": {
                "name": "EmailDomainSquattingReputation-Test",
                "file_path": "TestPlaybooks/playbook-EmailDomainSquattingReputation-Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "EmailDomainSquattingReputation"
                ]
            }
        },
        {
            "EmailReputationTest": {
                "name": "EmailReputationTest",
                "file_path": "TestPlaybooks/playbook-EmailReputationTest.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Print",
                    "DeleteIndicators",
                    "GetIndicatorDBotScore",
                    "Sleep"
                ]
            }
        },
        {
            "Endpoint data collection test": {
                "name": "Endpoint data collection test",
                "file_path": "TestPlaybooks/playbook-Endpoint_data_collection_test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "implementing_playbooks": [
                    "Endpoint data collection"
                ],
                "command_to_integration": {
                    "mar-search-host-info": ""
                }
            }
        },
        {
            "Endpoint Enrichment - Generic v2 - Test": {
                "name": "Endpoint Enrichment - Generic v2 - Test",
                "file_path": "TestPlaybooks/playbook-Endpoint_Enrichment_-_Generic_v2_-_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic v2"
                ]
            }
        },
        {
            "Endpoint Enrichment - Generic v2.1 - Test": {
                "name": "Endpoint Enrichment - Generic v2.1 - Test",
                "file_path": "TestPlaybooks/playbook-Endpoint_Enrichment_-_Generic_v2.1_-_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic v2.1"
                ]
            }
        },
        {
            "Endpoint Malware Investigation - Generic - Test": {
                "name": "Endpoint Malware Investigation - Generic - Test",
                "file_path": "TestPlaybooks/playbook-Endpoint_Malware_Investigation_-_Generic_-_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "ScheduleCommand",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Endpoint Malware Investigation - Generic"
                ]
            }
        },
        {
            "endpoint_enrichment_-_generic_test": {
                "name": "Endpoint Enrichment - Generic Test",
                "file_path": "TestPlaybooks/playbook-Endpoint_Enrichment_-_Generic_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Endpoint Enrichment - Generic"
                ]
            }
        },
        {
            "EWS Mail Sender Test": {
                "name": "EWS Mail Sender Test",
                "file_path": "TestPlaybooks/playbook-EWS-Mail-Sender-Test.yml",
                "implementing_scripts": [
                    "http"
                ],
                "command_to_integration": {
                    "send-mail": "EWS Mail Sender"
                }
            }
        },
        {
            "EWS Mail Sender Test 2": {
                "name": "EWS Mail Sender Test 2",
                "file_path": "TestPlaybooks/playbook-EWS-Mail-Sender-Test-2.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Send Email To Recipients"
                ],
                "command_to_integration": {
                    "rasterize": ""
                }
            }
        },
        {
            "EWS Public Folders Test": {
                "name": "EWS Public Folders Test",
                "file_path": "TestPlaybooks/playbook-EWS_Public_Folders_Test.yml",
                "command_to_integration": {
                    "ews-find-folders": "",
                    "ews-get-folder": "",
                    "ews-search-mailbox": "",
                    "ews-get-items-from-folder": ""
                }
            }
        },
        {
            "EWS search-mailbox test": {
                "name": "EWS search-mailbox test",
                "file_path": "TestPlaybooks/playbook-EWS-Searchmailbox-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "ews-search-mailbox": "",
                    "send-mail": "",
                    "ews-move-item": ""
                }
            }
        },
        {
            "EWSv2_empty_attachment_test": {
                "name": "EWSv2_empty_attachment_test",
                "file_path": "TestPlaybooks/playbook-EWSv2_empty_attachment_test.yml",
                "command_to_integration": {
                    "ews-get-attachment": "EWS v2"
                }
            }
        },
        {
            "Exabeam - Test": {
                "name": "Exabeam - Test",
                "file_path": "TestPlaybooks/playbook-Exabeam-test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "exabeam-get-watchlists": "",
                    "exabeam-get-notable-users": "",
                    "exabeam-get-user-info": "",
                    "exabeam-get-user-sessions": "",
                    "exabeam-get-peer-groups": "",
                    "exabeam-get-user-labels": "",
                    "exabeam-get-asset-data": "",
                    "exabeam-create-watchlist": "",
                    "exabeam-delete-watchlist": ""
                }
            }
        },
        {
            "ExifReadTest": {
                "name": "ExifReadTest",
                "file_path": "TestPlaybooks/playbook-ExifReadTest.yml",
                "implementing_scripts": [
                    "GenerateImageFileEntry",
                    "DeleteContext",
                    "ExifRead"
                ]
            }
        },
        {
            "exporttocsv_script_test": {
                "name": "ExportToCSV script test",
                "file_path": "TestPlaybooks/playbook-ExportToCSV_script_test.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "DeleteContext",
                    "ReadFile",
                    "ExportToCSV"
                ]
            }
        },
        {
            "ExposeIncidentOwner-Test": {
                "name": "ExposeIncidentOwner-Test",
                "file_path": "TestPlaybooks/playbook-ExposeIncidentOwner-Test.yml",
                "implementing_scripts": [
                    "AssignAnalystToIncident",
                    "ExposeIncidentOwner",
                    "CloseInvestigation",
                    "AreValuesEqual"
                ]
            }
        },
        {
            "Extract Indicators From File - Generic v2 - Test": {
                "name": "Extract Indicators From File - Generic v2 - Test",
                "file_path": "TestPlaybooks/playbook-Extract_Indicators_From_File_-_Generic_v2_-_Test_4_5.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "http",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Extract Indicators From File - Generic v2"
                ]
            }
        },
        {
            "Extract Indicators From File - Generic v2 - Test": {
                "name": "Extract Indicators From File - Generic v2 - Test",
                "file_path": "TestPlaybooks/playbook-Extract_Indicators_From_File_-_Generic_v2_-_Test.yml",
                "toversion": "4.4.9",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "http",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Extract Indicators From File - Generic v2"
                ]
            }
        },
        {
            "extract_indicators_-_generic_-_test": {
                "name": "Extract Indicators - Generic - Test",
                "file_path": "TestPlaybooks/playbook-Extract_Indicators_-_Generic_-_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "VerifyContext",
                    "IncidentSet",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Extract Indicators - Generic"
                ]
            }
        },
        {
            "ExtractDomainAndFQDNFromUrlAndEmail-Test": {
                "name": "ExtractDomainAndFQDNFromUrlAndEmail-Test",
                "file_path": "TestPlaybooks/playbook-ExtractDomainAndFQDNFromUrlAndEmail.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "ExtractDomainAndFQDNFromUrlAndEmail",
                    "VerifyHumanReadableContains"
                ]
            }
        },
        {
            "ExtractDomainFromEmailTest": {
                "name": "ExtractDomainFromEmailTest",
                "file_path": "TestPlaybooks/playbook-ExtractDomainFromEmailTest.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "ExtractDomainFromUrlAndEmail"
                ]
            }
        },
        {
            "ExtractDomainFromUrlAndEmail-Test": {
                "name": "ExtractDomainFromUrlAndEmail-Test",
                "file_path": "TestPlaybooks/playbook-ExtractDomainFromUrlAndEmail-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "ExtractDomainFromUrlAndEmail",
                    "VerifyHumanReadableContains"
                ]
            }
        },
        {
            "ExtractDomainTest": {
                "name": "ExtractDomainTest",
                "file_path": "TestPlaybooks/playbook-Extract_Domain_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "ExtractDomain"
                ]
            }
        },
        {
            "ExtractFQDNFromUrlAndEmail-Test": {
                "name": "ExtractFQDNFromUrlAndEmail-Test",
                "file_path": "TestPlaybooks/playbook-ExtractFQDNFromUrlAndEmail-Test.yml",
                "implementing_scripts": [
                    "ExtractFQDNFromUrlAndEmail",
                    "DeleteContext",
                    "VerifyHumanReadableContains"
                ]
            }
        },
        {
            "ExtractURL Test": {
                "name": "ExtractURL Test",
                "file_path": "TestPlaybooks/playbook-ExtractURL_Test.yml",
                "implementing_scripts": [
                    "Print",
                    "ExtractURL",
                    "IsTrue"
                ]
            }
        },
        {
            "ExtraHop-Test": {
                "name": "ExtraHop-Test",
                "file_path": "TestPlaybooks/playbook-ExtraHop-Test.yml",
                "command_to_integration": {
                    "extrahop-devices": "ExtraHop",
                    "extrahop-get-alert-rules": "ExtraHop",
                    "extrahop-whitelist-retrieve": "ExtraHop",
                    "extrahop-whitelist-modify": "ExtraHop"
                }
            }
        },
        {
            "ExtraHop_v2-Test": {
                "name": "ExtraHop_v2-Test",
                "file_path": "TestPlaybooks/playbook-ExtraHop_v2-Test.yml",
                "implementing_scripts": [
                    "Set"
                ],
                "command_to_integration": {
                    "extrahop-edit-watchlist": "ExtraHop v2",
                    "extrahop-get-alerts": "ExtraHop v2",
                    "extrahop-device-search": "ExtraHop v2",
                    "extrahop-get-watchlist": "ExtraHop v2",
                    "extrahop-get-peers": "ExtraHop v2",
                    "extrahop-get-protocols": "ExtraHop v2",
                    "extrahop-get-activity-map": "ExtraHop v2",
                    "extrahop-tag-devices": "ExtraHop v2"
                }
            }
        },
        {
            "Fastly Feed Test": {
                "name": "Fastly Feed Test",
                "file_path": "Packs/FeedFastly/TestPlaybooks/playbook-FeedFastly_test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "fastly-get-indicators": "Fastly Feed"
                },
                "pack": "FeedFastly"
            }
        },
        {
            "fd93f620-9a2d-4fb6-85d1-151a6a72e46d": {
                "name": "AWS - SQS Test Playbook",
                "file_path": "TestPlaybooks/playbook-AWS-SQS-Test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "aws-sqs-create-queue": "AWS - SQS",
                    "aws-sqs-get-queue-url": "AWS - SQS",
                    "aws-sqs-list-queues": "AWS - SQS",
                    "aws-sqs-send-message": "AWS - SQS",
                    "aws-sqs-purge-queue": "AWS - SQS",
                    "aws-sqs-delete-queue": "AWS - SQS"
                }
            }
        },
        {
            "FetchIndicatorsFromFile-test": {
                "name": "FetchIndicatorsFromFile-test",
                "file_path": "Packs/FetchIndicatorsFromFile/TestPlaybooks/playbook-FetchIndicatorsFromFile-test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "http",
                    "DeleteContext",
                    "FetchIndicatorsFromFile"
                ],
                "pack": "FetchIndicatorsFromFile"
            }
        },
        {
            "Fidelis-Test": {
                "name": "Fidelis-Test",
                "file_path": "TestPlaybooks/playbook-Fidelis-Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "fidelis-list-alerts": "",
                    "fidelis-get-alert": "",
                    "fidelis-get-alert-report": "",
                    "fidelis-get-malware-data": "",
                    "fidelis-list-pcap-components": "",
                    "fidelis-get-alert-by-uuid": "",
                    "fidelis-list-alerts-by-ip": "",
                    "fidelis-list-metadata": "",
                    "fidelis-download-malware-file": "",
                    "fidelis-download-pcap-file": ""
                }
            }
        },
        {
            "File Enrichment - Generic v2 - Test": {
                "name": "File Enrichment - Generic v2 - Test",
                "file_path": "TestPlaybooks/playbook-File_Enrichment_-_Generic_v2_-_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "Set"
                ],
                "implementing_playbooks": [
                    "File Enrichment - Generic v2"
                ]
            }
        },
        {
            "File Enrichment - Virus Total Private API Test": {
                "name": "File Enrichment - Virus Total Private API Test",
                "file_path": "TestPlaybooks/playbook-File_Enrichment_-_VT_Private_API_Test.yml",
                "implementing_scripts": [
                    "Sleep",
                    "Set"
                ],
                "implementing_playbooks": [
                    "File Enrichment - Virus Total Private API"
                ]
            }
        },
        {
            "FilterByList - Test": {
                "name": "FilterByList - Test",
                "file_path": "TestPlaybooks/playbook-FilterByList_-_Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext",
                    "FilterByList"
                ]
            }
        },
        {
            "FireEye HX Test": {
                "name": "FireEye HX Test",
                "file_path": "TestPlaybooks/playbook-FireEyeHX_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "fireeye-hx-get-alerts": "FireEye HX",
                    "fireeye-hx-get-alert": "FireEye HX",
                    "fireeye-hx-get-host-information": "FireEye HX",
                    "fireeye-hx-get-indicators": "FireEye HX",
                    "fireeye-hx-get-indicator": "FireEye HX",
                    "fireeye-hx-create-indicator": "FireEye HX",
                    "fireeye-hx-append-conditions": ""
                }
            }
        },
        {
            "Flashpoint_event-Test": {
                "name": "Flashpoint_event-Test",
                "file_path": "TestPlaybooks/playbook-Flashpoint_event_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "flashpoint-get-single-event": "Flashpoint",
                    "flashpoint-get-events": "Flashpoint"
                }
            }
        },
        {
            "Flashpoint_forum-Test": {
                "name": "Flashpoint_forum-Test",
                "file_path": "TestPlaybooks/playbook-Flashpoint_forum_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "flashpoint-get-forum-details": "Flashpoint",
                    "flashpoint-get-forum-post-details": "Flashpoint",
                    "flashpoint-get-forum-user-details": "Flashpoint",
                    "flashpoint-get-forum-room-details": "Flashpoint",
                    "flashpoint-search-forum-sites": "Flashpoint",
                    "flashpoint-search-forum-posts": "Flashpoint"
                }
            }
        },
        {
            "Flashpoint_report-Test": {
                "name": "Flashpoint_report-Test",
                "file_path": "TestPlaybooks/playbook-Flashpoint_report_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "flashpoint-search-intelligence-reports": "Flashpoint",
                    "flashpoint-get-single-intelligence-report": "Flashpoint",
                    "flashpoint-get-related-reports": "Flashpoint"
                }
            }
        },
        {
            "Flashpoint_reputation-Test": {
                "name": "Flashpoint_reputation-Test",
                "file_path": "TestPlaybooks/playbook-Flashpoint_reputation_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "ip": "Flashpoint",
                    "domain": "Flashpoint",
                    "filename": "Flashpoint",
                    "url": "Flashpoint",
                    "file": "Flashpoint",
                    "email": "Flashpoint",
                    "flashpoint-common-lookup": "Flashpoint"
                }
            }
        },
        {
            "forcepoint test": {
                "name": "forcepoint test",
                "file_path": "TestPlaybooks/playbook-Forcepoint_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "fp-add-category": "Forcepoint",
                    "fp-get-category-detailes": "Forcepoint",
                    "fp-add-address-to-category": "Forcepoint",
                    "fp-delete-address-from-category": "Forcepoint",
                    "fp-delete-categories": "Forcepoint"
                }
            }
        },
        {
            "Forescout-Test": {
                "name": "Forescout-Test",
                "file_path": "TestPlaybooks/playbook-Forescout-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "forescout-get-host-fields": "Forescout",
                    "forescout-get-policies": "Forescout",
                    "forescout-get-hosts": "Forescout",
                    "forescout-get-host": "",
                    "forescout-update-host-fields": "Forescout",
                    "forescout-update-lists": "Forescout"
                }
            }
        },
        {
            "FormattedDateToEpochTest": {
                "name": "FormattedDateToEpochTest",
                "file_path": "TestPlaybooks/playbook-FormattedDateToEpochTest.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ]
            }
        },
        {
            "FormattingPerformance - Test": {
                "name": "FormattingPerformance - Test",
                "file_path": "TestPlaybooks/playbook-FormattingPerformance_-_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "FormattingPerformance",
                    "DeleteContext"
                ]
            }
        },
        {
            "Fortigate Test": {
                "name": "Fortigate Test",
                "file_path": "TestPlaybooks/playbook-Fortigate_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "fortigate-get-addresses": "",
                    "fortigate-get-service-groups": "",
                    "fortigate-update-service-group": "",
                    "fortigate-get-firewall-service": "",
                    "fortigate-create-firewall-service": "",
                    "fortigate-get-policy": "",
                    "fortigate-update-policy": "",
                    "fortigate-create-policy": "",
                    "fortigate-move-policy": "",
                    "fortigate-delete-policy": "",
                    "fortigate-get-address-groups": "",
                    "fortigate-update-address-group": "",
                    "fortigate-create-address-group": "",
                    "fortigate-delete-address-group": ""
                }
            }
        },
        {
            "Freshdesk-Test": {
                "name": "Freshdesk-Test",
                "file_path": "TestPlaybooks/playbook-Freshdesk-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "fd-create-ticket": "Freshdesk",
                    "fd-get-ticket": "",
                    "fd-update-ticket": "Freshdesk",
                    "fd-list-contacts": "Freshdesk",
                    "fd-get-contact": "",
                    "fd-list-canned-response-folders": "",
                    "fd-get-canned-response-folder": "",
                    "fd-list-groups": "Freshdesk",
                    "fd-ticket-reply": "Freshdesk",
                    "fd-create-ticket-note": "",
                    "fd-get-ticket-conversations": "",
                    "fd-list-agents": "Freshdesk",
                    "fd-search-tickets": "",
                    "fd-delete-ticket": "Freshdesk"
                }
            }
        },
        {
            "GCS - Test": {
                "name": "GCS - Test",
                "file_path": "TestPlaybooks/playbook-GCS_Test.yml",
                "implementing_playbooks": [
                    "GCS Bucket Management - Test",
                    "GCS Object Policy (ACL) - Test",
                    "GCS Bucket Policy (ACL) - Test",
                    "GCS Object Operations - Test"
                ]
            }
        },
        {
            "GDPRContactAuthorities Test": {
                "name": "GDPRContactAuthorities Test",
                "file_path": "TestPlaybooks/playbook-GDPRContactAuthorities_Test.yml",
                "implementing_scripts": [
                    "GDPRContactAuthorities",
                    "Print"
                ]
            }
        },
        {
            "GeneratePassword-Test": {
                "name": "GeneratePassword-Test",
                "file_path": "TestPlaybooks/playbook-GeneratePassword-Test.yml",
                "implementing_scripts": [
                    "Exists",
                    "Print",
                    "GeneratePassword",
                    "DeleteContext"
                ]
            }
        },
        {
            "generic-sql": {
                "name": "generic-sql",
                "file_path": "Packs/GenericSQL/TestPlaybooks/generic-sql.yml.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "query": "Generic SQL"
                },
                "pack": "GenericSQL"
            }
        },
        {
            "Get EWS Folder Test": {
                "name": "Get EWS Folder Test",
                "file_path": "TestPlaybooks/playbook-GetEWSFolder-Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "IsListExist"
                ],
                "implementing_playbooks": [
                    "Get Mails By Folder Pathes"
                ]
            }
        },
        {
            "get_file_sample_by_hash_-_cylance_protect_-_test": {
                "name": "Get File Sample By Hash - Cylance Protect - Test",
                "file_path": "TestPlaybooks/playbook-Get_File_Sample_By_Hash_-_Cylance_Protect_-_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "VerifyContext",
                    "Set",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Get File Sample By Hash - Cylance Protect"
                ]
            }
        },
        {
            "get_file_sample_from_path_-_d2_-_test": {
                "name": "Get File Sample From Path - D2 - Test",
                "file_path": "TestPlaybooks/playbook-Get_File_Sample_From_Path_-_D2_-_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Get File Sample From Path - D2"
                ]
            }
        },
        {
            "get_original_email_-_ews-_test": {
                "name": "Get Original Email - EWS - Test",
                "file_path": "TestPlaybooks/playbook-Get_Original_Email_-_EWS_-_Test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "implementing_playbooks": [
                    "Get Original Email - EWS"
                ]
            }
        },
        {
            "get_original_email_-_gmail_-_test": {
                "name": "Get Original Email - Gmail - Test",
                "file_path": "TestPlaybooks/playbook-Get_Original_Email_-_Gmail_-_Test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "implementing_playbooks": [
                    "Get Original Email - Gmail"
                ]
            }
        },
        {
            "GetIndicatorDBotScore Test": {
                "name": "GetIndicatorDBotScore Test",
                "file_path": "TestPlaybooks/playbook-GetIndicatorDBotScore_Test.yml",
                "implementing_scripts": [
                    "GetIndicatorDBotScore"
                ]
            }
        },
        {
            "GetTime-ObjectVsStringTest": {
                "name": "GetTime-ObjectVsStringTest",
                "file_path": "TestPlaybooks/playbook-GetTime-ObjectVsStringTest.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set",
                    "GetTime"
                ]
            }
        },
        {
            "GetTime-Test": {
                "name": "GetTime-Test",
                "file_path": "TestPlaybooks/playbook-GetTime-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "MatchRegex",
                    "GetTime"
                ]
            }
        },
        {
            "GetValuesOfMultipleFIelds Test": {
                "name": "GetValuesOfMultipleFIelds Test",
                "file_path": "TestPlaybooks/playbook-GetValuesOfMultipleFIelds_Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "SetAndHandleEmpty",
                    "Set"
                ]
            }
        },
        {
            "Git_Integration-Test": {
                "name": "Git_Integration-Test",
                "file_path": "TestPlaybooks/playbook-Git_Integration-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "command_to_integration": {
                    "GitHub-create-issue": "",
                    "GitHub-search-issues": "",
                    "GitHub-update-issue": "",
                    "GitHub-list-all-issues": "",
                    "GitHub-close-issue": "",
                    "GitHub-get-download-count": "",
                    "GitHub-get-branch": "GitHub",
                    "GitHub-create-branch": "GitHub",
                    "GitHub-delete-branch": "GitHub",
                    "GitHub-get-stale-prs": "GitHub",
                    "GitHub-request-review": "GitHub",
                    "GitHub-create-comment": "GitHub",
                    "GitHub-add-label": "GitHub",
                    "GitHub-list-issue-comments": "GitHub",
                    "GitHub-list-pr-files": "GitHub",
                    "GitHub-list-pr-reviews": "GitHub",
                    "GitHub-get-commit": "GitHub",
                    "GitHub-get-pull-request": "GitHub",
                    "GitHub-is-pr-merged": "",
                    "GitHub-create-pull-request": "",
                    "GitHub-update-pull-request": ""
                }
            }
        },
        {
            "Gmail Convert Html Test": {
                "name": "Gmail Convert Html Test",
                "file_path": "TestPlaybooks/playbook-Gmail_Convert_Html_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "PrintContext"
                ],
                "command_to_integration": {
                    "gmail-search": ""
                }
            }
        },
        {
            "Gmail Single User - Test": {
                "name": "Gmail Single User - Test",
                "file_path": "TestPlaybooks/playbook-Gmail_Single_user_-_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set",
                    "FileCreateAndUpload",
                    "Sleep"
                ],
                "command_to_integration": {
                    "send-mail": "Gmail Single User",
                    "gmail-search": "Gmail",
                    "gmail-get-mail": ""
                }
            }
        },
        {
            "GmailTest": {
                "name": "GmailTest",
                "file_path": "TestPlaybooks/playbook-GmailTest.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "GeneratePassword"
                ],
                "command_to_integration": {
                    "gmail-list-users": "",
                    "gmail-get-user": "",
                    "gmail-create-user": "",
                    "gmail-delete-user": "",
                    "gmail-search": "",
                    "gmail-get-attachments": "",
                    "gmail-get-tokens-for-user": "",
                    "gmail-get-mail": "",
                    "gmail-search-all-mailboxes": "",
                    "gmail-get-thread": "",
                    "gmail-move-mail": "",
                    "gmail-add-delete-filter": "",
                    "gmail-remove-filter": "",
                    "gmail-list-filters": "",
                    "gmail-hide-user-in-directory": "",
                    "gmail-get-autoreply": "",
                    "gmail-set-autoreply": "",
                    "gmail-delegate-user-mailbox": "",
                    "gmail-delete-mail": "",
                    "gmail-set-password": "",
                    "gmail-remove-delegated-mailbox": "",
                    "send-mail": "",
                    "gmail-get-user-roles": "Gmail",
                    "gmail-get-role": ""
                }
            }
        },
        {
            "Google BigQuery Test": {
                "name": "Google BigQuery Test",
                "file_path": "TestPlaybooks/playbook-GoogleBigQueryTest.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "bigquery-query": ""
                }
            }
        },
        {
            "Google Chronicle Backstory Asset - Test": {
                "name": "Google Chronicle Backstory Asset - Test",
                "file_path": "TestPlaybooks/playbook-GoogleChronicleBackstoryAsset-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "isError"
                ],
                "command_to_integration": {
                    "gcb-assets": "Google Chronicle Backstory"
                }
            }
        },
        {
            "Google Chronicle Backstory IOC Details - Test": {
                "name": "Google Chronicle Backstory IOC Details - Test",
                "file_path": "TestPlaybooks/playbook-GoogleChronicleBackstoryIOCDetails-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "gcb-ioc-details": "Google Chronicle Backstory"
                }
            }
        },
        {
            "Google Chronicle Backstory List Alerts - Test": {
                "name": "Google Chronicle Backstory List Alerts - Test",
                "file_path": "TestPlaybooks/playbook-GoogleChronicleBackstoryListAlerts-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "isError"
                ],
                "command_to_integration": {
                    "gcb-list-alerts": "Google Chronicle Backstory"
                }
            }
        },
        {
            "Google Chronicle Backstory List IOCs - Test": {
                "name": "Google Chronicle Backstory List IOCs - Test",
                "file_path": "TestPlaybooks/playbook-GoogleChronicleBackstoryListIOCs-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "isError"
                ],
                "command_to_integration": {
                    "gcb-list-iocs": "Google Chronicle Backstory"
                }
            }
        },
        {
            "Google Chronicle Backstory Reputation - Test": {
                "name": "Google Chronicle Backstory Reputation - Test",
                "file_path": "TestPlaybooks/playbook-GoogleChronicleBackstoryReputation-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "ip": "Google Chronicle Backstory",
                    "domain": "Google Chronicle Backstory"
                }
            }
        },
        {
            "Google Safe Browsing Test": {
                "name": "Google Safe Browsing Test",
                "file_path": "TestPlaybooks/playbook-Google_Safe_Browsing_Test.yml",
                "implementing_scripts": [
                    "CloseInvestigation",
                    "RaiseError"
                ],
                "command_to_integration": {
                    "url": "GoogleSafeBrowsing"
                }
            }
        },
        {
            "Google Vision API - Test": {
                "name": "Google Vision API - Test",
                "file_path": "TestPlaybooks/playbook-Google_Vision_API_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "http"
                ],
                "command_to_integration": {
                    "google-vision-detect-logos": ""
                }
            }
        },
        {
            "Google-KMS-test": {
                "name": "Google-KMS-test",
                "file_path": "TestPlaybooks/playbook-Google-KMS-test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "google-kms-destroy-key": "",
                    "google-kms-get-key": "",
                    "google-kms-restore-key": "",
                    "google-kms-enable-key": "",
                    "google-kms-disable-key": "",
                    "google-kms-list-keys": "",
                    "google-kms-asymmetric-encrypt": "",
                    "google-kms-asymmetric-decrypt": "",
                    "google-kms-symmetric-encrypt": "",
                    "google-kms-symmetric-decrypt": "",
                    "google-kms-get-public-key": "",
                    "google-kms-list-all-keys": "",
                    "google-kms-list-key-rings": ""
                }
            }
        },
        {
            "Google-Vault-Generic-Test": {
                "name": "Google Vault Generic Test",
                "file_path": "TestPlaybooks/playbook-GoogleVault-test.yml",
                "implementing_scripts": [
                    "GeneratePassword",
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "gvault-create-matter": "",
                    "gvault-get-matter": "",
                    "gvault-create-hold": "",
                    "gvault-add-heldAccount": "",
                    "gvault-remove-heldAccount": "",
                    "gvault-delete-hold": "",
                    "gvault-create-export-mail": "",
                    "gvault-export-status": "",
                    "gvault-create-export-groups": "",
                    "gvault-create-export-drive": "",
                    "gvault-get-drive-results": "",
                    "gvault-get-mail-results": "",
                    "gvault-get-groups-results": ""
                }
            }
        },
        {
            "Google_Vault-Search_And_Display_Results_test": {
                "name": "Google Vault - Search And Display Results test",
                "file_path": "TestPlaybooks/playbook-Google_Vault_-_Search_And_Display_Results_test.yml",
                "implementing_scripts": [
                    "GeneratePassword",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Google Vault - Search Drive",
                    "Google Vault - Search Groups",
                    "Google Vault - Display Results",
                    "Google Vault - Search Mail"
                ],
                "command_to_integration": {
                    "gvault-create-matter": ""
                }
            }
        },
        {
            "GoogleCloudCompute-Test": {
                "name": "GoogleCloudCompute-Test",
                "file_path": "TestPlaybooks/playbook-GoogleCloudcompute_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "gcp-compute-get-disk-type": "Google Cloud Compute",
                    "gcp-compute-get-image-from-family": "Google Cloud Compute",
                    "gcp-compute-get-network": "Google Cloud Compute"
                }
            }
        },
        {
            "GoogleCloudTranslate-Test": {
                "name": "GoogleCloudTranslate-Test",
                "file_path": "TestPlaybooks/playbook-GoogleCloudTranslate-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "gct-supported-languages": "",
                    "gct-translate-text": ""
                }
            }
        },
        {
            "GoogleDocs-test": {
                "name": "GoogleDocs-test",
                "file_path": "TestPlaybooks/playbook-GoogleDocs.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "google-docs-create-document": "GoogleDocs",
                    "google-docs-get-document": "GoogleDocs",
                    "google-docs-update-document": "GoogleDocs"
                }
            }
        },
        {
            "GoogleResourceManager-Test": {
                "name": "GoogleResourceManager-Test",
                "file_path": "TestPlaybooks/playbook-GoogleResourceManager-Test.yml",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext",
                    "GenerateUUID"
                ],
                "command_to_integration": {
                    "grm-create-project": "Google Resource Manager",
                    "grm-delete-project": "Google Resource Manager",
                    "grm-undelete-project": "Google Resource Manager",
                    "grm-get-project": "Google Resource Manager",
                    "grm-search-organizations": "Google Resource Manager",
                    "grm-get-organization": "Google Resource Manager",
                    "grm-list-projects": "Google Resource Manager",
                    "grm-update-project": "Google Resource Manager"
                }
            }
        },
        {
            "grr_test": {
                "name": "GRR Test",
                "file_path": "TestPlaybooks/playbook-GRR_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "command_to_integration": {
                    "grr-get-clients": "GRR",
                    "grr-set-flows": "GRR",
                    "grr-get-flows": "GRR",
                    "grr-set-hunts": "GRR",
                    "grr-get-hunts": "GRR"
                }
            }
        },
        {
            "GsuiteTest": {
                "name": "test-Gsuite",
                "file_path": "TestPlaybooks/playbook-Gsuite-Test.yml",
                "implementing_scripts": [
                    "VerifyContextFields"
                ],
                "command_to_integration": {
                    "googleapps-list-users": "google"
                }
            }
        },
        {
            "hashicorp_test": {
                "name": "hashicorp_test",
                "file_path": "TestPlaybooks/playbook-hashicorp_test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "GetTime"
                ],
                "command_to_integration": {
                    "hashicorp-list-secrets-engines": "HashiCorp Vault",
                    "hashicorp-list-secrets": "HashiCorp Vault",
                    "hashicorp-get-secret-metadata": "HashiCorp Vault",
                    "hashicorp-undelete-secret": "HashiCorp Vault",
                    "hashicorp-delete-secret": "HashiCorp Vault",
                    "hashicorp-destroy-secret": "HashiCorp Vault",
                    "hashicorp-enable-engine": "HashiCorp Vault",
                    "hashicorp-disable-engine": "HashiCorp Vault",
                    "hashicorp-list-policies": "HashiCorp Vault",
                    "hashicorp-get-policy": "",
                    "hashicorp-create-token": "HashiCorp Vault",
                    "hashicorp-configure-engine": "HashiCorp Vault",
                    "hashicorp-reset-configuration": "HashiCorp Vault"
                }
            }
        },
        {
            "HighlightWords_Test": {
                "name": "HighlightWords - Test",
                "file_path": "TestPlaybooks/playbook-HighlightWords_-_Test.yml",
                "implementing_scripts": [
                    "HighlightWords",
                    "VerifyHumanReadableContains"
                ]
            }
        },
        {
            "HTTPListRedirects - Test SSL": {
                "name": "HTTPListRedirects - Test SSL",
                "file_path": "TestPlaybooks/playbook-HTTPListRedirects_-_Test_SSL.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "HTTPListRedirects",
                    "DeleteContext"
                ]
            }
        },
        {
            "HTTPListRedirects Basic Test": {
                "name": "HTTPListRedirects Basic Test",
                "file_path": "TestPlaybooks/playbook-HTTPListRedirects_Basic_Test.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "HTTPListRedirects",
                    "CloseInvestigation"
                ]
            }
        },
        {
            "HybridAnalysis-Test": {
                "name": "HybridAnalysis-Test",
                "file_path": "TestPlaybooks/playbook-HybridAnalysis-Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "http"
                ],
                "implementing_playbooks": [
                    "Hybrid-analysis quick-scan"
                ],
                "command_to_integration": {
                    "hybrid-analysis-scan": "",
                    "hybrid-analysis-submit-url": "",
                    "hybrid-analysis-search": "",
                    "hybrid-analysis-submit-sample": "",
                    "hybrid-analysis-detonate-file": "",
                    "hybrid-analysis-get-report-status": "",
                    "hybrid-analysis-quick-scan-url": ""
                }
            }
        },
        {
            "IBM Resilient Systems Test": {
                "name": "IBM Resilient Systems Test",
                "file_path": "TestPlaybooks/playbook-IBM_Resilient_Systems_Test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "rs-search-incidents": "IBM Resilient Systems",
                    "rs-incident-artifacts": "IBM Resilient Systems",
                    "rs-incident-attachments": "IBM Resilient Systems",
                    "rs-related-incidents": "IBM Resilient Systems",
                    "rs-incidents-get-tasks": "IBM Resilient Systems"
                }
            }
        },
        {
            "Icebrg Test": {
                "name": "Icebrg Test",
                "file_path": "TestPlaybooks/playbook-Icebrg_Test.yml",
                "command_to_integration": {
                    "icebrg-get-history": "icebrg",
                    "icebrg-search-events": "icebrg",
                    "icebrg-get-reports": "icebrg",
                    "icebrg-get-report-indicators": "icebrg",
                    "icebrg-get-report-assets": "icebrg",
                    "icebrg-saved-searches": "icebrg"
                }
            }
        },
        {
            "iDefenseTest": {
                "name": "iDefenseTest",
                "file_path": "TestPlaybooks/playbook-iDefenseTest.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "ip": "iDefense",
                    "domain": "iDefense",
                    "url": "iDefense",
                    "uuid": "iDefense"
                }
            }
        },
        {
            "illuminate Integration Demonstration - Test": {
                "name": "illuminate Integration Demonstration - Test",
                "file_path": "TestPlaybooks/playbook-illuminate_Integration_Demonstration_-_Test.yml",
                "fromversion": "1.8.7",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Illuminate Integration Demonstration"
                ]
            }
        },
        {
            "illuminate Integration Test": {
                "name": "illuminate Integration Test",
                "file_path": "TestPlaybooks/playbook-illuminate_Test.yml",
                "fromversion": "1.8.7",
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "domain": "",
                    "email": "",
                    "ip": "",
                    "file": "",
                    "illuminate-enrich-string": "",
                    "illuminate-enrich-ipv6": "",
                    "illuminate-enrich-mutex": "",
                    "illuminate-enrich-http-request": "",
                    "url": ""
                }
            }
        },
        {
            "Impossible Traveler - Test": {
                "name": "Impossible Traveler - Test",
                "file_path": "Packs/ImpossibleTraveler/TestPlaybooks/playbook-Impossible_Traveller_-_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "ScheduleCommand"
                ],
                "implementing_playbooks": [
                    "Impossible Traveler"
                ],
                "pack": "ImpossibleTraveler"
            }
        },
        {
            "Indeni_test": {
                "name": "Indeni_test",
                "file_path": "Packs/Indeni/TestPlaybooks/playbook-Indeni_test.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "indeni-get-device-info": "",
                    "indeni-get-alert-info": "",
                    "indeni-get-alert-summary": "",
                    "indeni-post-note": "",
                    "indeni-archive-issue": "",
                    "indeni-unarchive-issue": "",
                    "indeni-get-notes": ""
                },
                "pack": "Indeni"
            }
        },
        {
            "Indicator Feed - Test": {
                "name": "Indicator Feed - Test",
                "file_path": "TestPlaybooks/playbook-Indicator_Feed_-_Test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "SearchIncidents",
                    "DeleteContext",
                    "Sleep"
                ]
            }
        },
        {
            "Indicators reputation-.json Test": {
                "name": "Indicators-reputation-Test",
                "file_path": "TestPlaybooks/playbook-Indicators-reputation-.json-Test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext",
                    "Set"
                ]
            }
        },
        {
            "InfoArmorVigilanteATITest": {
                "name": "InfoArmorVigilanteATITest",
                "file_path": "TestPlaybooks/playbook-InfoArmorVigilanteATITest.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "vigilante-get-watchlist": "",
                    "vigilante-watchlist-remove-accounts": "",
                    "vigilante-search-leaks": "",
                    "vigilante-query-ecrime-db": "",
                    "vigilante-query-infected-host-data": "",
                    "vigilante-watchlist-add-accounts": "",
                    "vigilante-get-leak": "",
                    "vigilante-query-accounts": "",
                    "vigilante-query-domains": ""
                }
            }
        },
        {
            "Infoblox Test": {
                "name": "Infoblox Test",
                "file_path": "TestPlaybooks/playbook-Infoblox_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "infoblox-list-response-policy-zones": "Infoblox",
                    "infoblox-list-response-policy-zone-rules": "Infoblox",
                    "infoblox-search-related-objects-by-ip": "Infoblox",
                    "infoblox-get-ip": "Infoblox",
                    "infoblox-search-rule": "Infoblox",
                    "infoblox-get-object-fields": "Infoblox",
                    "infoblox-disable-rule": "Infoblox",
                    "infoblox-enable-rule": "Infoblox",
                    "infoblox-create-a-substitute-record-rule": "Infoblox",
                    "infoblox-create-aaaa-substitute-record-rule": "Infoblox",
                    "infoblox-create-ipv4-substitute-record-rule": "Infoblox",
                    "infoblox-create-ipv6-substitute-record-rule": "Infoblox",
                    "infoblox-create-mx-substitute-record-rule": "Infoblox",
                    "infoblox-create-naptr-substitute-record-rule": "Infoblox",
                    "infoblox-create-ptr-substitute-record-rule": "Infoblox",
                    "infoblox-create-rpz-rule": "Infoblox",
                    "infoblox-create-srv-substitute-record-rule": "Infoblox",
                    "infoblox-create-txt-substitute-record-rule": "Infoblox",
                    "infoblox-delete-rpz-rule": "Infoblox",
                    "infoblox-delete-response-policy-zone": "",
                    "infoblox-create-response-policy-zone": "Infoblox"
                }
            }
        },
        {
            "Intezer Testing v2": {
                "name": "Intezer Testing v2",
                "file_path": "TestPlaybooks/playbook-Intezer_Test_v2.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "http"
                ],
                "implementing_playbooks": [
                    "Intezer - Analyze by hash",
                    "Intezer - Analyze Uploaded file"
                ],
                "command_to_integration": {
                    "file_command_enrichment_test_script_helper": "file_command_enrichment_test_script_helper"
                }
            }
        },
        {
            "IntSights Mssp Test": {
                "name": "IntSights Mssp Test",
                "file_path": "TestPlaybooks/playbook-IntSights_Mssp_Test.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "intsights-mssp-get-sub-accounts": ""
                }
            }
        },
        {
            "IntSights Test": {
                "name": "IntSights Test",
                "file_path": "TestPlaybooks/playbook-IntSights_Test.yml",
                "implementing_scripts": [
                    "Exists",
                    "Print",
                    "DeleteContext",
                    "PrintErrorEntry"
                ],
                "command_to_integration": {
                    "intsights-get-alerts": "",
                    "intsights-get-alert-activities": "",
                    "intsights-update-alert-severity": "",
                    "intsights-get-iocs": "",
                    "intsights-add-tag-to-alert": ""
                }
            }
        },
        {
            "IP Enrichment - Generic v2 - Test": {
                "name": "IP Enrichment - Generic v2 - Test",
                "file_path": "TestPlaybooks/playbook-IP_Enrichment_-_Generic_v2_-_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "SetIPsTest",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "IP Enrichment - Generic v2"
                ]
            }
        },
        {
            "IPInfoTest": {
                "name": "IPInfoTest",
                "file_path": "Packs/ipinfo/TestPlaybooks/playbook-IPInfo_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "ip": "ipinfo"
                },
                "pack": "ipinfo"
            }
        },
        {
            "Ipstack_Test": {
                "name": "Ipstack_Test",
                "file_path": "TestPlaybooks/playbook-Ipstack_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "ip": "Ipstack"
                }
            }
        },
        {
            "IronDefenseTest": {
                "name": "IronDefenseTest",
                "file_path": "TestPlaybooks/playbook-IronDefense_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "command_to_integration": {
                    "irondefense-rate-alert": "",
                    "irondefense-comment-alert": "",
                    "irondefense-set-alert-status": "",
                    "irondefense-report-observed-bad-activity": ""
                }
            }
        },
        {
            "IsInternalHostName Test": {
                "name": "IsInternalHostName Test",
                "file_path": "TestPlaybooks/playbook-IsInternalHostName_Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "IsInternalHostName"
                ]
            }
        },
        {
            "Jask_Test": {
                "name": "Jask Test",
                "file_path": "TestPlaybooks/playbook-Jask_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "VerifyContext",
                    "FetchFromInstance",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "jask-search-insights": "",
                    "jask-get-insight-details": "",
                    "jask-get-entity-details": "",
                    "jask-get-signal-details": "",
                    "jask-get-related-entities": "",
                    "jask-search-signals": "",
                    "jask-search-entities": "",
                    "jask-get-insight-comments": ""
                }
            }
        },
        {
            "Jask_Test": {
                "name": "Jask Test",
                "file_path": "TestPlaybooks/playbook-Jask_Test-4.0.0.yml",
                "toversion": "4.0.9",
                "implementing_scripts": [
                    "VerifyContext",
                    "FetchFromInstance",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "jask-search-insights": "",
                    "jask-get-insight-details": "",
                    "jask-get-entity-details": "",
                    "jask-get-signal-details": "",
                    "jask-get-related-entities": "",
                    "jask-search-signals": "",
                    "jask-search-entities": "",
                    "jask-get-insight-comments": ""
                }
            }
        },
        {
            "Jira-Test": {
                "name": "Jira-Test",
                "file_path": "TestPlaybooks/playbook-Jira-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "FileCreateAndUpload"
                ],
                "command_to_integration": {
                    "jira-create-issue": "",
                    "jira-get-issue": "",
                    "jira-issue-add-comment": "",
                    "jira-issue-add-link": "",
                    "jira-issue-upload-file": "",
                    "jira-issue-query": "",
                    "jira-edit-issue": "",
                    "jira-get-comments": "",
                    "jira-delete-issue": ""
                }
            }
        },
        {
            "Jira-v2-Test": {
                "name": "Jira-v2-Test",
                "file_path": "TestPlaybooks/playbook-Jira-v2-Test-old.yml",
                "toversion": "4.5.9",
                "implementing_scripts": [
                    "VerifyContextFields",
                    "DeleteContext",
                    "VerifyContext",
                    "FileCreateAndUpload"
                ],
                "command_to_integration": {
                    "jira-create-issue": "",
                    "jira-get-issue": "",
                    "jira-issue-add-comment": "",
                    "jira-issue-add-link": "",
                    "jira-issue-upload-file": "",
                    "jira-issue-query": "",
                    "jira-edit-issue": "",
                    "jira-get-comments": "",
                    "jira-delete-issue": ""
                }
            }
        },
        {
            "Jira-v2-Test": {
                "name": "Jira-v2-Test",
                "file_path": "TestPlaybooks/playbook-Jira-v2-Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "FileCreateAndUpload"
                ],
                "command_to_integration": {
                    "jira-create-issue": "",
                    "jira-get-issue": "",
                    "jira-issue-add-comment": "",
                    "jira-issue-add-link": "",
                    "jira-issue-upload-file": "",
                    "jira-issue-query": "",
                    "jira-edit-issue": "",
                    "jira-get-comments": "",
                    "jira-delete-issue": ""
                }
            }
        },
        {
            "JiraCreateIssue-example-test": {
                "name": "JiraCreateIssue-example-test",
                "file_path": "TestPlaybooks/playbook-Jira-CreateIssue-generic-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "JiraCreateIssue-example"
                ],
                "command_to_integration": {
                    "jira-delete-issue": ""
                }
            }
        },
        {
            "JoeSecurityTestDetonation": {
                "name": "JoeSecurityTestDetonation",
                "file_path": "TestPlaybooks/playbook-JoeSecurityTestDetonation.yml",
                "fromversion": "4.0.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "FileCreateAndUpload"
                ],
                "implementing_playbooks": [
                    "Detonate File - JoeSecurity",
                    "Detonate File From URL - JoeSecurity",
                    "Detonate URL - JoeSecurity"
                ]
            }
        },
        {
            "JoeSecurityTestPlaybook": {
                "name": "JoeSecurityTestPlaybook",
                "file_path": "TestPlaybooks/playbook-JoeSecurityTest.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "FileCreateAndUpload"
                ],
                "command_to_integration": {
                    "joe-is-online": "",
                    "joe-analysis-submit-sample": "Joe Security",
                    "joe-analysis-submit-url": "Joe Security",
                    "joe-analysis-info": "Joe Security",
                    "joe-search": "Joe Security",
                    "joe-download-report": "Joe Security"
                }
            }
        },
        {
            "JSONtoCSV-Test": {
                "name": "JSONtoCSV-Test",
                "file_path": "TestPlaybooks/playbook-JSONtoCSV-Test.yml",
                "implementing_scripts": [
                    "LoadJSON",
                    "DeleteContext",
                    "JSONtoCSV",
                    "FileCreateAndUpload",
                    "JSONFileToCSV",
                    "ParseCSV"
                ]
            }
        },
        {
            "JsonWhoIs-Test": {
                "name": "JsonWhoIs-Test",
                "file_path": "TestPlaybooks/playbook-jsonwhois_test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "PrintContext"
                ],
                "command_to_integration": {
                    "whois": ""
                }
            }
        },
        {
            "Kafka Test": {
                "name": "Kafka Test",
                "file_path": "TestPlaybooks/playbook-Kafka_test.yml",
                "command_to_integration": {
                    "kafka-print-topics": "Kafka V2",
                    "kafka-publish-msg": "Kafka V2",
                    "kafka-fetch-partitions": "Kafka V2",
                    "kafka-consume-msg": "Kafka V2"
                }
            }
        },
        {
            "Kenna Test": {
                "name": "Kenna Test",
                "file_path": "TestPlaybooks/playbook-Kenna_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry"
                ],
                "command_to_integration": {
                    "kenna-get-connectors": "",
                    "kenna-search-vulnerabilities": "",
                    "kenna-update-vulnerability": "",
                    "kenna-get-asset-vulnerabilities": "",
                    "kenna-search-assets": "",
                    "kenna-update-asset": "",
                    "kenna-add-tag": "",
                    "kenna-delete-tag": "",
                    "kenna-search-fixes": ""
                }
            }
        },
        {
            "Keylight v2 - Test": {
                "name": "Keylight v2 - Test",
                "file_path": "TestPlaybooks/playbook-Keylightv2-test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "KeylightCreateIssue"
                ],
                "command_to_integration": {
                    "kl-get-component": "Lockpath KeyLight v2",
                    "kl-get-field-list": "Lockpath KeyLight v2",
                    "kl-get-field": "Lockpath KeyLight v2",
                    "kl-create-record": "Lockpath KeyLight v2",
                    "kl-update-record": "Lockpath KeyLight v2",
                    "kl-delete-record": "Lockpath KeyLight v2",
                    "kl-get-records": "Lockpath KeyLight v2"
                }
            }
        },
        {
            "LanguageDetect-Test": {
                "name": "LanguageDetect-Test",
                "file_path": "TestPlaybooks/playbook-langDetect-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "CloseInvestigation",
                    "Sleep",
                    "Exists",
                    "LanguageDetect"
                ]
            }
        },
        {
            "Lastline - testplaybook": {
                "name": "Lastline - testplaybook",
                "file_path": "TestPlaybooks/playbook-Lastline-test-playbook.yml",
                "implementing_scripts": [
                    "http",
                    "Set",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Detonate File - Lastline",
                    "Detonate URL - Lastline"
                ]
            }
        },
        {
            "Lastline v2 - Test": {
                "name": "Lastline v2 - Test",
                "file_path": "TestPlaybooks/playbook-Lastline_v2_-_Test.yml",
                "implementing_scripts": [
                    "http",
                    "Set",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Detonate File - Lastline v2",
                    "Detonate URL - Lastline v2"
                ]
            }
        },
        {
            "listExecutedCommands-Test": {
                "name": "listExecutedCommands-Test",
                "file_path": "TestPlaybooks/playbook-listExecutedCommands-Test.yml",
                "implementing_scripts": [
                    "Print",
                    "commentsToContext",
                    "AreValuesEqual",
                    "CloseInvestigation",
                    "listExecutedCommands"
                ]
            }
        },
        {
            "LogRhythm REST test": {
                "name": "LogRhythm REST test",
                "file_path": "TestPlaybooks/playbook-LogRhythm_REST_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "lr-get-hosts-by-entity": "",
                    "lr-execute-query": "",
                    "lr-update-host-status": "",
                    "lr-get-persons": "",
                    "lr-get-networks": "",
                    "lr-get-hosts": "",
                    "lr-get-alarm-data": "",
                    "lr-get-alarm-events": ""
                }
            }
        },
        {
            "LogRhythm-Test-Playbook": {
                "name": "LogRhythm-Test-Playbook",
                "file_path": "TestPlaybooks/playbook-LogRhythm_Test_Playbook.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "lr-get-alarm-by-id": "",
                    "lr-add-alarm-comments": "",
                    "lr-get-alarm-events-by-id": "",
                    "lr-get-alarms": "",
                    "lr-update-alarm-status": "",
                    "lr-execute-query": "",
                    "lr-get-hosts-by-entity-id": ""
                }
            }
        },
        {
            "Luminate-TestPlaybook": {
                "name": "Luminate-TestPlaybook",
                "file_path": "TestPlaybooks/playbook-LuminateTest.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "lum-block-user": "Luminate",
                    "lum-unblock-user": "Luminate",
                    "lum-destroy-user-session": "Luminate",
                    "lum-get-http-access-logs": "Luminate",
                    "lum-get-ssh-access-logs": "Luminate"
                }
            }
        },
        {
            "Mail Sender (New) Test": {
                "name": "Mail Sender (New) Test",
                "file_path": "TestPlaybooks/playbook-Email_Sender_Python.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set",
                    "FileCreateAndUpload",
                    "Sleep",
                    "GetTime"
                ],
                "command_to_integration": {
                    "send-mail": "Mail Sender (New)",
                    "gmail-search": "",
                    "gmail-get-mail": "",
                    "RaiseError": "RaiseError"
                }
            }
        },
        {
            "MailListener-POP3 - Test": {
                "name": "MailListener-POP3 - Test",
                "file_path": "TestPlaybooks/playbook-MailListener-POP3_-_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "FetchFromInstance"
                ]
            }
        },
        {
            "Malware Domain List Active IPs Feed Test": {
                "name": "Malware Domain List Active IPs Feed Test",
                "file_path": "Packs/FeedMalwareDomainList/TestPlaybooks/playbook-Malware_Domain_List_Active_IPs_Feed_test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "malwaredomainlist-get-indicators": "Malware Domain List Active IPs Feed"
                },
                "pack": "FeedMalwareDomainList"
            }
        },
        {
            "MAR - Endpoint data collection test": {
                "name": "MAR - Endpoint data collection test",
                "file_path": "TestPlaybooks/playbook-MAR_-_Endpoint_data_collection_test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "implementing_playbooks": [
                    "MAR - Endpoint data collection"
                ],
                "command_to_integration": {
                    "mar-search-host-info": ""
                }
            }
        },
        {
            "MaxMind Test": {
                "name": "MaxMind Test",
                "file_path": "TestPlaybooks/playbook-MaxMind-test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "ip": "MaxMind GeoIP2"
                }
            }
        },
        {
            "McAfee DXL - Test": {
                "name": "McAfee DXL - test",
                "file_path": "TestPlaybooks/playbook-McAfee_DXL_-_Test.yml",
                "command_to_integration": {
                    "dxl-push-ip": "",
                    "dxl-push-hash": "",
                    "dxl-push-domain": "",
                    "dxl-push-url": "",
                    "dxl-send-event": ""
                }
            }
        },
        {
            "McAfee-MAR_Test": {
                "name": "McAfee-MAR_Test",
                "file_path": "TestPlaybooks/playbook-McAfee-MAR_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "mar-collectors-list": "McAfee Active Response",
                    "mar-search": "McAfee Active Response",
                    "mar-search-multiple": "McAfee Active Response"
                }
            }
        },
        {
            "McAfee-TIE Test": {
                "name": "McAfee-TIE Test",
                "file_path": "TestPlaybooks/playbook-McAfee-TIE_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "file": "McAfee Threat Intelligence Exchange",
                    "tie-file-references": "McAfee Threat Intelligence Exchange"
                }
            }
        },
        {
            "McAfeeESMTest": {
                "name": "McAfeeESMTest",
                "file_path": "TestPlaybooks/playbook-McAfeeESMTest.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext",
                    "GetTime"
                ],
                "command_to_integration": {
                    "esm-add-case": "",
                    "esm-edit-case": "",
                    "esm-get-case-detail": "",
                    "esm-edit-case-status": "",
                    "esm-delete-case-status": "",
                    "esm-add-case-status": "",
                    "esm-get-case-statuses": "",
                    "esm-get-user-list": "",
                    "esm-get-organization-list": "",
                    "esm-search": "",
                    "esm-fetch-alarms": "",
                    "esm-list-alarm-events": "",
                    "esm-get-alarm-event-details": ""
                }
            }
        },
        {
            "McAfeeNSMTest": {
                "name": "McAfeeNSMTest",
                "file_path": "TestPlaybooks/playbook-McAfeeNSMTest.yml",
                "command_to_integration": {
                    "nsm-get-domains": "McAfee NSM",
                    "nsm-get-ips-policies": "McAfee NSM",
                    "nsm-get-ips-policy-details": "McAfee NSM",
                    "nsm-get-alerts": "McAfee NSM",
                    "nsm-update-alerts": "McAfee NSM",
                    "nsm-get-sensors": "McAfee NSM"
                }
            }
        },
        {
            "McAfeeWebGatewayTest": {
                "name": "McAfeeWebGatewayTest",
                "file_path": "TestPlaybooks/playbook-McAfeeWebGatewayTest.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep",
                    "ContextContains",
                    "PrintContext"
                ],
                "command_to_integration": {
                    "mwg-get-list": "McAfee Web Gateway",
                    "mwg-get-available-lists": "McAfee Web Gateway",
                    "mwg-get-list-entry": "McAfee Web Gateway",
                    "mwg-insert-entry": "McAfee Web Gateway",
                    "mwg-delete-entry": "McAfee Web Gateway"
                }
            }
        },
        {
            "Microsoft Graph - Test": {
                "name": "Microsoft Graph - Test",
                "file_path": "TestPlaybooks/playbook-Microsoft_Graph_User_test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep",
                    "GenerateUUID"
                ],
                "command_to_integration": {
                    "msgraph-user-create": "",
                    "msgraph-user-get": "",
                    "msgraph-user-update": "",
                    "msgraph-user-get-delta": "",
                    "msgraph-user-terminate-session": "",
                    "msgraph-user-unblock": "",
                    "msgraph-user-delete": "",
                    "msgraph-user-list": ""
                }
            }
        },
        {
            "Microsoft Graph Calendar - Test": {
                "name": "Microsoft Graph Calendar - Test",
                "file_path": "TestPlaybooks/playbook-Microsoft-Graph-Calendar-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "msgraph-calendar-list-calendars": "",
                    "msgraph-calendar-create-event": "",
                    "msgraph-calendar-get-event": "",
                    "msgraph-calendar-update-event": "",
                    "msgraph-calendar-list-events": "Microsoft Graph Calendar",
                    "msgraph-calendar-delete-event": ""
                }
            }
        },
        {
            "Microsoft Graph Groups - Test": {
                "name": "Microsoft Graph Groups - Test",
                "file_path": "TestPlaybooks/playbook-MicrosoftGraphGroups-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "msgraph-groups-create-group": "",
                    "msgraph-groups-get-group": "",
                    "msgraph-groups-delete-group": "",
                    "msgraph-groups-list-members": "",
                    "msgraph-groups-list-groups": "",
                    "msgraph-groups-add-member": "",
                    "msgraph-groups-remove-member": ""
                }
            }
        },
        {
            "Microsoft Graph Test": {
                "name": "Microsoft Graph Test",
                "file_path": "TestPlaybooks/playbook-Microsoft_Graph_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "msg-search-alerts": "",
                    "msg-get-alert-details": "",
                    "msg-update-alert": "",
                    "msg-get-users": "",
                    "msg-get-user": ""
                }
            }
        },
        {
            "MicrosoftGraphMail-Test": {
                "name": "MicrosoftGraphMail-Test",
                "file_path": "TestPlaybooks/playbook-MicrosoftGraphMail-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "msgraph-mail-get-attachment": "MicrosoftGraphMail",
                    "msgraph-mail-get-email": "MicrosoftGraphMail",
                    "msgraph-mail-list-attachments": "MicrosoftGraphMail",
                    "msgraph-mail-list-emails": "MicrosoftGraphMail"
                }
            }
        },
        {
            "Mimecast test": {
                "name": "Mimecast test",
                "file_path": "TestPlaybooks/playbook-Mimecast_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "mimecast-list-blocked-sender-policies": "",
                    "mimecast-create-policy": "",
                    "mimecast-delete-policy": "",
                    "mimecast-get-policy": "",
                    "mimecast-query": "",
                    "mimecast-url-decode": "",
                    "mimecast-manage-sender": "",
                    "mimecast-create-managed-url": "",
                    "mimecast-list-managed-url": "",
                    "mimecast-list-messages": "",
                    "mimecast-get-url-logs": "",
                    "mimecast-get-impersonation-logs": "",
                    "mimecast-get-attachment-logs": "",
                    "mimecast-discover": "",
                    "mimecast-login": "",
                    "mimecast-refresh-token": "",
                    "mimecast-get-message": "",
                    "mimecast-download-attachments": "",
                    "mimecast-find-groups": "MimecastV2",
                    "mimecast-get-group-members": "MimecastV2",
                    "mimecast-add-group-member": "MimecastV2",
                    "mimecast-update-group": "MimecastV2",
                    "mimecast-remove-group-member": "MimecastV2",
                    "mimecast-update-policy": ""
                }
            }
        },
        {
            "minemeld_test": {
                "name": "Palo Alto MineMeld Test",
                "file_path": "TestPlaybooks/playbook-Minemeld_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "minemeld-add-to-miner": "",
                    "minemeld-get-indicator-from-miner": "",
                    "minemeld-remove-from-miner": "",
                    "minemeld-retrieve-miner": "",
                    "ip": "Palo Alto Minemeld",
                    "file": "Palo Alto Minemeld"
                }
            }
        },
        {
            "Minerva Test playbook": {
                "name": "Minerva Test playbook",
                "file_path": "TestPlaybooks/playbook-Minerva_Test_playbook.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "IsValueInArray"
                ],
                "command_to_integration": {
                    "minerva-search-endpoint": "Minerva Labs Anti-Evasion Platform",
                    "minerva-search-process": "Minerva Labs Anti-Evasion Platform",
                    "minerva-get-groups": "Minerva Labs Anti-Evasion Platform",
                    "minerva-add-exclusion": "Minerva Labs Anti-Evasion Platform",
                    "minerva-delete-exclusion": "Minerva Labs Anti-Evasion Platform",
                    "minerva-get-exclusions": "Minerva Labs Anti-Evasion Platform",
                    "minerva-add-vaccine": "Minerva Labs Anti-Evasion Platform",
                    "minerva-delete-vaccine": "Minerva Labs Anti-Evasion Platform"
                }
            }
        },
        {
            "MISP V2 Test": {
                "name": "MISP V2 Test",
                "file_path": "TestPlaybooks/playbook-MISP_V2-Test.yml",
                "implementing_scripts": [
                    "misp_upload_sample",
                    "http",
                    "misp_download_sample",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "misp-create-event": "MISP V2",
                    "misp-upload-sample": "MISP V2",
                    "misp-search": "MISP V2",
                    "misp-download-sample": "MISP V2",
                    "misp-delete-event": "MISP V2",
                    "file": "MISP V2",
                    "url": "MISP V2",
                    "ip": "MISP V2",
                    "misp-add-attribute": "MISP V2",
                    "misp-add-sighting": "",
                    "misp-add-events-from-feed": "",
                    "misp-add-url-object": "",
                    "misp-add-ip-object": "",
                    "misp-add-email-object": "",
                    "misp-add-object": "",
                    "misp-add-tag": "MISP V2"
                }
            }
        },
        {
            "MySQL Test": {
                "name": "MySQL Test",
                "file_path": "TestPlaybooks/playbook-MySQL_test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "PrintContext",
                    "TestMysqlQuery"
                ],
                "command_to_integration": {
                    "query": "mysql"
                }
            }
        },
        {
            "Nessus - Test": {
                "name": "Nessus - Test",
                "file_path": "TestPlaybooks/playbook-Nessus_Test.yml",
                "implementing_scripts": [
                    "WhileLoop"
                ],
                "command_to_integration": {
                    "nessus-launch-scan": "Nessus3",
                    "nessus-scan-details": "Nessus3",
                    "nessus-scan-export": "Nessus3",
                    "nessus-scan-report-download": "Nessus3",
                    "nessus-scan-create": "Nessus3",
                    "nessus-scan-status": "Nessus3"
                }
            }
        },
        {
            "Netcraft test": {
                "name": "Netcraft test",
                "file_path": "TestPlaybooks/playbook-Netcraft_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "netcraft-get-takedown-info": "",
                    "netcraft-get-takedown-notes": ""
                }
            }
        },
        {
            "Netskope Test": {
                "name": "Netskope Test",
                "file_path": "TestPlaybooks/playbook-Netskope_Test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "netskope-alerts": "",
                    "netskope-events": ""
                }
            }
        },
        {
            "NetWitness Endpoint Test": {
                "name": "NetWitness Endpoint Test",
                "file_path": "TestPlaybooks/playbook-NetwitnessEndpointTest.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "netwitness-get-machines": "RSA NetWitness Endpoint",
                    "netwitness-get-machine-module": "RSA NetWitness Endpoint",
                    "netwitness-blacklist-ips": "RSA NetWitness Endpoint",
                    "netwitness-blacklist-domains": ""
                }
            }
        },
        {
            "nexpose_test": {
                "name": "Nexpose test",
                "file_path": "TestPlaybooks/playbook-Nexpose_test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext",
                    "GenerateUUID"
                ],
                "command_to_integration": {
                    "nexpose-get-assets": "Rapid7 Nexpose",
                    "nexpose-search-assets": "Rapid7 Nexpose",
                    "nexpose-get-asset": "Rapid7 Nexpose",
                    "nexpose-create-assets-report": "Rapid7 Nexpose",
                    "nexpose-get-asset-vulnerability": "Rapid7 Nexpose",
                    "nexpose-create-site": "Rapid7 Nexpose",
                    "nexpose-delete-site": "Rapid7 Nexpose",
                    "nexpose-pause-scan": "Rapid7 Nexpose",
                    "nexpose-resume-scan": "Rapid7 Nexpose",
                    "nexpose-stop-scan": "Rapid7 Nexpose",
                    "nexpose-start-site-scan": "Rapid7 Nexpose",
                    "nexpose-get-scans": "Rapid7 Nexpose"
                }
            }
        },
        {
            "Nmap - Test": {
                "name": "Nmap - Test",
                "file_path": "TestPlaybooks/playbook-Nmap-Test.yml",
                "implementing_scripts": [
                    "Exists",
                    "Print",
                    "CloseInvestigation"
                ],
                "command_to_integration": {
                    "nmap-scan": ""
                }
            }
        },
        {
            "Office365_Feed_Test": {
                "name": "Office365_Feed_Test",
                "file_path": "Packs/FeedOffice365/TestPlaybooks/playbook-Feed_Office365-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "office365-get-indicators": ""
                },
                "pack": "FeedOffice365"
            }
        },
        {
            "okta_test_playbook": {
                "name": "Okta test playbook",
                "file_path": "TestPlaybooks/playbook-Test_Okta.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "okta-get-group-assignments": "",
                    "okta-get-groups": "",
                    "okta-remove-from-group": "",
                    "okta-add-to-group": "",
                    "okta-update-user": "",
                    "okta-get-failed-logins": "",
                    "okta-get-application-authentication": "",
                    "okta-get-application-assignments": "",
                    "okta-list-groups": "",
                    "okta-get-group-members": "",
                    "okta-suspend-user": "",
                    "okta-unsuspend-user": "",
                    "okta-get-user-factors": "",
                    "okta-get-user": ""
                }
            }
        },
        {
            "OpenPhish Test Playbook": {
                "name": "OpenPhish Test Playbook",
                "file_path": "TestPlaybooks/playbook-OpenPhish-Test.yml",
                "implementing_scripts": [
                    "Exists",
                    "Print",
                    "CloseInvestigation"
                ],
                "command_to_integration": {
                    "url": "OpenPhish",
                    "openphish-status": "OpenPhish"
                }
            }
        },
        {
            "OTRS Test": {
                "name": "OTRS Test",
                "file_path": "TestPlaybooks/playbook-OTRS_Test.yml",
                "implementing_scripts": [
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "otrs-create-ticket": "",
                    "otrs-get-ticket": "",
                    "otrs-update-ticket": "",
                    "otrs-search-ticket": "",
                    "otrs-close-ticket": ""
                }
            }
        },
        {
            "PagerDuty Test": {
                "name": "PagerDuty Test",
                "file_path": "TestPlaybooks/playbook-PagerDuty_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "Set",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "PagerDuty-get-users-on-call-now": "",
                    "PagerDuty-get-all-schedules": "",
                    "PagerDuty-incidents": ""
                }
            }
        },
        {
            "Palo Alto Networks - Malware Remediation Test": {
                "name": "Palo Alto Networks - Malware Remediation Test",
                "file_path": "TestPlaybooks/playbook-Palo_Alto_Networks_-_Malware_Remediation_Test.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "Palo Alto Networks - Malware Remediation"
                ]
            }
        },
        {
            "Palo Alto Networks Cortex Test": {
                "name": "Palo Alto Networks Cortex Test",
                "file_path": "TestPlaybooks/playbook-Palo_Alto_Networks_Cortex_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "cortex-query-logs": "",
                    "cortex-query-threat-logs": "Palo Alto Networks Cortex",
                    "cortex-query-traffic-logs": "Palo Alto Networks Cortex",
                    "cortex-query-traps-logs": "Palo Alto Networks Cortex",
                    "cortex-query-analytics-logs": "Palo Alto Networks Cortex"
                }
            }
        },
        {
            "palo_alto_firewall_test_pb": {
                "name": "palo_alto_firewall_test_pb",
                "file_path": "TestPlaybooks/playbook-palo_alto_firewall_test_pb.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Sleep"
                ],
                "implementing_playbooks": [
                    "PAN-OS Commit Configuration"
                ],
                "command_to_integration": {
                    "panorama": "",
                    "panorama-create-address": "",
                    "panorama-list-addresses": "",
                    "panorama-delete-address": "",
                    "panorama-list-address-groups": "",
                    "panorama-create-address-group": "",
                    "panorama-get-address-group": "",
                    "panorama-delete-address-group": "",
                    "panorama-edit-address-group": "",
                    "panorama-get-custom-url-category": "",
                    "panorama-get-url-category": "",
                    "panorama-create-rule": "",
                    "panorama-edit-rule": "",
                    "panorama-delete-rule": "",
                    "panorama-get-url-filter": "",
                    "panorama-get-pcap": "",
                    "panorama-list-pcaps": "",
                    "panorama-list-edls": "",
                    "panorama-get-edl": "",
                    "panorama-refresh-edl": "",
                    "panorama-register-ip-tag": "",
                    "panorama-unregister-ip-tag": "",
                    "panorama-list-rules": "",
                    "panorama-security-policy-match": "",
                    "panorama-get-url-category-from-cloud": "",
                    "panorama-list-static-routes": "",
                    "panorama-get-static-route": ""
                }
            }
        },
        {
            "palo_alto_panorama_test_pb": {
                "name": "palo_alto_panorama_test_pb",
                "file_path": "TestPlaybooks/playbook-palo_alto_panorama_test_pb.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep"
                ],
                "implementing_playbooks": [
                    "PAN-OS Commit Configuration",
                    "PanoramaCommitConfiguration"
                ],
                "command_to_integration": {
                    "panorama-create-address": "",
                    "panorama-list-addresses": "",
                    "panorama-delete-address": "",
                    "panorama-list-address-groups": "",
                    "panorama-create-address-group": "",
                    "panorama-get-address-group": "",
                    "panorama-delete-address-group": "",
                    "panorama-get-custom-url-category": "",
                    "panorama-move-rule": "",
                    "panorama-commit": "",
                    "panorama-create-rule": "",
                    "panorama-delete-rule": "",
                    "panorama-get-url-filter": "",
                    "panorama-create-service": "",
                    "panorama-get-service": "",
                    "panorama-delete-service": "",
                    "panorama-get-service-group": "",
                    "panorama-edit-rule": "",
                    "panorama-get-address": "",
                    "panorama-list-rules": "",
                    "panorama-edit-custom-url-category": "",
                    "panorama-list-static-routes": ""
                }
            }
        },
        {
            "PaloAltoNetworks_PrismaCloudCompute-Test": {
                "name": "PaloAltoNetworks_PrismaCloudCompute-Test",
                "file_path": "Packs/PrismaCloudCompute/TestPlaybooks/playbook-PaloAltoNetworks_PrismaCloudCompute-Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "PrismaCloudComputeParseAuditAlert",
                    "FetchFromInstance",
                    "PrintContext"
                ],
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "PAN OS EDL Management - Test": {
                "name": "PAN OS EDL Management - Test",
                "file_path": "TestPlaybooks/playbook-PAN_OS_EDL_Management-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "pan-os-edl-update": "",
                    "pan-os-edl-dump-internal-list": "",
                    "pan-os-edl-print-internal-list": "",
                    "pan-os-edl-search-external-file": "",
                    "pan-os-edl-get-external-file": "",
                    "pan-os-edl-get-external-file-metadata": "",
                    "pan-os-edl-update-internal-list": "palo_alto_networks_pan_os_edl_management",
                    "pan-os-edl-update-external-file": "palo_alto_networks_pan_os_edl_management"
                }
            }
        },
        {
            "PAN-OS - Block IP - Custom Block Rule Test": {
                "name": "PAN-OS - Block IP - Custom Block Rule Test",
                "file_path": "TestPlaybooks/playbook-PAN-OS_-_Block_IP_-_Custom_Block_Rule_Test.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "PAN-OS - Block IP - Custom Block Rule"
                ]
            }
        },
        {
            "PAN-OS - Block IP - Static Address Group Test": {
                "name": "PAN-OS - Block IP - Static Address Group Test",
                "file_path": "TestPlaybooks/playbook-PAN-OS_-_Block_IP_-_Static_Address_Group_Test.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "PAN-OS - Block IP - Static Address Group"
                ]
            }
        },
        {
            "PAN-OS - Block IP and URL - External Dynamic List Test": {
                "name": "PAN-OS - Block IP and URL - External Dynamic List Test",
                "file_path": "TestPlaybooks/playbook-PAN-OS_-_Block_IP_and_URL_-_External_Dynamic_List_Test.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "PAN-OS - Block IP and URL - External Dynamic List"
                ]
            }
        },
        {
            "PAN-OS - Block URL - Custom URL Category Test": {
                "name": "PAN-OS - Block URL - Custom URL Category Test",
                "file_path": "TestPlaybooks/playbook-PAN-OS_-_Block_URL_-_Custom_URL_Category_Test.yml",
                "fromversion": "4.0.0",
                "implementing_playbooks": [
                    "PAN-OS - Block URL - Custom URL Category"
                ]
            }
        },
        {
            "PAN-OS Create Or Edit Rule Test": {
                "name": "PAN-OS Create Or Edit Rule Test",
                "file_path": "TestPlaybooks/playbook-PAN-OS_Create_Or_Edit_Rule_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "PAN-OS - Create Or Edit Rule",
                    "PAN-OS Commit Configuration"
                ],
                "command_to_integration": {
                    "panorama-list-rules": "",
                    "panorama-delete-rule": ""
                }
            }
        },
        {
            "PAN-OS DAG Configuration Test": {
                "name": "PAN-OS DAG Configuration Test",
                "file_path": "TestPlaybooks/playbook-PAN-OS_DAG_Configuration_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "PAN-OS DAG Configuration"
                ],
                "command_to_integration": {
                    "panorama-unregister-ip-tag": "",
                    "panorama-delete-address-group": "",
                    "panorama-delete-rule": "",
                    "panorama-get-address-group": "",
                    "panorama-list-rules": ""
                }
            }
        },
        {
            "PAN-OS EDL Setup Test": {
                "name": "PAN-OS EDL Setup Test",
                "file_path": "TestPlaybooks/playbook-PAN_OS_EDL_SETUP-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "PAN-OS EDL Setup"
                ],
                "command_to_integration": {
                    "pan-os-edl-get-external-file-metadata": "",
                    "pan-os-edl-dump-internal-list": ""
                }
            }
        },
        {
            "PAN-OS Query Logs For Indicators Test": {
                "name": "PAN-OS Query Logs For Indicators Test",
                "file_path": "TestPlaybooks/playbook-PAN-OS_Query_Logs_For_Indicators_Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "PAN-OS Query Logs For Indicators"
                ]
            }
        },
        {
            "Panorama Query Logs - Test": {
                "name": "Panorama Query Logs - Test",
                "file_path": "TestPlaybooks/playbook-Panorama_Query_Logs_-_Test.yml",
                "implementing_playbooks": [
                    "Panorama Query Logs"
                ]
            }
        },
        {
            "PANW - Hunting and threat detection by indicator type Test": {
                "name": "PANW - Hunting and threat detection by indicator type Test",
                "file_path": "TestPlaybooks/playbook-PANW_-_Hunting_and_threat_detection_by_indicator_type_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "PANW - Hunting and threat detection by indicator type V2"
                ]
            }
        },
        {
            "ParseEmailFiles-test": {
                "name": "ParseEmailFiles-test",
                "file_path": "TestPlaybooks/playbook-ParseEmailFiles-test.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "ParseEmailFiles",
                    "DeleteContext",
                    "http"
                ]
            }
        },
        {
            "ParseExcel-test": {
                "name": "ParseExcel-test",
                "file_path": "TestPlaybooks/playbook-ParseExcel-test.yml",
                "implementing_scripts": [
                    "http",
                    "ParseExcel",
                    "DeleteContext"
                ]
            }
        },
        {
            "PcapHTTPExtractor-Test": {
                "name": "PcapHTTPExtractor-Test",
                "file_path": "TestPlaybooks/playbook-PcapHTTPExtractor-test.yml",
                "implementing_scripts": [
                    "PcapHTTPExtractor",
                    "DeleteContext",
                    "http",
                    "AreValuesEqual"
                ]
            }
        },
        {
            "Pcysys-Test": {
                "name": "Pcysys-Test",
                "file_path": "Packs/Pcysys/TestPlaybooks/playbook-Pcysys-Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "pentera-run-template-by-name": "",
                    "pentera-get-task-run-status": "",
                    "pentera-get-task-run-full-action-report": ""
                },
                "pack": "Pcysys"
            }
        },
        {
            "Pentera Run Scan - Test": {
                "name": "Pentera Run Scan - Test",
                "file_path": "Packs/Pcysys/TestPlaybooks/playbook-Pentera_Run_Scan_-_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Pentera Run Scan"
                ],
                "pack": "Pcysys"
            }
        },
        {
            "PerceptionPoint Test": {
                "name": "PerceptionPoint Test",
                "file_path": "TestPlaybooks/playbook-PerceptionPoint_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "Print",
                    "DeleteContext",
                    "SendEmail",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "pp-release-email": ""
                }
            }
        },
        {
            "Perch-Test": {
                "name": "Perch-Test",
                "file_path": "TestPlaybooks/playbook-Perch-Test.yml",
                "command_to_integration": {
                    "perch-search-alerts": "Perch",
                    "perch-list-communities": "Perch"
                }
            }
        },
        {
            "PhishAi-Test": {
                "name": "PhishAi-Test",
                "file_path": "TestPlaybooks/playbook-PhishAi-Test.yml",
                "command_to_integration": {
                    "phish-ai-scan-url": "",
                    "phish-ai-dispute-url": ""
                }
            }
        },
        {
            "Phishing - Core - Test": {
                "name": "Phishing - Core - Test",
                "file_path": "TestPlaybooks/playbook-Phishing_-_Core_-_Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "http",
                    "ScheduleCommand",
                    "PhishingIncident"
                ],
                "implementing_playbooks": [
                    "Phishing - Core"
                ],
                "command_to_integration": {
                    "minemeld-add-to-miner": ""
                }
            }
        },
        {
            "Phishing v2 Test - Attachment": {
                "name": "Phishing v2 Test - Attachment",
                "file_path": "TestPlaybooks/playbook-Phishing_v2_Test_-_Attachment.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "http",
                    "ScheduleCommand",
                    "PhishingIncident"
                ],
                "implementing_playbooks": [
                    "Phishing Investigation - Generic v2"
                ],
                "command_to_integration": {
                    "minemeld-add-to-miner": "Palo Alto Minemeld"
                }
            }
        },
        {
            "Phishing v2 Test - Inline": {
                "name": "Phishing v2 Test - Inline",
                "file_path": "TestPlaybooks/playbook-Phishing_v2_Test_-_Inline.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "http",
                    "ScheduleCommand",
                    "PhishingIncident"
                ],
                "implementing_playbooks": [
                    "Phishing Investigation - Generic v2"
                ],
                "command_to_integration": {
                    "minemeld-add-to-miner": "Palo Alto Minemeld"
                }
            }
        },
        {
            "PhishLabsIOC TestPlaybook": {
                "name": "PhishLabsIOC TestPlaybook",
                "file_path": "TestPlaybooks/playbook-PhishLabsIOC_TestPlaybook.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep",
                    "PhishLabsPopulateIndicators",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "phishlabs-global-feed": "PhishLabs IOC",
                    "phishlabs-get-incident-indicators": "PhishLabs IOC"
                }
            }
        },
        {
            "PhishlabsIOC_DRP-Test": {
                "name": "PhishlabsIOC_DRP-Test",
                "file_path": "TestPlaybooks/playbook-PhishlabsIOC_DRP-Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "FetchFromInstance",
                    "PrintContext"
                ],
                "command_to_integration": {
                    "phishlabs-ioc-drp-get-case-by-id": "",
                    "phishlabs-ioc-drp-get-cases": "",
                    "phishlabs-ioc-drp-get-open-cases": "",
                    "phishlabs-ioc-drp-get-closed-cases": ""
                }
            }
        },
        {
            "PhishlabsIOC_EIR-Test": {
                "name": "PhishlabsIOC_EIR-Test",
                "file_path": "TestPlaybooks/playbook-PhishlabsIOC_EIR-Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "FetchFromInstance",
                    "PrintContext"
                ],
                "command_to_integration": {
                    "phishlabs-ioc-eir-get-incident-by-id": "",
                    "phishlabs-ioc-eir-get-incidents": ""
                }
            }
        },
        {
            "PhishLabsTestPopulateIndicators": {
                "name": "PhishLabsTestPopulateIndicators",
                "file_path": "TestPlaybooks/playbook-PhishLabsTestPopulateIndicators.yml",
                "implementing_playbooks": [
                    "PhishLabs - Populate Indicators",
                    "PhishLabs - Whitelist false positives"
                ]
            }
        },
        {
            "PhishTank Testing": {
                "name": "PhishTank Testing",
                "file_path": "TestPlaybooks/playbook-PhishTank-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext",
                    "Set",
                    "http",
                    "ReadFile"
                ],
                "command_to_integration": {
                    "url": "PhishTank"
                }
            }
        },
        {
            "Ping Test Playbook": {
                "name": "Ping Test Playbook",
                "file_path": "TestPlaybooks/playbook-Ping-test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Ping",
                    "isError",
                    "PrintContext"
                ]
            }
        },
        {
            "Pipl Test": {
                "name": "Pipl Test",
                "file_path": "TestPlaybooks/playbook-Pipl_Test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "pipl-search": "Pipl1"
                }
            }
        },
        {
            "PlainText Feed - Test": {
                "name": "PlainText Feed - Test",
                "file_path": "Packs/FeedPlainText/TestPlaybooks/playbook-PlainText_Feed_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "plaintext-get-indicators": "Plain Text Feed"
                },
                "pack": "FeedPlainText"
            }
        },
        {
            "playbook-BruteForceBlocker_test": {
                "name": "playbook-BruteForceBlocker_test",
                "file_path": "Packs/FeedBruteForceBlocker/TestPlaybooks/playbook-BruteForceBlocker_test.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "bruteforceblocker-get-indicators": ""
                },
                "pack": "FeedBruteForceBlocker"
            }
        },
        {
            "playbook-checkEmailAuthenticity-test": {
                "name": "playbook-checkEmailAuthenticity-test",
                "file_path": "TestPlaybooks/playbook-CheckEmailAuthenticity-test.yml",
                "implementing_scripts": [
                    "ParseEmailFiles",
                    "http",
                    "CheckEmailAuthenticity"
                ]
            }
        },
        {
            "playbook-Cymon_Test": {
                "name": "playbook-Cymon_Test",
                "file_path": "TestPlaybooks/playbook-Cymon_Test.yml",
                "implementing_scripts": [
                    "StringContains",
                    "ValidateErrorExistence",
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "ip": "Cymon",
                    "domain": "Cymon"
                }
            }
        },
        {
            "playbook-DshieldFeed_test": {
                "name": "playbook-DshieldFeed_test",
                "file_path": "Packs/FeedDShield/TestPlaybooks/playbook-DshieldFeed_test.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "dshield-get-indicators": ""
                },
                "pack": "FeedDShield"
            }
        },
        {
            "playbook-feedalienvaultotx_test": {
                "name": "playbook-feedalienvaultotx_test",
                "file_path": "Packs/FeedAlienVault/TestPlaybooks/playbook-feedalienvaultotx_test.yml",
                "fromversion": "5.5.0",
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "alienvaultotx-get-indicators": ""
                },
                "pack": "FeedAlienVault"
            }
        },
        {
            "playbook-FeedAutofocus_test": {
                "name": "playbook-FeedAutofocus_test",
                "file_path": "Packs/FeedAutofocus/TestPlaybooks/playbook-FeedAutofocus_test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "autofocus-get-indicators": ""
                },
                "pack": "FeedAutofocus"
            }
        },
        {
            "playbook-feodoteackerhash_test": {
                "name": "playbook-feodoteackerhash_test",
                "file_path": "Packs/FeedFeodoTracker/TestPlaybooks/playbook-feodoteackerhash_test.yml",
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "feodotracker-hashes-get-indicators": ""
                },
                "pack": "FeedFeodoTracker"
            }
        },
        {
            "playbook-feodotrackeripblock_test": {
                "name": "playbook-feodotrackeripblock_test",
                "file_path": "Packs/FeedFeodoTracker/TestPlaybooks/playbook-feodotrackeripblock_test.yml",
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "feodotracker-ipblocklist-get-indicators": ""
                },
                "pack": "FeedFeodoTracker"
            }
        },
        {
            "PolySwarm-Test": {
                "name": "PolySwarm-Test",
                "file_path": "TestPlaybooks/playbook-PolySwarm-Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry"
                ],
                "command_to_integration": {
                    "ip": "PolySwarm",
                    "polyswarm-get-report": "PolySwarm",
                    "domain": "PolySwarm",
                    "url-scan": "PolySwarm",
                    "file-rescan": "PolySwarm",
                    "get-file": "PolySwarm",
                    "file-scan": "PolySwarm",
                    "file": "PolySwarm",
                    "url": "PolySwarm"
                }
            }
        },
        {
            "PortListenCheck-test": {
                "name": "PortListenCheck-test",
                "file_path": "TestPlaybooks/playbook-PortListenCheck-test.yml",
                "implementing_scripts": [
                    "Print",
                    "PortListenCheck"
                ]
            }
        },
        {
            "PostgreSQL Test": {
                "name": "PostgreSQL Test",
                "file_path": "TestPlaybooks/playbook-PostgreSQL-Test.yml",
                "fromversion": "3.6.0",
                "implementing_scripts": [
                    "VerifyHumanReadableEquals"
                ],
                "command_to_integration": {
                    "pgsql-query": "PostgreSQL"
                }
            }
        },
        {
            "PowerShellCommon-Test": {
                "name": "PowerShellCommon-Test",
                "file_path": "Packs/Base/TestPlaybooks/playbook-PowerShellCommon-Test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "Print",
                    "isError",
                    "DeleteContext",
                    "PwshInvokeExpression"
                ],
                "pack": "Base"
            }
        },
        {
            "Preempt Test": {
                "name": "Preempt Test",
                "file_path": "TestPlaybooks/playbook-Preempt_Test.yml",
                "command_to_integration": {
                    "preempt-add-to-watch-list": "Preempt",
                    "preempt-remove-from-watch-list": "Preempt",
                    "preempt-get-activities": "Preempt",
                    "preempt-get-user-endpoints": "Preempt"
                }
            }
        },
        {
            "Process Email - Generic for Rasterize": {
                "name": "Process Email - Generic for Rasterize",
                "file_path": "TestPlaybooks/playbook-Process_Email_-_Generic_for_rasterize.yml",
                "implementing_scripts": [
                    "Exists",
                    "ParseEmailFiles",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Get Original Email - Generic"
                ],
                "command_to_integration": {
                    "rasterize-email": "Rasterize"
                }
            }
        },
        {
            "process_email_-_generic_-_test": {
                "name": "Process Email - Generic - Test",
                "file_path": "TestPlaybooks/playbook-Process_Email_-_Generic_-_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "http",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Process Email - Generic"
                ]
            }
        },
        {
            "ProofpointDecodeURL-Test": {
                "name": "ProofpointDecodeURL-Test",
                "file_path": "TestPlaybooks/playbook-ProofpointDecodeURL-Test.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "CloseInvestigation",
                    "Sleep",
                    "ProofpointDecodeURL"
                ]
            }
        },
        {
            "Protectwise-Test": {
                "name": "Protectwise-Test",
                "file_path": "TestPlaybooks/playbook-Protectwise-test.yml",
                "implementing_scripts": [
                    "PWEventPcapDownload",
                    "PWObservationPcapDownload"
                ],
                "command_to_integration": {
                    "protectwise-show-sensors": "ProtectWise",
                    "protectwise-event-info": "ProtectWise",
                    "protectwise-observation-info": "ProtectWise"
                }
            }
        },
        {
            "Pwned test": {
                "name": "Pwned test",
                "file_path": "TestPlaybooks/playbook-Pwned-test.yml",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "email": "Pwned",
                    "domain": "Pwned"
                }
            }
        },
        {
            "Pwned v2 test": {
                "name": "Pwned v2 test",
                "file_path": "TestPlaybooks/playbook-PwnedV2_test.yml",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "email": "Have I Been Pwned? V2",
                    "domain": "Have I Been Pwned? V2"
                }
            }
        },
        {
            "pyEWS_Test": {
                "name": "pyEWS_Test",
                "file_path": "TestPlaybooks/playbook-pyEWS_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "ews-get-searchable-mailboxes": "",
                    "ews-search-mailboxes": "",
                    "ews-get-contacts": "",
                    "ews-get-attachment": "",
                    "ews-get-out-of-office": "",
                    "ews-find-folders": "",
                    "ews-get-items": "",
                    "ews-expand-group": "",
                    "ews-get-items-from-folder": ""
                }
            }
        },
        {
            "QRadar Indicator Hunting Test": {
                "name": "QRadar Indicator Hunting Test",
                "file_path": "TestPlaybooks/playbook-QRadar_Indicator_Hunting_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "QRadar Indicator Hunting V2"
                ]
            }
        },
        {
            "Qualys-Test": {
                "name": "Qualys-Test",
                "file_path": "TestPlaybooks/playbook-Qualys-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "qualys-report-list": "Qualys",
                    "qualys-pc-scan-list": "Qualys",
                    "qualys-vm-scan-list": "Qualys",
                    "qualys-report-template-list": "Qualys",
                    "qualys-scheduled-report-list": "Qualys"
                }
            }
        },
        {
            "RandomStringGenerateTest": {
                "name": "RandomStringGenerateTest",
                "file_path": "TestPlaybooks/playbook-RandomStringGenerateTest.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "GenerateRandomString",
                    "DeleteContext"
                ]
            }
        },
        {
            "Rasterize 4.5 Test": {
                "name": "Rasterize 4.5 Test",
                "file_path": "TestPlaybooks/playbook-Rasterize_4.5_Test.yml",
                "implementing_scripts": [
                    "http",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Process Email - Generic for Rasterize"
                ],
                "command_to_integration": {
                    "rasterize": "",
                    "image-ocr-extract-text": ""
                }
            }
        },
        {
            "Rasterize Test": {
                "name": "Rasterize Test",
                "file_path": "TestPlaybooks/playbook-Rasterize_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "http",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Process Email - Generic for Rasterize"
                ],
                "command_to_integration": {
                    "rasterize": "",
                    "image-ocr-extract-text": "",
                    "rasterize-email": "Rasterize"
                }
            }
        },
        {
            "RasterizeImageTest": {
                "name": "RasterizeImageTest",
                "file_path": "TestPlaybooks/playbook-RasterizeImageTest.yml",
                "implementing_scripts": [
                    "GenerateImageFileEntry",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "rasterize-image": ""
                }
            }
        },
        {
            "ReadFile test": {
                "name": "ReadFile test",
                "file_path": "TestPlaybooks/playbook-ReadFile_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "ReadFile_copy",
                    "http",
                    "ReadFile"
                ]
            }
        },
        {
            "ReadPDFFile-Test": {
                "name": "ReadPDFFile-Test",
                "file_path": "TestPlaybooks/playbook-ReadPDFFile_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "ReadPDFFile",
                    "http",
                    "DeleteContext"
                ]
            }
        },
        {
            "ReadPDFFileV2-Test": {
                "name": "ReadPDFFileV2-Test",
                "file_path": "TestPlaybooks/playbook-ReadPDFFileV2_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "http",
                    "ReadPDFFileV2",
                    "PrintErrorEntry"
                ]
            }
        },
        {
            "Recorded Future Test": {
                "name": "Recorded Future Test",
                "file_path": "TestPlaybooks/playbook-Recorded_Future_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "VerifyContext",
                    "FetchFromInstance",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "recorded-future-get-related-entities": "Recorded Future",
                    "ip": "Recorded Future",
                    "domain": "Recorded Future",
                    "file": "Recorded Future",
                    "url": "Recorded Future",
                    "recorded-future-get-threats-hash": "Recorded Future",
                    "recorded-future-get-threats-ip": "Recorded Future",
                    "recorded-future-get-threats-url": "Recorded Future",
                    "recorded-future-get-threats-domain": "Recorded Future",
                    "recorded-future-get-threats-vulnerabilities": "Recorded Future",
                    "recorded-future-get-domain-riskrules": "Recorded Future",
                    "recorded-future-get-hash-riskrules": "Recorded Future",
                    "recorded-future-get-ip-riskrules": "Recorded Future",
                    "recorded-future-get-url-riskrules": "Recorded Future",
                    "recorded-future-get-vulnerability-riskrules": "Recorded Future",
                    "recorded-future-get-alert-rules": "Recorded Future",
                    "recorded-future-get-alerts": "Recorded Future"
                }
            }
        },
        {
            "Recorded Future Test": {
                "name": "Recorded Future Test",
                "file_path": "TestPlaybooks/playbook-Recorded_Future_Test_4_0.yml",
                "toversion": "4.0.0",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "recorded-future-get-related-entities": "Recorded Future",
                    "ip": "Recorded Future",
                    "domain": "Recorded Future",
                    "file": "Recorded Future",
                    "url": "Recorded Future",
                    "recorded-future-get-threats-hash": "Recorded Future",
                    "recorded-future-get-threats-ip": "Recorded Future",
                    "recorded-future-get-threats-url": "Recorded Future",
                    "recorded-future-get-threats-domain": "Recorded Future",
                    "recorded-future-get-threats-vulnerabilities": "Recorded Future",
                    "recorded-future-get-domain-riskrules": "Recorded Future",
                    "recorded-future-get-hash-riskrules": "Recorded Future",
                    "recorded-future-get-ip-riskrules": "Recorded Future",
                    "recorded-future-get-url-riskrules": "Recorded Future",
                    "recorded-future-get-vulnerability-riskrules": "Recorded Future",
                    "recorded-future-get-alert-rules": "Recorded Future",
                    "recorded-future-get-alerts": "Recorded Future"
                }
            }
        },
        {
            "RecordedFutureFeed - Test": {
                "name": "RecordedFutureFeed - Test",
                "file_path": "Packs/FeedRecordedFuture/TestPlaybooks/playbook-RecordedFutureFeed.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "rf-feed-get-indicators": "",
                    "rf-feed-get-risk-rules": ""
                },
                "pack": "FeedRecordedFuture"
            }
        },
        {
            "RedCanaryTest": {
                "name": "RedCanaryTest",
                "file_path": "TestPlaybooks/playbook-RedCanaryTest.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "redcanary-list-detections": "RedCanary",
                    "redcanary-list-endpoints": "RedCanary",
                    "redcanary-acknowledge-detection": "RedCanary",
                    "redcanary-execute-playbook": "RedCanary",
                    "redcanary-update-remediation-state": "RedCanary",
                    "redcanary-get-detection": "RedCanary",
                    "redcanary-get-endpoint-detections": "RedCanary",
                    "redcanary-get-endpoint": "RedCanary"
                }
            }
        },
        {
            "RedLockTest": {
                "name": "RedLockTest",
                "file_path": "TestPlaybooks/playbook-RedLockTest.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "redlock-search-alerts": "",
                    "redlock-get-alert-details": "",
                    "redlock-dismiss-alerts": "",
                    "redlock-reopen-alerts": ""
                }
            }
        },
        {
            "RegexGroups Test": {
                "name": "RegexGroups Test",
                "file_path": "TestPlaybooks/playbook-RegexGroups_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext",
                    "RaiseError",
                    "Set"
                ]
            }
        },
        {
            "RegPathReputationBasicLists_test": {
                "name": "RegPathReputationBasicLists_test",
                "file_path": "TestPlaybooks/playbook-RegPathReputationBasicLists_test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "RegPathReputationBasicLists",
                    "DeleteContext",
                    "TestRegPathReputation"
                ]
            }
        },
        {
            "Remedy AR Test": {
                "name": "Remedy AR Test",
                "file_path": "TestPlaybooks/playbook-Remedy_AR_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "remedy-get-server-details": "Remedy AR"
                }
            }
        },
        {
            "Remedy-On-Demand-Test": {
                "name": "Remedy-On-Demand-Test",
                "file_path": "TestPlaybooks/playbook-Remedy-On-Demand-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "remedy-incident-create": "Remedy On-Demand",
                    "remedy-get-incident": "Remedy On-Demand",
                    "remedy-fetch-incidents": "Remedy On-Demand",
                    "remedy-incident-update": "Remedy On-Demand"
                }
            }
        },
        {
            "remedy_sr_test_pb": {
                "name": "remedy_sr_test_pb",
                "file_path": "TestPlaybooks/playbook-Remedy_SR_test.yml",
                "command_to_integration": {
                    "remedy-create-ticket": "",
                    "remedy-get-ticket": ""
                }
            }
        },
        {
            "reputations.json Test": {
                "name": "reputations.json Test",
                "file_path": "TestPlaybooks/playbook-reputation.json-Test.yml",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext",
                    "Set"
                ]
            }
        },
        {
            "Request Debugging - Test": {
                "name": "Request Debugging - Test",
                "file_path": "TestPlaybooks/playbook-Request_Debugging_-_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "SimpleRequestGetter",
                    "SimpleRequestExecutor"
                ]
            }
        },
        {
            "ReversingLabsA1000Test": {
                "name": "ReversingLabsA1000Test",
                "file_path": "TestPlaybooks/playbook-ReversingLabsA1000Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "file": "ReversingLabs A1000",
                    "reversinglabs-download": "ReversingLabs A1000",
                    "reversinglabs-extracted-files": "ReversingLabs A1000",
                    "reversinglabs-analyze": "ReversingLabs A1000",
                    "reversinglabs-download-unpacked": "ReversingLabs A1000"
                }
            }
        },
        {
            "ReversingLabsTCTest": {
                "name": "ReversingLabsTCTest",
                "file_path": "TestPlaybooks/playbook-ReversingLabsTCTest.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "file": "ReversingLabs Titanium Cloud"
                }
            }
        },
        {
            "RiskSense Get Apps - Test": {
                "name": "RiskSense Get Apps - Test",
                "file_path": "TestPlaybooks/playbook-RiskSenseGetApps-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "risksense-get-apps": "RiskSense"
                }
            }
        },
        {
            "RiskSense Get Apps Detail - Test": {
                "name": "RiskSense Get Apps Detail - Test",
                "file_path": "TestPlaybooks/playbook-RiskSenseGetAppsDetail-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "risksense-get-app-detail": "RiskSense"
                }
            }
        },
        {
            "RiskSense Get Host Detail - Test": {
                "name": "RiskSense Get Host Detail - Test",
                "file_path": "TestPlaybooks/playbook-RiskSenseGetHostDetail-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "risksense-get-host-detail": "RiskSense"
                }
            }
        },
        {
            "RiskSense Get Host Finding Detail - Test": {
                "name": "RiskSense Get Host Finding Detail - Test",
                "file_path": "TestPlaybooks/playbook-RiskSenseGetHostFindingDetail-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "risksense-get-host-finding-detail": "RiskSense"
                }
            }
        },
        {
            "RiskSense Get Host Findings - Test": {
                "name": "RiskSense Get Host Findings - Test",
                "file_path": "TestPlaybooks/playbook-RiskSenseGetHostFindings-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "risksense-get-host-findings": "RiskSense"
                }
            }
        },
        {
            "RiskSense Get Hosts - Test": {
                "name": "RiskSense Get Hosts - Test",
                "file_path": "TestPlaybooks/playbook-RiskSenseGetHosts-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "risksense-get-hosts": "RiskSense"
                }
            }
        },
        {
            "RiskSense Get Unique Cves - Test": {
                "name": "RiskSense Get Unique Cves - Test",
                "file_path": "TestPlaybooks/playbook-RiskSenseGetUniqueCves-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "risksense-get-unique-cves": ""
                }
            }
        },
        {
            "RiskSense Get Unique Open Findings - Test": {
                "name": "RiskSense Get Unique Open Findings - Test",
                "file_path": "TestPlaybooks/playbook-RiskSenseGetUniqueOpenFindings-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "risksense-get-unique-open-findings": ""
                }
            }
        },
        {
            "RSA NetWitness Test": {
                "name": "RSA NetWitness Test",
                "file_path": "TestPlaybooks/playbook-RSANetWitness_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "netwitness-get-incidents": "RSA NetWitness v11.1",
                    "netwitness-get-incident": "RSA NetWitness v11.1",
                    "netwitness-update-incident": "RSA NetWitness v11.1"
                }
            }
        },
        {
            "rsa_packets_and_logs_test": {
                "name": "RSA Packets And Logs test",
                "file_path": "TestPlaybooks/playbook-Test_RSA_PacketsAndLogs.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "netwitness-msearch": "RSA NetWitness Packets and Logs",
                    "netwitness-query": "RSA NetWitness Packets and Logs",
                    "nw-sdk-values": "RSA NetWitness Packets and Logs",
                    "nw-sdk-content": "RSA NetWitness Packets and Logs"
                }
            }
        },
        {
            "RTIR Test": {
                "name": "RTIR Test",
                "file_path": "TestPlaybooks/playbook-RTIR_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "rtir-create-ticket": "RTIR",
                    "rtir-edit-ticket": "RTIR",
                    "rtir-search-ticket": "RTIR",
                    "rtir-get-ticket": "RTIR",
                    "rtir-resolve-ticket": "RTIR"
                }
            }
        },
        {
            "SalesforceTestPlaybook": {
                "name": "SalesforceTestPlaybook",
                "file_path": "TestPlaybooks/playbook-SalesforceTestPlaybook.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "ContextContains"
                ],
                "command_to_integration": {
                    "salesforce-search": "Salesforce",
                    "salesforce-query": "Salesforce",
                    "salesforce-create-case": "Salesforce",
                    "salesforce-get-object": "Salesforce",
                    "salesforce-get-case": "Salesforce",
                    "salesforce-update-case": "Salesforce",
                    "salesforce-update-object": "Salesforce",
                    "salesforce-push-comment": "Salesforce",
                    "salesforce-close-case": "Salesforce",
                    "salesforce-delete-case": "Salesforce"
                }
            }
        },
        {
            "Sandblast_malicious_test": {
                "name": "Sandblast_malicious_test",
                "file_path": "TestPlaybooks/playbook-Sandblast_malicious_test.yml",
                "implementing_scripts": [
                    "Exists",
                    "DeleteContext",
                    "http"
                ],
                "command_to_integration": {
                    "sandblast-upload": "",
                    "sandblast-query": "Check Point Sandblast"
                }
            }
        },
        {
            "SCADAfence_test": {
                "name": "SCADAfence_test",
                "file_path": "TestPlaybooks/playbook-SCADAfence_test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "scadafence-getAlerts": "SCADAfence CNM",
                    "scadafence-setAlertStatus": "SCADAfence CNM",
                    "scadafence-getAsset": "SCADAfence CNM"
                }
            }
        },
        {
            "search_endpoints_by_hash_-_carbon_black_protection_-_test": {
                "name": "Search Endpoints By Hash - Carbon Black Protection - Test",
                "file_path": "TestPlaybooks/playbook-Search_Endpoints_By_Hash_-_Carbon_Black_Protection_-_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Search Endpoints By Hash - Carbon Black Protection"
                ]
            }
        },
        {
            "search_endpoints_by_hash_-_crowdstrike_-_test": {
                "name": "Search Endpoints By Hash - CrowdStrike - Test",
                "file_path": "TestPlaybooks/playbook-Search_Endpoints_By_Hash_-_CrowdStrike_-_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Search Endpoints By Hash - CrowdStrike"
                ]
            }
        },
        {
            "search_endpoints_by_hash_-_generic_-_test": {
                "name": "Search Endpoints By Hash - Generic - Test",
                "file_path": "TestPlaybooks/playbook-Search_Endpoints_By_Hash_-_Generic_-_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set",
                    "VerifyContext"
                ],
                "implementing_playbooks": [
                    "Search Endpoints By Hash - Generic"
                ]
            }
        },
        {
            "search_endpoints_by_hash_-_tie_-_test": {
                "name": "Search Endpoints By Hash - TIE - Test",
                "file_path": "TestPlaybooks/playbook-Search_Endpoints_By_Hash_-_TIE_-_Test.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Search Endpoints By Hash - TIE"
                ]
            }
        },
        {
            "SecBI - Test": {
                "name": "SecBI - Test",
                "file_path": "TestPlaybooks/playbook-SecBI-Test.yml",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "secbi-get-incidents-list": "",
                    "secbi-get-incident": ""
                }
            }
        },
        {
            "secureworks_test": {
                "name": "Secureworks test",
                "file_path": "TestPlaybooks/playbook-SecureWorks_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "secure-works-create-ticket": "Dell Secureworks",
                    "secure-works-get-ticket": "Dell Secureworks",
                    "secure-works-update-ticket": "Dell Secureworks",
                    "secure-works-get-tickets-updates": "Dell Secureworks",
                    "secure-works-get-tickets-ids": "Dell Secureworks",
                    "secure-works-get-ticket-count": "Dell Secureworks",
                    "secure-works-close-ticket": "Dell Secureworks"
                }
            }
        },
        {
            "SecurityAdvisor-Test": {
                "name": "SecurityAdvisor-Test",
                "file_path": "TestPlaybooks/playbook-SecurityAdvisor-Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "coach-end-user": "SecurityAdvisor"
                }
            }
        },
        {
            "Send Investigation Summary Reports - Test": {
                "name": "Send Investigation Summary Reports - Test",
                "file_path": "TestPlaybooks/playbook-Send_Investigation_Summary_Reports_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Exists",
                    "SearchIncidents",
                    "Sleep"
                ],
                "implementing_playbooks": [
                    "Send Investigation Summary Reports"
                ]
            }
        },
        {
            "SentinelOne V2 - test": {
                "name": "SentinelOne V2 - test",
                "file_path": "TestPlaybooks/playbook-SentinelOne-Beta-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "sentinelone-get-threats": "",
                    "sentinelone-get-activities": "",
                    "sentinelone-list-agents": "",
                    "sentinelone-get-agent": "",
                    "sentinelone-agent-processes": "",
                    "sentinelone-get-groups": "",
                    "sentinelone-threat-summary": "",
                    "sentinelone-mark-as-threat": "",
                    "sentinelone-disconnect-agent": "",
                    "sentinelone-broadcast-message": "",
                    "sentinelone-create-query": "",
                    "sentinelone-get-events": "",
                    "sentinelone-get-processes": "",
                    "sentinelone-connect-agent": ""
                }
            }
        },
        {
            "Set - Test": {
                "name": "Set - Test",
                "file_path": "TestPlaybooks/playbook-Set_-_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ]
            }
        },
        {
            "SetAndHandleEmpty test": {
                "name": "SetAndHandleEmpty test",
                "file_path": "TestPlaybooks/playbook-SetAndHandleEmpty_test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "SetAndHandleEmpty",
                    "Set"
                ]
            }
        },
        {
            "ShodanTest": {
                "name": "ShodanTest",
                "file_path": "TestPlaybooks/playbook-Shodan-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "ip": "Shodan"
                }
            }
        },
        {
            "SignalSciences-Test": {
                "name": "SignalSciences-Test",
                "file_path": "TestPlaybooks/playbook-SignalSciencesTest.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "sigsci-blacklist-add-ip": "",
                    "sigsci-get-blacklist": "",
                    "sigsci-blacklist-remove-ip": "",
                    "sigsci-whitelist-add-ip": "",
                    "sigsci-get-whitelist": "",
                    "sigsci-whitelist-remove-ip": "",
                    "sigsci-add-alert": "",
                    "sigsci-get-alert": "",
                    "sigsci-update-alert": "",
                    "sigsci-delete-alert": "",
                    "sigsci-create-site-list": "",
                    "sigsci-get-site-list": "",
                    "sigsci-update-site-list": "",
                    "sigsci-delete-site-list": "",
                    "sigsci-get-all-alerts": "",
                    "sigsci-get-all-site-lists": "",
                    "sigsci-create-corp-list": "",
                    "sigsci-get-corp-list": "",
                    "sigsci-update-corp-list": "",
                    "sigsci-delete-corp-list": "",
                    "sigsci-get-all-corp-lists": "",
                    "sigsci-get-requests": "",
                    "sigsci-get-request-by-id": "",
                    "sigsci-get-events": "",
                    "sigsci-get-event-by-id": ""
                }
            }
        },
        {
            "Sixgill - Darkfeed - Indicators-Test": {
                "name": "Sixgill - Darkfeed - Indicators-Test",
                "file_path": "Packs/Sixgill/TestPlaybooks/playbook-Sixgill_-_Darkfeed_-_Indicators-Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Sixgill - DarkFeed - Indicators"
                ],
                "pack": "Sixgill"
            }
        },
        {
            "Sixgill-Test": {
                "name": "Sixgill-Test",
                "file_path": "Packs/Sixgill/TestPlaybooks/playbook-Sixgill-Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "sixgill-get-indicators": "Sixgill"
                },
                "pack": "Sixgill"
            }
        },
        {
            "SLA Scripts - Test": {
                "name": "SLA Scripts - Test",
                "file_path": "TestPlaybooks/playbook-SLA_Scripts_-_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "ChangeRemediationSLAOnSevChange",
                    "Set",
                    "StopTimeToAssignOnOwnerChange"
                ]
            }
        },
        {
            "Slack Test Playbook": {
                "name": "Slack Test Playbook",
                "file_path": "Packs/Slack/TestPlaybooks/playbook-Slack_TestPlaybook.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "GetTime",
                    "VerifyHumanReadableContains",
                    "FileCreateAndUpload"
                ],
                "command_to_integration": {
                    "mirror-investigation": "SlackV2",
                    "send-notification": "SlackV2",
                    "slack-send-file": "SlackV2",
                    "close-channel": "SlackV2",
                    "slack-create-channel": "SlackV2",
                    "slack-invite-to-channel": "SlackV2",
                    "slack-kick-from-channel": "SlackV2",
                    "slack-rename-channel": "SlackV2",
                    "slack-get-user-details": "SlackV2"
                },
                "pack": "Slack"
            }
        },
        {
            "SlashNextPhishingIncidentResponse-Test": {
                "name": "SlashNextPhishingIncidentResponse-Test",
                "file_path": "TestPlaybooks/playbook-SlashNextPhishingIncidentResponse-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "slashnext-host-reputation": "SlashNext Phishing Incident Response",
                    "slashnext-host-report": "SlashNext Phishing Incident Response",
                    "slashnext-host-urls": "SlashNext Phishing Incident Response",
                    "slashnext-url-scan-sync": "SlashNext Phishing Incident Response",
                    "slashnext-url-scan": "SlashNext Phishing Incident Response",
                    "slashnext-scan-report": "SlashNext Phishing Incident Response"
                }
            }
        },
        {
            "SMB test": {
                "name": "SMB test",
                "file_path": "TestPlaybooks/playbook-SMB_test.yml",
                "implementing_scripts": [
                    "http",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "smb-download": "",
                    "smb-upload": ""
                }
            }
        },
        {
            "SNDBOX_Test": {
                "name": "SNDBOX_Test",
                "file_path": "TestPlaybooks/playbook-SNDBOX_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "http"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "sndbox-is-online": "",
                    "sndbox-analysis-submit-sample": "",
                    "sndbox-analysis-info": "",
                    "sndbox-download-sample": "",
                    "sndbox-download-report": ""
                }
            }
        },
        {
            "Snowflake-Test": {
                "name": "Snowflake-Test",
                "file_path": "TestPlaybooks/playbook-Snowflake-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "snowflake-query": "Snowflake"
                }
            }
        },
        {
            "Spamhaus_Feed_Test": {
                "name": "Spamhaus_Feed_Test",
                "file_path": "Packs/FeedSpamhaus/TestPlaybooks/playbook-FeedSpamhaus_test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "spamhaus-get-indicators": "SpamhausFeed"
                },
                "pack": "FeedSpamhaus"
            }
        },
        {
            "Splunk Indicator Hunting Test": {
                "name": "Splunk Indicator Hunting Test",
                "file_path": "TestPlaybooks/playbook-Splunk_Indicator_Hunting_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Splunk Indicator Hunting"
                ]
            }
        },
        {
            "Splunk-Test": {
                "name": "Splunk-Test",
                "file_path": "TestPlaybooks/playbook-SplunkTest2.yml",
                "implementing_scripts": [
                    "Print",
                    "VerifyContext",
                    "DumpJSON",
                    "IsGreaterThan",
                    "Set",
                    "StringContains"
                ],
                "command_to_integration": {
                    "splunk-search": "SplunkPy",
                    "splunk-get-indexes": "SplunkPy",
                    "splunk-submit-event": "SplunkPy",
                    "splunk-parse-raw": "SplunkPy"
                }
            }
        },
        {
            "SplunkPy-Test-V2": {
                "name": "SplunkPy-Test-V2",
                "file_path": "TestPlaybooks/playbook-SplunkPy-Test-V2.yml",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext",
                    "Set"
                ],
                "command_to_integration": {
                    "splunk-search": "",
                    "splunk-get-indexes": "",
                    "splunk-job-create": "",
                    "splunk-results": "",
                    "splunk-submit-event": "",
                    "splunk-parse-raw": ""
                }
            }
        },
        {
            "SplunkPySearch_Test": {
                "name": "SplunkPySearch_Test",
                "file_path": "TestPlaybooks/playbook-SplunkPySearch_Test.yml",
                "implementing_scripts": [
                    "SplunkPySearch",
                    "VerifyHumanReadableContains"
                ]
            }
        },
        {
            "ssdeepreputationtest": {
                "name": "SsdeepReputationTest",
                "file_path": "TestPlaybooks/playbook-SsdeepReputationTest.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext",
                    "SsdeepReputationTest",
                    "SSDeepReputation",
                    "Sleep"
                ]
            }
        },
        {
            "SSL Blacklist test": {
                "name": "SSL Blacklist test",
                "file_path": "Packs/Feedsslabusech/TestPlaybooks/playbook-sslbl_test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "sslbl-get-indicators": ""
                },
                "pack": "Feedsslabusech"
            }
        },
        {
            "StixCreator-Test": {
                "name": "StixCreator-Test",
                "file_path": "TestPlaybooks/playbook-TestStixCreator.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "StixCreator"
                ]
            }
        },
        {
            "STIXParserTest": {
                "name": "STIXParserTest",
                "file_path": "TestPlaybooks/playbook-STIXParserTest.yml",
                "implementing_scripts": [
                    "StixParser",
                    "http"
                ]
            }
        },
        {
            "StringContainsArray_test": {
                "name": "StringContainsArray_test",
                "file_path": "TestPlaybooks/playbook-StringContainsArray_test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ]
            }
        },
        {
            "strings-test": {
                "name": "strings-test",
                "file_path": "TestPlaybooks/playbook-Test-strings.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "Strings",
                    "FileCreateAndUpload",
                    "CreateBinaryFile",
                    "PublishEntriesToContext"
                ]
            }
        },
        {
            "stripChars - Test": {
                "name": "stripChars - Test",
                "file_path": "TestPlaybooks/playbook-StripChars-Test.yml",
                "implementing_scripts": [
                    "StripChars",
                    "commentsToContext"
                ]
            }
        },
        {
            "sumList - Test": {
                "name": "sumList - Test",
                "file_path": "TestPlaybooks/playbook-sumList_-_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ]
            }
        },
        {
            "SumoLogic-Test": {
                "name": "SumoLogic-Test",
                "file_path": "TestPlaybooks/playbook-SumoLogic-test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "search": "SumoLogic"
                }
            }
        },
        {
            "Symantec ATP Test": {
                "name": "Symantec ATP Test",
                "file_path": "TestPlaybooks/playbook-Symantec_ATP_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "satp-appliances": "",
                    "satp-files": "",
                    "satp-events": "",
                    "satp-incidents": ""
                }
            }
        },
        {
            "Symantec Data Loss Prevention - Test": {
                "name": "Symantec Data Loss Prevention - Test",
                "file_path": "TestPlaybooks/playbook-Symantec_Data_Loss_Prevention_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "symantec-dlp-list-incidents": "Symantec Data Loss Prevention",
                    "symantec-dlp-get-incident-details": "Symantec Data Loss Prevention",
                    "symantec-dlp-incident-violations": "Symantec Data Loss Prevention",
                    "symantec-dlp-list-custom-attributes": "Symantec Data Loss Prevention",
                    "symantec-dlp-list-incident-status": "Symantec Data Loss Prevention",
                    "symantec-dlp-update-incident": "Symantec Data Loss Prevention",
                    "symantec-dlp-incident-binaries": "Symantec Data Loss Prevention"
                }
            }
        },
        {
            "Symantec Deepsight Test": {
                "name": "Symantec Deepsight Test",
                "file_path": "TestPlaybooks/playbook-Symantec_Deepsight_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "file": "Symantec Deepsight Intelligence",
                    "url": "Symantec Deepsight Intelligence",
                    "ip": "Symantec Deepsight Intelligence",
                    "domain": "Symantec Deepsight Intelligence"
                }
            }
        },
        {
            "Symantec Messaging Gateway Test": {
                "name": "Symantec Messaging Gateway Test",
                "file_path": "TestPlaybooks/playbook-Symantec_Messaging_Gateway_Test.yml",
                "implementing_scripts": [
                    "GenerateIP",
                    "VerifyContext",
                    "AreValuesEqual",
                    "GenerateUUID"
                ],
                "command_to_integration": {
                    "smg-block-email": "Symantec Messaging Gateway",
                    "smg-unblock-email": "Symantec Messaging Gateway",
                    "smg-block-domain": "Symantec Messaging Gateway",
                    "smg-unblock-domain": "Symantec Messaging Gateway",
                    "smg-block-ip": "Symantec Messaging Gateway",
                    "smg-unblock-ip": "Symantec Messaging Gateway"
                }
            }
        },
        {
            "SymantecEndpointProtection_Test": {
                "name": "SymantecEndpointProtection_Test",
                "file_path": "TestPlaybooks/playbook-SymantecEndpointProtection_Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "sep-system-info": "",
                    "sep-client-content": "",
                    "sep-groups-info": "",
                    "sep-endpoints-info": "",
                    "sep-update-endpoint-content": "",
                    "sep-endpoint-quarantine": "",
                    "sep-scan-endpoint": "",
                    "sep-list-locations": "",
                    "sep-list-policies": "",
                    "sep-identify-old-clients": ""
                }
            }
        },
        {
            "SymantecMC_TestPlaybook": {
                "name": "SymantecMC_TestPlaybook",
                "file_path": "TestPlaybooks/playbook-SymantecMC_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "isError"
                ],
                "command_to_integration": {
                    "symantec-mc-list-devices": "Symantec Management Center",
                    "symantec-mc-get-device": "",
                    "symantec-mc-get-device-health": "Symantec Management Center",
                    "symantec-mc-get-device-license": "Symantec Management Center",
                    "symantec-mc-get-device-status": "Symantec Management Center",
                    "symantec-mc-list-policies": "Symantec Management Center",
                    "symantec-mc-delete-policy": "Symantec Management Center",
                    "symantec-mc-create-policy": "Symantec Management Center",
                    "symantec-mc-list-tenants": "Symantec Management Center",
                    "symantec-mc-add-policy-content": "Symantec Management Center",
                    "symantec-mc-delete-policy-content": "Symantec Management Center",
                    "symantec-mc-get-policy": "Symantec Management Center",
                    "symantec-mc-update-policy": "Symantec Management Center"
                }
            }
        },
        {
            "SymantecMSSTest": {
                "name": "SymantecMSSTest",
                "file_path": "TestPlaybooks/playbook-SymantecMSSTest.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "symantec-mss-incidents-list": "Symantec MSS",
                    "symantec-mss-get-incident": "Symantec MSS",
                    "symantec-mss-update-incident": "Symantec MSS"
                }
            }
        },
        {
            "Tanium Test Playbook": {
                "name": "Tanium Test Playbook",
                "file_path": "TestPlaybooks/playbook-Tanium_Test.yml",
                "fromversion": "2.5.0",
                "command_to_integration": {
                    "tn-ask-question": "Tanium",
                    "tn-get-saved-question": "Tanium",
                    "tn-deploy-package": "Tanium"
                }
            }
        },
        {
            "Tanium v2 - Test": {
                "name": "Tanium v2 - Test",
                "file_path": "TestPlaybooks/playbook-Tanium_v2_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Tanium - Get Saved Question Result",
                    "Tanium - Ask Question"
                ],
                "command_to_integration": {
                    "tn-get-system-status": "",
                    "tn-list-packages": "",
                    "tn-list-sensors": "",
                    "tn-list-saved-questions": "",
                    "tn-list-saved-actions": "",
                    "tn-list-saved-actions-pending-approval": "",
                    "tn-get-package": "",
                    "tn-get-sensor": "",
                    "tn-get-action": "",
                    "tn-get-question-metadata": "",
                    "tn-get-saved-action": "",
                    "tn-get-saved-question-metadata": "",
                    "tn-list-groups": "",
                    "tn-get-group": ""
                }
            }
        },
        {
            "TAXII_Feed_Test": {
                "name": "TAXII_Feed_Test",
                "file_path": "TestPlaybooks/playbook-TAXII_Feed_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "get-indicators": "TAXIIFeed"
                }
            }
        },
        {
            "TCPUtils-Test": {
                "name": "Tcpiputlis Test Playbook",
                "file_path": "TestPlaybooks/playbook-TCPIPUtils_Test.yml",
                "implementing_scripts": [
                    "VerifyContextFields",
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "ip": "TCPIPUtils"
                }
            }
        },
        {
            "tenable-sc-scan-test": {
                "name": "Test tenable scan",
                "file_path": "TestPlaybooks/playbook-tenable.sc_scan_test.yml",
                "implementing_playbooks": [
                    "Launch Scan - Tenable.sc"
                ]
            }
        },
        {
            "tenable-sc-test": {
                "name": "Tenable.sc Test",
                "file_path": "TestPlaybooks/playbook-tenable.sc_test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "DeleteContext",
                    "GetTime",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "tenable-sc-list-policies": "Tenable.sc",
                    "tenable-sc-list-repositories": "Tenable.sc",
                    "tenable-sc-list-zones": "Tenable.sc",
                    "tenable-sc-list-credentials": "Tenable.sc",
                    "tenable-sc-create-scan": "Tenable.sc",
                    "tenable-sc-list-report-definitions": "Tenable.sc",
                    "tenable-sc-delete-scan": "Tenable.sc",
                    "tenable-sc-list-scans": "Tenable.sc",
                    "tenable-sc-launch-scan": "Tenable.sc",
                    "tenable-sc-get-scan-status": "Tenable.sc",
                    "tenable-sc-get-scan-report": "Tenable.sc",
                    "tenable-sc-get-vulnerability": "Tenable.sc",
                    "tenable-sc-create-asset": "Tenable.sc",
                    "tenable-sc-list-users": "Tenable.sc",
                    "tenable-sc-delete-asset": "Tenable.sc",
                    "tenable-sc-list-alerts": "Tenable.sc",
                    "tenable-sc-get-alert": "Tenable.sc",
                    "tenable-sc-list-assets": "Tenable.sc",
                    "tenable-sc-get-device": "Tenable.sc",
                    "tenable-sc-get-system-licensing": "Tenable.sc",
                    "tenable-sc-get-asset": "Tenable.sc",
                    "tenable-sc-get-all-scan-results": "Tenable.sc"
                }
            }
        },
        {
            "Tenable.io Scan Test": {
                "name": "Tenable.io Scan Test",
                "file_path": "TestPlaybooks/playbook-Tenable.io_Scan_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Tenable.io Scan"
                ]
            }
        },
        {
            "Tenable.io test": {
                "name": "Tenable.io test",
                "file_path": "TestPlaybooks/playbook-Tenable.io_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "tenable-io-list-scans": "",
                    "tenable-io-get-scan-status": "",
                    "tenable-io-get-scan-report": "",
                    "tenable-io-get-vulnerability-details": "",
                    "tenable-io-get-vulnerabilities-by-asset": ""
                }
            }
        },
        {
            "Test - Cofense Intelligence": {
                "name": "Test - Cofense Intelligence",
                "file_path": "TestPlaybooks/playbook-Cofense-Test.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "DeleteContext",
                    "IsGreaterThan"
                ],
                "command_to_integration": {
                    "ip": "Cofense Intelligence",
                    "url": "Cofense Intelligence",
                    "file": "Cofense Intelligence",
                    "email": "Cofense Intelligence",
                    "cofense-search": ""
                }
            }
        },
        {
            "Test - CrowdStrike Falcon": {
                "name": "Test - CrowdStrike Falcon",
                "file_path": "TestPlaybooks/playbook-CrowdStrikeFalcon-Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "cs-falcon-search-detection": "",
                    "cs-falcon-get-behavior": "",
                    "cs-falcon-search-device": ""
                }
            }
        },
        {
            "Test - Windows Defender Advanced Threat Protection": {
                "name": "Test - Windows Defender Advanced Threat Protection",
                "file_path": "TestPlaybooks/playbook-Windows_Defender_Advanced_Threat_Protection_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "microsoft-atp-list-alerts": "",
                    "microsoft-atp-isolate-machine": "",
                    "microsoft-atp-unisolate-machine": "",
                    "microsoft-atp-get-machines": "",
                    "microsoft-atp-create-alert": "",
                    "microsoft-atp-advanced-hunting": "",
                    "microsoft-atp-get-file-related-machines": ""
                }
            }
        },
        {
            "Test ADGetUser Fails with no instances 'Active Directory Query' (old version)": {
                "name": "Test ADGetUser Fails with no instances 'Active Directory Query' (old version)",
                "file_path": "TestPlaybooks/playbook-ADGetUser_fails_with_v2-Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "ADGetUser"
                ]
            }
        },
        {
            "test Arcsight - Get events related to the Case": {
                "name": "test Arcsight - Get events related to the Case",
                "file_path": "TestPlaybooks/playbook-Arcsight_-_Get_events_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Arcsight - Get events related to the Case"
                ]
            }
        },
        {
            "Test CommonServer": {
                "name": "Test CommonServer",
                "file_path": "Packs/Base/TestPlaybooks/playbook-Test_CommonServer.yml",
                "implementing_scripts": [
                    "TestFormatTableValues"
                ],
                "pack": "Base"
            }
        },
        {
            "Test Convert file hash to corresponding hashes": {
                "name": "Test Convert file hash to corresponding hashes",
                "file_path": "TestPlaybooks/playbook-ConvertFileHashToCorrespondingHashes-Test.yml",
                "fromversion": "4.5.0",
                "implementing_playbooks": [
                    "Convert file hash to corresponding hashes"
                ]
            }
        },
        {
            "Test filters & transformers scripts": {
                "name": "Test filters & transformers scripts",
                "file_path": "TestPlaybooks/playbook-Test_filters_and_transformers.yml",
                "implementing_scripts": [
                    "Print",
                    "Set",
                    "RaiseError"
                ]
            }
        },
        {
            "Test IP Indicator Fields": {
                "name": "Test IP Indicator Fields",
                "file_path": "TestPlaybooks/playbook-Test-IPIndicatorFields.yml",
                "implementing_scripts": [
                    "GetIndicator"
                ]
            }
        },
        {
            "Test Playbook McAfee ATD": {
                "name": "Test Playbook McAfee ATD",
                "file_path": "TestPlaybooks/playbook-McAfee-ATDTest.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "DeleteContext",
                    "FileCreateAndUpload",
                    "Exists"
                ],
                "implementing_playbooks": [
                    "Detonate URL - McAfee ATD",
                    "ATD - Detonate File"
                ],
                "command_to_integration": {
                    "atd-login": "",
                    "atd-list-user": "",
                    "atd-list-analyzer-profiles": ""
                }
            }
        },
        {
            "Test Playbook McAfee ATD Upload File": {
                "name": "Test Playbook McAfee ATD Upload File",
                "file_path": "TestPlaybooks/playbook-McAfee-ATDTest-UploadFile.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "atd-file-upload": ""
                }
            }
        },
        {
            "Test Playbook McAfee ePO": {
                "name": "Test Playbook McAfee ePO",
                "file_path": "TestPlaybooks/playbook-McAfee-ePOTest.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "epo-help": "epo",
                    "epo-get-current-dat": "epo",
                    "epo-get-latest-dat": "epo",
                    "epo-get-system-tree-group": "epo",
                    "epo-update-client-dat": "epo",
                    "epo-update-repository": "epo",
                    "epo-find-systems": "epo",
                    "epo-advanced-command": "epo",
                    "epo-apply-tag": "epo",
                    "epo-clear-tag": "epo",
                    "epo-get-tables": "epo",
                    "epo-query-table": "epo",
                    "epo-get-version": "epo",
                    "epo-find-system": "epo",
                    "epo-move-system": ""
                }
            }
        },
        {
            "Test Playbook TrendMicroDDA": {
                "name": "Test Playbook TrendMicroDDA",
                "file_path": "TestPlaybooks/playbook-TrendMicroDDA_Test.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "DeleteContext",
                    "FileCreateAndUpload"
                ],
                "implementing_playbooks": [
                    "Detonate File - Trend Micro Deep Discovery Analyzer Beta",
                    "Detonate URL - Trend Micro Deep Discovery Analyzer Beta"
                ],
                "command_to_integration": {
                    "trendmicro-dda-get-sample-list": "Trend Micro Deep Discovery Analyzer",
                    "trendmicro-dda-upload-file": "Trend Micro Deep Discovery Analyzer",
                    "trendmicro-dda-get-sample": "Trend Micro Deep Discovery Analyzer",
                    "trendmicro-dda-get-report": "Trend Micro Deep Discovery Analyzer"
                }
            }
        },
        {
            "Test Syslog": {
                "name": "Test Syslog",
                "file_path": "Packs/Syslog/TestPlaybooks/playbook-Syslog_Test.yml",
                "implementing_scripts": [
                    "Sleep",
                    "SearchIncidentsV2",
                    "GetServerURL"
                ],
                "command_to_integration": {
                    "syslog-send": "Syslog Sender"
                },
                "pack": "Syslog"
            }
        },
        {
            "Test XDR Playbook": {
                "name": "Test XDR Playbook",
                "file_path": "Packs/CortexXDR/TestPlaybooks/playbook-Cortex_XDR.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "xdr-get-incidents": "",
                    "xdr-get-incident-extra-data": "",
                    "xdr-update-incident": "",
                    "xdr-insert-parsed-alert": "",
                    "xdr-insert-cef-alerts": "",
                    "xdr-isolate-endpoint": "",
                    "xdr-unisolate-endpoint": "",
                    "xdr-get-endpoints": "",
                    "xdr-get-distribution-versions": "",
                    "xdr-create-distribution": "",
                    "xdr-get-distribution-url": "",
                    "xdr-get-create-distribution-status": "",
                    "xdr-get-audit-management-logs": "",
                    "xdr-get-audit-agent-reports": ""
                },
                "pack": "CortexXDR"
            }
        },
        {
            "Test-BPA": {
                "name": "Test-BPA",
                "file_path": "TestPlaybooks/playbook-BPA-test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "GenericPolling"
                ],
                "command_to_integration": {
                    "pan-os-bpa-submit-job": "BPA",
                    "pan-os-get-documentation": "BPA",
                    "pan-os-bpa-get-job-results": "BPA"
                }
            }
        },
        {
            "Test-BPA_Integration": {
                "name": "Test-BPA_Integration",
                "file_path": "TestPlaybooks/playbook-BPA-Integration-test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Run Panorama Best Practice Assessment"
                ]
            }
        },
        {
            "Test-Detonate URL - Crowdstrike": {
                "name": "Test-Detonate URL - Crowdstrike",
                "file_path": "TestPlaybooks/playbook-Detonate_URL_-_Crowdstrike_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Detonate URL - CrowdStrike"
                ]
            }
        },
        {
            "Test-Detonate URL - Phish.AI": {
                "name": "Test-Detonate URL - Phish.AI",
                "file_path": "TestPlaybooks/playbook-Detonate_URL_PhishAI-Test.yml",
                "implementing_playbooks": [
                    "Detonate URL - Phish.AI"
                ]
            }
        },
        {
            "Test-Detonate URL - ThreatGrid": {
                "name": "Test-Detonate URL - ThreatGrid",
                "file_path": "TestPlaybooks/playbook-Detonate_URL_-_ThreatGrid-Test.yml",
                "implementing_playbooks": [
                    "Detonate URL - ThreatGrid"
                ]
            }
        },
        {
            "test-domain-indicator": {
                "name": "test-domain-indicator",
                "file_path": "TestPlaybooks/playbook-TestDomain.yml",
                "implementing_scripts": [
                    "GetIndicatorDBotScore",
                    "Print",
                    "Sleep"
                ]
            }
        },
        {
            "test-Expanse": {
                "name": "test-Expanse",
                "file_path": "Packs/Expanse/TestPlaybooks/playbook-Expanse-Test.yml",
                "fromversion": "5.0.0",
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "ip": "",
                    "domain": ""
                },
                "pack": "Expanse"
            }
        },
        {
            "test-Expanse-Playbook": {
                "name": "test-Expanse-Playbook",
                "file_path": "Packs/Expanse/TestPlaybooks/playbook-test-Expanse-Incident-Playbook.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Expanse Incident Playbook"
                ],
                "pack": "Expanse"
            }
        },
        {
            "Test-IsMaliciousIndicatorFound": {
                "name": "Test-IsMaliciousIndicatorFound",
                "file_path": "TestPlaybooks/playbook-TestIsMaliciousIndicatorFound.yml",
                "implementing_scripts": [
                    "IsMaliciousIndicatorFound",
                    "DeleteContext",
                    "FileReputation"
                ]
            }
        },
        {
            "test-LinkIncidentsWithRetry": {
                "name": "test-LinkIncidentsWithRetry",
                "file_path": "TestPlaybooks/playbook-LinkIncidentsWithRetryTest.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "Print",
                    "LinkIncidentsWithRetry"
                ]
            }
        },
        {
            "Test-Looker": {
                "name": "Test-Looker",
                "file_path": "TestPlaybooks/playbook-Test-Looker.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "looker-search-looks": "Looker",
                    "looker-run-look": "Looker",
                    "looker-run-inline-query": ""
                }
            }
        },
        {
            "Test-Shodan_v2": {
                "name": "Test-Shodan_v2",
                "file_path": "TestPlaybooks/playbook-Test_shodan_v2.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "shodan-create-network-alert": "Shodan_v2",
                    "shodan-network-get-alerts": "Shodan_v2",
                    "shodan-network-delete-alert": "Shodan_v2",
                    "shodan-network-alert-set-trigger": "Shodan_v2",
                    "shodan-network-alert-whitelist-service": "Shodan_v2",
                    "shodan-network-alert-remove-service-from-whitelist": "Shodan_v2",
                    "shodan-network-alert-remove-trigger": "Shodan_v2",
                    "shodan-network-get-alert-by-id": "Shodan_v2",
                    "ip": "Shodan_v2",
                    "search": "Shodan_v2",
                    "shodan-search-count": "Shodan_v2"
                }
            }
        },
        {
            "test-ThreatConnect": {
                "name": "test-ThreatConnect",
                "file_path": "TestPlaybooks/playbook-ThreatConnect_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "tc-owners": "",
                    "tc-create-campaign": "",
                    "tc-create-threat": "",
                    "tc-delete-group": "",
                    "tc-get-tags": "",
                    "tc-add-indicator": "",
                    "tc-create-incident": "",
                    "tc-update-indicator": "",
                    "tc-tag-indicator": "",
                    "tc-incident-associate-indicator": "",
                    "tc-delete-indicator-tag": "",
                    "tc-delete-indicator": "",
                    "tc-get-indicator": "",
                    "tc-fetch-incidents": "",
                    "tc-get-incident-associate-indicators": "",
                    "tc-get-indicators-by-tag": "",
                    "tc-indicators": "",
                    "tc-get-groups": "",
                    "tc-get-indicator-types": "",
                    "tc-create-event": "",
                    "tc-add-group-attribute": "",
                    "tc-add-group-security-label": "",
                    "tc-add-group-tag": "",
                    "tc-group-associate-indicator": "",
                    "tc-get-group": "",
                    "tc-get-group-tags": "",
                    "tc-get-group-indicators": "",
                    "tc-associate-group-to-group": "",
                    "tc-get-associated-groups": "",
                    "tc-get-group-security-labels": "",
                    "tc-get-group-attributes": ""
                }
            }
        },
        {
            "Test-VulnDB": {
                "name": "Test-VulnDB",
                "file_path": "TestPlaybooks/playbook-VulnDB-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "vulndb-get-vuln-by-id": "VulnDB",
                    "vulndb-get-vuln-by-vendor-and-product-name": "VulnDB",
                    "vulndb-get-vuln-by-vendor-and-product-id": "VulnDB",
                    "vulndb-get-vuln-by-vendor-id": "VulnDB",
                    "vulndb-get-vuln-by-product-id": "VulnDB",
                    "vulndb-get-vuln-by-cve-id": "VulnDB",
                    "vulndb-get-vendor": "VulnDB",
                    "vulndb-get-product": "VulnDB",
                    "vulndb-get-version": "VulnDB",
                    "vulndb-get-updates-by-dates-or-hours": "VulnDB",
                    "cve": ""
                }
            }
        },
        {
            "test_delete_context": {
                "name": "Test Delete Context",
                "file_path": "TestPlaybooks/playbook-Test_Delete_Context.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "RaiseError",
                    "Set",
                    "isError"
                ]
            }
        },
        {
            "Test_EDL": {
                "name": "Test_EDL",
                "file_path": "TestPlaybooks/playbook-Test_EDL.yml",
                "command_to_integration": {
                    "edl-update": ""
                }
            }
        },
        {
            "Test_export_indicators_service": {
                "name": "Test_export_indicators_service",
                "file_path": "TestPlaybooks/playbook-Test_GenericOutboundIndicators.yml",
                "command_to_integration": {
                    "eis-update": ""
                }
            }
        },
        {
            "test_MsGraphFiles": {
                "name": "test_MsGraphFiles",
                "file_path": "TestPlaybooks/playbook-MS_Graph_Files_-_Test.yml",
                "fromversion": "5.0.0",
                "implementing_scripts": [
                    "SetContext",
                    "DeleteContext",
                    "Sleep",
                    "FileCreateAndUpload"
                ],
                "command_to_integration": {
                    "msgraph-upload-new-file": "",
                    "msgraph-replace-existing-file": "Microsoft_Graph_Files",
                    "msgraph-create-new-folder": "Microsoft_Graph_Files",
                    "msgraph-download-file": "Microsoft_Graph_Files",
                    "msgraph-list-sharepoint-sites": "Microsoft_Graph_Files",
                    "msgraph-list-drives-in-site": "Microsoft_Graph_Files",
                    "msgraph-list-drive-content": "Microsoft_Graph_Files",
                    "msgraph-delete-file": "Microsoft_Graph_Files"
                }
            }
        },
        {
            "test_Qradar": {
                "name": "test_Qradar",
                "file_path": "TestPlaybooks/playbook-TestQradar_5_4_9.yml",
                "toversion": "5.4.9",
                "implementing_scripts": [
                    "DeleteContext",
                    "FetchFromInstance"
                ],
                "implementing_playbooks": [
                    "QRadarFullSearch"
                ],
                "command_to_integration": {
                    "qradar-get-assets": "",
                    "qradar-create-note": "",
                    "qradar-get-note": "",
                    "qradar-offenses": "",
                    "qradar-offense-by-id": "",
                    "qradar-update-offense": "",
                    "qradar-get-asset-by-id": "QRadar",
                    "qradar-delete-reference-set": "",
                    "qradar-create-reference-set": "",
                    "qradar-create-reference-set-value": "",
                    "qradar-get-reference-by-name": "",
                    "qradar-delete-reference-set-value": ""
                }
            }
        },
        {
            "test_Qradar": {
                "name": "test_Qradar",
                "file_path": "TestPlaybooks/playbook-TestQradar.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "FetchFromInstance"
                ],
                "implementing_playbooks": [
                    "QRadarFullSearch"
                ],
                "command_to_integration": {
                    "qradar-get-assets": "",
                    "qradar-create-note": "",
                    "qradar-get-note": "",
                    "qradar-offenses": "",
                    "qradar-offense-by-id": "",
                    "qradar-update-offense": "",
                    "qradar-get-asset-by-id": "QRadar",
                    "qradar-delete-reference-set": "",
                    "qradar-create-reference-set": "",
                    "qradar-create-reference-set-value": "",
                    "qradar-get-reference-by-name": "",
                    "qradar-delete-reference-set-value": "",
                    "qradar-upload-indicators": ""
                }
            }
        },
        {
            "Test_Sagemaker": {
                "name": "Test Sagemaker",
                "file_path": "TestPlaybooks/playbook-Sagemaker_Test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "predict-phishing": ""
                }
            }
        },
        {
            "test_similar_incidents": {
                "name": "Test Similar Incidents",
                "file_path": "TestPlaybooks/playbook-Test_Similar_Incidents.yml",
                "fromversion": "3.5.0",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext",
                    "FindSimilarIncidents",
                    "TestCreateDuplicates"
                ]
            }
        },
        {
            "test_url_regex": {
                "name": "Test URL Regex",
                "file_path": "TestPlaybooks/playbook-Test_URL_Regex.yml",
                "implementing_scripts": [
                    "Print",
                    "VerifyContext",
                    "DeleteContext"
                ]
            }
        },
        {
            "Test_XFE_v2": {
                "name": "Test_XFE_v2",
                "file_path": "Packs/XForceExchange/TestPlaybooks/playbook-Test_XFE_v2.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "ip": "XFE_v2",
                    "url": "XFE_v2",
                    "file": "XFE_v2",
                    "domain": "XFE_v2",
                    "cve-search": "XFE_v2",
                    "cve-latest": "XFE_v2",
                    "xfe-whois": "XFE_v2",
                    "xfe-search-cves": "XFE_v2"
                },
                "pack": "XForceExchange"
            }
        },
        {
            "TestAwsEC2GetPublicSGRules-Test": {
                "name": "AwsEC2GetPublicSGRules-Test",
                "file_path": "TestPlaybooks/playbook-AwsEC2GetPublicSGRules-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "AwsEC2GetPublicSGRules",
                    "Set"
                ]
            }
        },
        {
            "TestCofenseFeed": {
                "name": "TestCofenseFeed",
                "file_path": "Packs/FeedCofense/TestPlaybooks/playbook-TestCofenseFeed.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "cofense-get-indicators": "Cofense Feed"
                },
                "pack": "FeedCofense"
            }
        },
        {
            "TestCommonPython": {
                "name": "TestCommonPython",
                "file_path": "TestPlaybooks/playbook-TestCommonPython_4_1.yml",
                "toversion": "4.1.0",
                "command_to_integration": {
                    "TestPYCommonServer": "TestPYCommonServer",
                    "CallTableToMarkdown": "CallTableToMarkdown"
                }
            }
        },
        {
            "TestCommonPython": {
                "name": "TestCommonPython",
                "file_path": "Packs/Base/TestPlaybooks/playbook-TestCommonPython.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "CallTableToMarkdown",
                    "TestPYCommonServer"
                ],
                "pack": "Base"
            }
        },
        {
            "TestDedupIncidentsByName": {
                "name": "TestDedupIncidentsByName",
                "file_path": "TestPlaybooks/playbook-TestDedupIncidentsByName.yml",
                "implementing_playbooks": [
                    "DeDup incidents"
                ]
            }
        },
        {
            "TestDedupIncidentsPlaybook": {
                "name": "TestDedupIncidentsPlaybook",
                "file_path": "TestPlaybooks/playbook-TestDedupIncidentsPlaybook.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "FindSimilarIncidents",
                    "Sleep",
                    "CreateDuplicateIncident"
                ]
            }
        },
        {
            "TestExtractHTMLTables": {
                "name": "TestExtractHTMLTables",
                "file_path": "TestPlaybooks/playbook-TestExtractHTMLTables.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Print",
                    "CloseInvestigation",
                    "ExtractHTMLTables",
                    "Exists"
                ]
            }
        },
        {
            "TestFileCreateAndUpload": {
                "name": "TestFileCreateAndUpload",
                "file_path": "TestPlaybooks/playbook-FileCreateAndUpload_Test.yml",
                "implementing_scripts": [
                    "Print",
                    "CloseInvestigation",
                    "DeleteContext",
                    "FileCreateAndUpload"
                ]
            }
        },
        {
            "TestHelloWorld": {
                "name": "TestHelloWorld",
                "file_path": "TestPlaybooks/playbook-TestHelloWorld.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "HelloWorldScript"
                ],
                "command_to_integration": {
                    "helloworld-say-hello": "HelloWorld"
                }
            }
        },
        {
            "TestHelloWorld": {
                "name": "TestHelloWorld",
                "file_path": "Packs/HelloWorld/TestPlaybooks/playbook-TestHelloWorld.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "HelloWorldScript"
                ],
                "command_to_integration": {
                    "helloworld-say-hello": "HelloWorld"
                },
                "pack": "HelloWorld"
            }
        },
        {
            "TestHPServiceManager": {
                "name": "TestHPServiceManager",
                "file_path": "TestPlaybooks/playbook-TestHPServiceManager.yml",
                "implementing_scripts": [
                    "VerifyContextFields",
                    "DeleteContext",
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "hpsm-create-incident": "Service Manager",
                    "hpsm-list-incidents": "Service Manager",
                    "hpsm-get-incident-by-id": "Service Manager",
                    "hpsm-get-device": "Service Manager"
                }
            }
        },
        {
            "TestHttpPlaybook": {
                "name": "TestHttpPlaybook",
                "file_path": "TestPlaybooks/playbook-TestHttpPlaybook.yml",
                "implementing_scripts": [
                    "VerifyContextFields",
                    "DeleteContext",
                    "http"
                ]
            }
        },
        {
            "TestImageOCR": {
                "name": "TestImageOCR",
                "file_path": "TestPlaybooks/playbook-TestImageOCR.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "http",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "image-ocr-extract-text": ""
                }
            }
        },
        {
            "TestIsEmailAddressInternal": {
                "name": "TestIsEmailAddressInternal",
                "file_path": "TestPlaybooks/playbook-TestIsEmailAddressInternal.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set",
                    "AreValuesEqual",
                    "IsEmailAddressInternal"
                ]
            }
        },
        {
            "TestIsValueInArray": {
                "name": "TestIsValueInArray",
                "file_path": "TestPlaybooks/playbook-TestIsValueInArray.yml",
                "implementing_scripts": [
                    "CloseInvestigation",
                    "Set",
                    "IsValueInArray"
                ]
            }
        },
        {
            "TestMatchRegex": {
                "name": "TestMatchRegex",
                "file_path": "TestPlaybooks/playbook-TestMatchRegex.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "MatchRegex"
                ]
            }
        },
        {
            "TestPacketsled": {
                "name": "TestPacketsled",
                "file_path": "TestPlaybooks/playbook-Packetsled_Test.yml",
                "command_to_integration": {
                    "packetsled-get-incidents": "Packetsled",
                    "packetsled-get-flows": "Packetsled",
                    "packetsled-get-files": "Packetsled",
                    "packetsled-get-pcaps": "Packetsled"
                }
            }
        },
        {
            "TestParseEmailFile-deprecated-script": {
                "name": "TestParseEmailFile-deprecated-script",
                "file_path": "TestPlaybooks/playbook-TestParseEmailFile-deprecated-script.yml",
                "implementing_scripts": [
                    "ParseEmailFiles",
                    "VerifyContext",
                    "DeleteContext",
                    "ParseEmailFile",
                    "AreValuesEqual",
                    "http"
                ]
            }
        },
        {
            "TestProofpointFeed": {
                "name": "TestProofpointFeed",
                "file_path": "TestPlaybooks/playbook-TestProofpointFeed.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "proofpoint-get-indicators": "ProofpointFeed"
                }
            }
        },
        {
            "TestSafeBreach": {
                "name": "TestSafeBreach",
                "file_path": "TestPlaybooks/playbook-Test_SafeBreach.yml",
                "command_to_integration": {
                    "safebreach-rerun": "SafeBreach",
                    "safebreach-get-simulation": "SafeBreach"
                }
            }
        },
        {
            "TestShowScheduledEntries": {
                "name": "TestShowScheduledEntries",
                "file_path": "TestPlaybooks/playbook-TestShowScheduledEntries.yml",
                "implementing_scripts": [
                    "ShowScheduledEntries",
                    "DeleteContext",
                    "Sleep",
                    "ScheduleCommand"
                ]
            }
        },
        {
            "TestSkyformation": {
                "name": "TestSkyformation",
                "file_path": "TestPlaybooks/playbook-Test_Skyformation.yml",
                "implementing_scripts": [
                    "TestFail"
                ],
                "command_to_integration": {
                    "skyformation-get-accounts": "Skyformation"
                }
            }
        },
        {
            "TestStringReplace": {
                "name": "TestStringReplace",
                "file_path": "TestPlaybooks/playbook-TestStringReplace.yml",
                "implementing_scripts": [
                    "VerifyContextFields",
                    "DeleteContext",
                    "StringReplace"
                ]
            }
        },
        {
            "TestUptycs": {
                "name": "TestUptycs",
                "file_path": "TestPlaybooks/playbook-TestUptycs.yml",
                "implementing_playbooks": [
                    "Uptycs - Outbound Connection to Threat IOC Incident"
                ],
                "command_to_integration": {
                    "uptycs-get-events": "",
                    "uptycs-get-assets": "",
                    "uptycs-get-asset-tags": "",
                    "uptycs-get-alerts": "",
                    "uptycs-get-saved-queries": "",
                    "uptycs-run-saved-query": "",
                    "uptycs-post-saved-query": "",
                    "uptycs-get-asset-groups": "",
                    "uptycs-get-process-open-files": "",
                    "uptycs-get-threat-indicators": "",
                    "uptycs-get-threat-sources": "",
                    "uptycs-get-threat-vendors": "",
                    "uptycs-get-user-asset-groups": "",
                    "uptycs-get-users": "",
                    "uptycs-get-user-information": ""
                }
            }
        },
        {
            "TestWordFileToIOC": {
                "name": "TestWordFileToIOC",
                "file_path": "TestPlaybooks/playbook-TestWordFileToIOC.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "ExtractIP",
                    "ParseWordDoc",
                    "TestCreateWordFile",
                    "ReadFile"
                ]
            }
        },
        {
            "TextFromHTML_test_playbook": {
                "name": "TextFromHTML Test",
                "file_path": "TestPlaybooks/playbook-TextFromHTML_Test.yml",
                "implementing_scripts": [
                    "VerifyContext",
                    "TextFromHTML"
                ]
            }
        },
        {
            "ThreatCrowd - Test": {
                "name": "ThreatCrowd - Test",
                "file_path": "TestPlaybooks/playbook-ThreatCrowd-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "threat-crowd-email": "",
                    "threat-crowd-ip": "",
                    "threat-crowd-domain": "",
                    "threat-crowd-antivirus": "",
                    "threat-crowd-file": ""
                }
            }
        },
        {
            "ThreatExchange-test": {
                "name": "ThreatExchange-test",
                "file_path": "TestPlaybooks/playbook-ThreatExchange_Test.yml",
                "implementing_scripts": [
                    "IsMaliciousIndicatorFound",
                    "Print",
                    "ExtractIP",
                    "ExtractHash",
                    "ExtractURL",
                    "VerifyContextFields",
                    "Exists",
                    "ExtractDomain"
                ],
                "command_to_integration": {
                    "ip": "ThreatExchange",
                    "file": "ThreatExchange",
                    "url": "ThreatExchange",
                    "domain": "ThreatExchange"
                }
            }
        },
        {
            "ThreatGridTest": {
                "name": "ThreatGridTest",
                "file_path": "TestPlaybooks/playbook-Threat_Grid_Test.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "DeleteContext",
                    "Exists"
                ],
                "command_to_integration": {
                    "threat-grid-who-am-i": "Threat Grid",
                    "threat-grid-get-samples": "Threat Grid",
                    "threat-grid-user-get-rate-limit": "Threat Grid",
                    "threat-grid-download-sample-by-id": "Threat Grid",
                    "threat-grid-upload-sample": "Threat Grid",
                    "threat-grid-organization-get-rate-limit": "Threat Grid",
                    "threat-grid-get-threat-summary-by-id": "Threat Grid"
                }
            }
        },
        {
            "ThreatMiner-Test": {
                "name": "ThreatMiner - Test",
                "file_path": "TestPlaybooks/playbook-TestThreatMiner.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "ip": "ThreatMiner",
                    "domain": "ThreatMiner",
                    "file": "ThreatMiner"
                }
            }
        },
        {
            "ThreatQ - Test": {
                "name": "ThreatQ - Test",
                "file_path": "TestPlaybooks/playbook-ThreatQ-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "http"
                ],
                "command_to_integration": {
                    "threatq-create-adversary": "ThreatQ v2",
                    "threatq-create-event": "ThreatQ v2",
                    "threatq-add-attribute": "ThreatQ v2",
                    "threatq-delete-attribute": "ThreatQ v2",
                    "threatq-add-source": "ThreatQ v2",
                    "threatq-delete-source": "ThreatQ v2",
                    "threatq-update-status": "ThreatQ v2",
                    "threatq-link-objects": "ThreatQ v2",
                    "domain": "ThreatQ v2",
                    "ip": "ThreatQ v2",
                    "email": "ThreatQ v2",
                    "file": "ThreatQ v2",
                    "url": "ThreatQ v2",
                    "threatq-create-indicator": "ThreatQ v2",
                    "threatq-get-related-events": "ThreatQ v2",
                    "threatq-modify-attribute": "ThreatQ v2",
                    "threatq-search-by-id": "ThreatQ v2",
                    "threatq-delete-object": "ThreatQ v2",
                    "threatq-search-by-name": "ThreatQ v2",
                    "threatq-get-related-indicators": "ThreatQ v2",
                    "threatq-unlink-objects": "ThreatQ v2",
                    "threatq-edit-adversary": "ThreatQ v2",
                    "threatq-edit-event": "ThreatQ v2",
                    "threatq-update-score": "ThreatQ v2",
                    "threatq-edit-indicator": "ThreatQ v2",
                    "threatq-upload-file": "ThreatQ v2",
                    "threatq-download-file": "ThreatQ v2",
                    "threatq-get-all-indicators": "ThreatQ v2",
                    "threatq-get-all-adversaries": "ThreatQ v2",
                    "threatq-get-all-events": "ThreatQ v2"
                }
            }
        },
        {
            "ThreatStream-Test": {
                "name": "ThreatStream-Test",
                "file_path": "TestPlaybooks/playbook-ThreatStream-Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "domain": "Anomali ThreatStream v2",
                    "ip": "Anomali ThreatStream v2",
                    "url": "Anomali ThreatStream v2",
                    "threatstream-email-reputation": "Anomali ThreatStream v2",
                    "file": "Anomali ThreatStream v2",
                    "threatstream-get-indicators": "Anomali ThreatStream v2",
                    "threatstream-get-model-list": "Anomali ThreatStream v2",
                    "threatstream-get-indicators-by-model": "Anomali ThreatStream v2",
                    "threatstream-get-passive-dns": "Anomali ThreatStream v2"
                }
            }
        },
        {
            "ThreatX-test": {
                "name": "ThreatX-test",
                "file_path": "TestPlaybooks/playbook-ThreatX-test.yml",
                "implementing_scripts": [
                    "Exists",
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "threatx-block-ip": "ThreatX",
                    "threatx-unblock-ip": "ThreatX",
                    "threatx-blacklist-ip": "ThreatX",
                    "threatx-whitelist-ip": "ThreatX",
                    "threatx-unblacklist-ip": "ThreatX",
                    "threatx-add-entity-note": "ThreatX",
                    "threatx-get-entity-notes": "ThreatX",
                    "threatx-unwhitelist-ip": "ThreatX",
                    "threatx-get-entities": "ThreatX"
                }
            }
        },
        {
            "Traps test": {
                "name": "Traps test",
                "file_path": "TestPlaybooks/playbook-Traps_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Traps Retrieve And Download Files",
                    "Traps Scan Endpoint"
                ],
                "command_to_integration": {
                    "traps-event-update": "Traps",
                    "traps-event-bulk-update-status": "Traps",
                    "traps-hashes-blacklist-status": "Traps",
                    "traps-hash-blacklist": "Traps",
                    "traps-hash-blacklist-remove": "Traps",
                    "traps-get-endpoint-by-id": ""
                }
            }
        },
        {
            "Trend Micro Apex - Test": {
                "name": "Trend Micro Apex - Test",
                "file_path": "TestPlaybooks/playbook-TrendMicroApexTest.yml",
                "implementing_scripts": [
                    "GenerateIP",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "DeleteContext": "DeleteContext",
                    "trendmicro-apex-usdo-list": "",
                    "trendmicro-apex-usdo-add": "",
                    "trendmicro-apex-usdo-delete": "",
                    "trendmicro-apex-isolate": "",
                    "trendmicro-apex-restore": ""
                }
            }
        },
        {
            "TruSTAR Test": {
                "name": "TruSTAR Test",
                "file_path": "TestPlaybooks/playbook-TruSTAR_Test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "trustar-trending-indicators": "TruSTAR",
                    "trustar-search-indicators": "TruSTAR",
                    "trustar-correlated-reports": "TruSTAR",
                    "url": "TruSTAR",
                    "domain": "TruSTAR",
                    "file": "TruSTAR",
                    "ip": "TruSTAR"
                }
            }
        },
        {
            "Tufin Test": {
                "name": "Tufin Playbook Test",
                "file_path": "TestPlaybooks/playbook-Tufin_Test.yml",
                "implementing_scripts": [
                    "Print"
                ],
                "command_to_integration": {
                    "tufin-policy-search": "Tufin"
                }
            }
        },
        {
            "UnEscapeIPs-Test": {
                "name": "UnEscapeIPs-Test",
                "file_path": "TestPlaybooks/playbook-UnEscapeIPs-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "UnEscapeIPs",
                    "VerifyHumanReadableContains"
                ]
            }
        },
        {
            "UnEscapeURL-Test": {
                "name": "UnEscapeURL-Test",
                "file_path": "TestPlaybooks/playbook-UnEscapeURLs-Test.yml",
                "implementing_scripts": [
                    "UnEscapeURLs",
                    "AreValuesEqual",
                    "DeleteContext",
                    "VerifyHumanReadableContains"
                ]
            }
        },
        {
            "UnzipFile-Test": {
                "name": "UnzipFile-Test",
                "file_path": "TestPlaybooks/playbook-UnzipFile-Test.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "http",
                    "UnzipFile",
                    "DeleteContext"
                ]
            }
        },
        {
            "URL Enrichment - Generic v2 - Test": {
                "name": "URL Enrichment - Generic v2 - Test",
                "file_path": "TestPlaybooks/playbook-URL_Enrichment_-_Generic_v2_-_Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "URL Enrichment - Generic v2"
                ]
            }
        },
        {
            "URLDecode-Test": {
                "name": "URLDecode-Test",
                "file_path": "TestPlaybooks/playbook-URLDecode-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "URLDecode"
                ]
            }
        },
        {
            "urlscan_malicious_Test": {
                "name": "urlscan_malicious_Test",
                "file_path": "TestPlaybooks/playbook-Urlscan_malicious_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "UrlscanGetHttpTransactions"
                ],
                "command_to_integration": {
                    "urlscan-search": "",
                    "url": "urlscan.io"
                }
            }
        },
        {
            "Vectra-test": {
                "name": "Vectra-test",
                "file_path": "TestPlaybooks/playbook-Vectra-Test.yml",
                "implementing_scripts": [
                    "VerifyContext"
                ],
                "command_to_integration": {
                    "vectra-detections": "Vectra",
                    "vectra-hosts": "Vectra",
                    "vectra-settings": "Vectra",
                    "vectra-triage": "Vectra",
                    "vectra-sensors": "Vectra"
                }
            }
        },
        {
            "VerifyHumanReadableFormat": {
                "name": "VerifyHumanReadableFormat",
                "file_path": "TestPlaybooks/playbook-VerifyHumanReadableFormat.yml",
                "implementing_scripts": [
                    "VerifyTreeToFlatObject",
                    "VerifyTableToMarkDown"
                ]
            }
        },
        {
            "VerifyJSON - Test": {
                "name": "VerifyJSON - Test",
                "file_path": "TestPlaybooks/playbook-VerifyJSON_-_Test.yml",
                "fromversion": "5.5.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "Print",
                    "DeleteContext",
                    "isError",
                    "VerifyJSON"
                ]
            }
        },
        {
            "Vertica Test": {
                "name": "Vertica Test",
                "file_path": "TestPlaybooks/playbook-VerticaTest.yml",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "vertica-query": ""
                }
            }
        },
        {
            "virusTotaI-test-preferred-vendors": {
                "name": "virusTotaI-test-preferred-vendors",
                "file_path": "TestPlaybooks/playbook-VirusTotal_preferred_vendors_test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "file": "VirusTotal"
                }
            }
        },
        {
            "virusTotal-test-playbook": {
                "name": "virusTotal-test-playbook",
                "file_path": "TestPlaybooks/playbook-virusTotal-test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext",
                    "Set",
                    "Exists",
                    "Sleep"
                ],
                "command_to_integration": {
                    "ip": "VirusTotal",
                    "domain": "VirusTotal",
                    "file": "VirusTotal",
                    "url": "VirusTotal"
                }
            }
        },
        {
            "virusTotal-test-playbook": {
                "name": "virusTotal-test-playbook",
                "file_path": "TestPlaybooks/playbook-virusTotalPrivateAPI-test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "VerifyContext",
                    "Set",
                    "Exists",
                    "Sleep"
                ],
                "command_to_integration": {
                    "ip": "VirusTotal",
                    "domain": "VirusTotal",
                    "file": "VirusTotal",
                    "url": "VirusTotal"
                }
            }
        },
        {
            "virusTotalPrivateAPI-test-preferred-vendors": {
                "name": "virusTotalPrivateAPI-test-preferred-vendors",
                "file_path": "TestPlaybooks/playbook-VirusTotalPrivateAPI_preferred_vendors_test.yml",
                "implementing_scripts": [
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "vt-private-get-file-report": ""
                }
            }
        },
        {
            "VMRay-Test": {
                "name": "VMRay-Test",
                "file_path": "TestPlaybooks/playbook-VMRay-test.yml",
                "implementing_scripts": [
                    "http",
                    "DeleteContext"
                ],
                "implementing_playbooks": [
                    "Detonate File - VMRay"
                ],
                "command_to_integration": {
                    "vmray-get-analysis-by-sample": "",
                    "vmray-get-threat-indicators": "",
                    "vmray-get-iocs": "",
                    "vmray-add-tag": "",
                    "vmray-delete-tag": ""
                }
            }
        },
        {
            "VMWare Test": {
                "name": "VMWare Test",
                "file_path": "TestPlaybooks/playbook-VMWare_Test.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "VerifyContext",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "vmware-get-vms": "VMware",
                    "vmware-poweron": "VMware",
                    "vmware-poweroff": "VMware",
                    "vmware-suspend": "VMware",
                    "vmware-hard-reboot": "VMware",
                    "vmware-create-snapshot": "VMware",
                    "vmware-revert-snapshot": "VMware",
                    "vmware-get-events": "VMware"
                }
            }
        },
        {
            "vt-detonate test": {
                "name": "vt-detonate test",
                "file_path": "TestPlaybooks/playbook-VirusTotal_detonate_file.yml",
                "implementing_scripts": [
                    "FileCreateAndUpload"
                ],
                "implementing_playbooks": [
                    "VirusTotal - Detonate File"
                ]
            }
        },
        {
            "VxStream Test": {
                "name": "VxStream Test",
                "file_path": "TestPlaybooks/playbook-VxStream_Test.yml",
                "implementing_scripts": [
                    "Exists",
                    "DeleteContext",
                    "http"
                ],
                "command_to_integration": {
                    "crowdstrike-get-environments": "VxStream",
                    "crowdstrike-search": "VxStream",
                    "crowdstrike-scan": "VxStream",
                    "crowdstrike-submit-url": "VxStream",
                    "crowdstrike-submit-sample": ""
                }
            }
        },
        {
            "Wait Until Datetime - Test": {
                "name": "Wait Until Datetime - Test",
                "file_path": "TestPlaybooks/playbook-Wait_Until_Datetime_-_Test.yml",
                "fromversion": "4.5.0",
                "implementing_scripts": [
                    "PrintErrorEntry",
                    "GetTime",
                    "DeleteContext",
                    "Set"
                ],
                "implementing_playbooks": [
                    "Wait Until Datetime"
                ]
            }
        },
        {
            "WhatsMyBrowser-Test": {
                "name": "WhatsMyBrowser-Test",
                "file_path": "TestPlaybooks/playbook-WhatIsMyBrowser-test.yml",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext",
                    "Set"
                ],
                "command_to_integration": {
                    "ua-parse": "WhatsMyBrowser"
                }
            }
        },
        {
            "whois_test": {
                "name": "whois_test",
                "file_path": "TestPlaybooks/playbook-Whois-Test.yml",
                "fromversion": "4.1.0",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext",
                    "Sleep"
                ],
                "command_to_integration": {
                    "whois": "Whois",
                    "domain": "Whois"
                }
            }
        },
        {
            "Wildfire Test": {
                "name": "Wildfire Test",
                "file_path": "TestPlaybooks/playbook-Wildfire_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "commentsToContext",
                    "file_command_enrichment_test_script_helper",
                    "http",
                    "FileCreateAndUpload"
                ],
                "command_to_integration": {
                    "wildfire-upload-file-url": "",
                    "wildfire-report": "",
                    "wildfire-upload": "",
                    "wildfire-get-verdicts": "",
                    "wildfire-get-verdict": "",
                    "file": "WildFire-v2",
                    "wildfire-get-sample": ""
                }
            }
        },
        {
            "WordTokenizeTest": {
                "name": "WordTokenizeTest",
                "file_path": "TestPlaybooks/playbook-WordTokenizeTest.yml",
                "implementing_scripts": [
                    "WordTokenizer",
                    "DeleteContext"
                ]
            }
        },
        {
            "XFE Test": {
                "name": "XFE Test",
                "file_path": "TestPlaybooks/playbook-XFE_Playbook_Test.yml",
                "implementing_scripts": [
                    "AreValuesEqual",
                    "DeleteContext",
                    "VerifyContext",
                    "Exists"
                ],
                "command_to_integration": {
                    "url": "XFE",
                    "ip": "XFE",
                    "domain": "XFE",
                    "cve-latest": "XFE",
                    "cve-search": "XFE",
                    "file": "XFE"
                }
            }
        },
        {
            "ZeroFox-Test": {
                "name": "ZeroFox-Test",
                "file_path": "TestPlaybooks/playbook-ZeroFox_Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "GenerateRandomString",
                    "FetchFromInstance"
                ],
                "command_to_integration": {
                    "zerofox-list-alerts": "ZeroFox",
                    "zerofox-alert-user-assignment": "ZeroFox",
                    "zerofox-get-alert": "ZeroFox",
                    "zerofox-modify-alert-tags": "ZeroFox",
                    "zerofox-alert-request-takedown": "ZeroFox",
                    "zerofox-alert-cancel-takedown": "ZeroFox",
                    "zerofox-close-alert": "ZeroFox",
                    "zerofox-open-alert": "ZeroFox",
                    "zerofox-get-policy-types": "ZeroFox",
                    "zerofox-create-entity": "ZeroFox",
                    "zerofox-list-entities": "ZeroFox"
                }
            }
        },
        {
            "ZipFile-Test": {
                "name": "ZipFile-Test",
                "file_path": "TestPlaybooks/playbook-ZipFile-Test.yml",
                "implementing_scripts": [
                    "DeleteContext",
                    "ZipFile",
                    "http",
                    "UnzipFile",
                    "ValidateErrorExistence"
                ]
            }
        },
        {
            "Zoom_Test": {
                "name": "Zoom_Test",
                "file_path": "TestPlaybooks/playbook-TestZoom.yml",
                "implementing_scripts": [
                    "Print",
                    "DeleteContext",
                    "VerifyContext",
                    "GenerateEmail"
                ],
                "command_to_integration": {
                    "zoom-create-user": "Zoom",
                    "zoom-delete-user": "Zoom",
                    "zoom-list-users": "Zoom",
                    "zoom-create-meeting": "Zoom",
                    "zoom-fetch-recording": "Zoom"
                }
            }
        },
        {
            "Zscaler Test": {
                "name": "Zscaler Test",
                "file_path": "TestPlaybooks/playbook-Zscaler_Test.yml",
                "implementing_scripts": [
                    "GenerateUUID",
                    "isError",
                    "DeleteContext"
                ],
                "command_to_integration": {
                    "zscaler-get-categories": "",
                    "zscaler-category-add-url": "",
                    "zscaler-blacklist-url": "",
                    "zscaler-get-blacklist": "",
                    "ip": "Zscaler",
                    "zscaler-sandbox-report": ""
                }
            }
        }
    ],
    "Classifiers": [
        {
            "1bb6fa72-f964-4011-8a48-f70338082b68": {
                "name": "Gmail"
            }
        },
        {
            "1c53b98e-c405-4025-8703-a5455f2ff140": {
                "name": "Gmail Single User"
            }
        },
        {
            "22b362ce-7a96-4a70-87d0-2ef4eeed5b8b": {
                "name": "Microsoft Graph Mail Single User"
            }
        },
        {
            "230ea712-b969-4d73-8e1e-a1360ab8942c": {
                "name": "RedLock",
                "fromversion": "5.0.0"
            }
        },
        {
            "26f69346-6a69-4375-8890-e2ea7b0aae34": {
                "name": "Indeni",
                "pack": "Indeni"
            }
        },
        {
            "32f26072-9a69-41a5-8db8-0d1226431078": {
                "name": "Cortex XDR - IR",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "5c83f473-c618-4c41-85d8-251eb1f90566": {
                "name": "Palo Alto Networks Cortex",
                "fromversion": "5.0.0"
            }
        },
        {
            "5d9a5ec5-33cb-4f82-8c5e-e8ae6f7831d8": {
                "name": "crowdstrike-streaming-api"
            }
        },
        {
            "6f0fa57c-f3ea-4267-883b-e43d55086223": {
                "name": "OnboardingIntegration"
            }
        },
        {
            "8e398f32-2af9-49a0-8702-e2eeeb0101e5": {
                "name": "mail-listener"
            }
        },
        {
            "906b4384-1d98-46e4-8af0-ecb52d5fdddc": {
                "name": "Cymulate",
                "pack": "Cymulate"
            }
        },
        {
            "af6645d1-8209-4c7f-8458-f8edfc77b9e9": {
                "name": "QRadar"
            }
        },
        {
            "AWS Feed": {
                "name": "AWS Feed",
                "fromversion": "5.5.0",
                "pack": "FeedAWS"
            }
        },
        {
            "b7132142-60d2-4a7b-8b15-16a381543d79": {
                "name": "SplunkPy"
            }
        },
        {
            "babb69e2-059c-4ac2-896a-76e9e42844e5": {
                "name": "Claroty",
                "pack": "Claroty"
            }
        },
        {
            "c9332555-348b-4d91-85b4-e345cdba12c8": {
                "name": "EWS v2"
            }
        },
        {
            "caffbfd5-29d8-488b-8f6a-488c0755524e": {
                "name": "PaloAltoNetworks_PrismaCloudCompute",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "eb70e27d-b3d6-4066-86dd-f70526d4ad85": {
                "name": "Sixgill",
                "fromversion": "5.0.0",
                "pack": "Sixgill"
            }
        },
        {
            "prismaCloud_app": {
                "name": "prismaCloud_app",
                "fromversion": "5.0.0"
            }
        }
    ],
    "Dashboards": [
        {
            "097e5436-d8f0-49b7-a19d-a05c60ed1039": {
                "name": "Incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "health-status-dashboard": {
                "name": "System Health",
                "fromversion": "3.5.1"
            }
        },
        {
            "my-home-dashboard": {
                "name": "My Dashboard",
                "fromversion": "4.0.0"
            }
        },
        {
            "my-home-dashboard": {
                "name": "My Dashboard",
                "toversion": "4.0.0",
                "fromversion": "3.5.1"
            }
        },
        {
            "sla-dashboard": {
                "name": "SLA",
                "fromversion": "4.1.0"
            }
        },
        {
            "Threat Intelligence Management": {
                "name": "Threat Intel Management",
                "fromversion": "5.5.0",
                "pack": "ThreatIntelligenceManagement"
            }
        }
    ],
    "IncidentFields": [
        {
            "incident_accountgroups": {
                "name": "Account Groups",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_accountid": {
                "name": "Account ID",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_accountname": {
                "name": "Account Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_activedirectoryaccountstatus": {
                "name": "Active Directory Account Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_activedirectorydisplayname": {
                "name": "Active Directory Display Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_activedirectorypasswordstatus": {
                "name": "Active Directory Password Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_affecteddata": {
                "name": "Affected data"
            }
        },
        {
            "incident_affecteddatatype": {
                "name": "Affected Data Type"
            }
        },
        {
            "incident_affectedindividualscontactinformation": {
                "name": "Affected Individuals Contact Information"
            }
        },
        {
            "incident_agentid": {
                "name": "Agent ID",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_app": {
                "name": "App"
            }
        },
        {
            "incident_approximatenumberofaffecteddatasubjects": {
                "name": "Approximate number of affected data subjects"
            }
        },
        {
            "incident_assetid": {
                "name": "Asset ID"
            }
        },
        {
            "incident_attachmentcount": {
                "name": "Attachment Count"
            }
        },
        {
            "incident_attachmentextension": {
                "name": "Attachment Extension"
            }
        },
        {
            "incident_attachmenthash": {
                "name": "Attachment Hash"
            }
        },
        {
            "incident_attachmentid": {
                "name": "Attachment ID"
            }
        },
        {
            "incident_attachmentname": {
                "name": "Attachment Name"
            }
        },
        {
            "incident_attachmentsize": {
                "name": "Attachment size"
            }
        },
        {
            "incident_attachmenttype": {
                "name": "Attachment type"
            }
        },
        {
            "incident_blockedaction": {
                "name": "Blocked Action",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_bugtraq": {
                "name": "Bugtraq"
            }
        },
        {
            "incident_city": {
                "name": "City"
            }
        },
        {
            "incident_clarotyalertresolved": {
                "name": "Claroty Alert Resolved",
                "pack": "Claroty"
            }
        },
        {
            "incident_clarotyalerttype": {
                "name": "Claroty Alert Type",
                "pack": "Claroty"
            }
        },
        {
            "incident_clarotycategory": {
                "name": "Claroty Category",
                "pack": "Claroty"
            }
        },
        {
            "incident_clarotynetworkid": {
                "name": "Claroty Network ID",
                "pack": "Claroty"
            }
        },
        {
            "incident_clarotyrelatedassets": {
                "name": "Claroty Related Assets",
                "pack": "Claroty"
            }
        },
        {
            "incident_clarotyresourceid": {
                "name": "Claroty Resource ID",
                "pack": "Claroty"
            }
        },
        {
            "incident_clarotysiteid": {
                "name": "Claroty Site ID",
                "pack": "Claroty"
            }
        },
        {
            "incident_code42alerttype": {
                "name": "Code42 Alert Type",
                "fromversion": "5.0.0",
                "pack": "Code42"
            }
        },
        {
            "incident_code42fileevents": {
                "name": "Code42 File Events",
                "fromversion": "5.0.0",
                "pack": "Code42"
            }
        },
        {
            "incident_commandline": {
                "name": "Command Line",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_companyaddress": {
                "name": "Company Address"
            }
        },
        {
            "incident_companycity": {
                "name": "Company City"
            }
        },
        {
            "incident_companycountry": {
                "name": "Company Country"
            }
        },
        {
            "incident_companyhasinsuranceforthebreach": {
                "name": "Company has Insurance for the Breach"
            }
        },
        {
            "incident_companyname": {
                "name": "Company Name"
            }
        },
        {
            "incident_companypostalcode": {
                "name": "Company Postal Code"
            }
        },
        {
            "incident_companypropertystatus": {
                "name": "Company Property Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_contactaddress": {
                "name": "Contact Address"
            }
        },
        {
            "incident_contactname": {
                "name": "Contact Name"
            }
        },
        {
            "incident_coordinates": {
                "name": "Coordinates",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_country": {
                "name": "Country"
            }
        },
        {
            "incident_countrywherebusinesshasitsmainestablishment": {
                "name": "Country where business has its main establishment"
            }
        },
        {
            "incident_countrywherethebreachtookplace": {
                "name": "Country where the breach took place"
            }
        },
        {
            "incident_criticalassets": {
                "name": "Critical Assets"
            }
        },
        {
            "incident_cve": {
                "name": "CVE"
            }
        },
        {
            "incident_cvss": {
                "name": "CVSS"
            }
        },
        {
            "incident_cymulateimmediatethreatsattackid": {
                "name": "Cymulate Immediate Threats Attack ID",
                "fromversion": "5.0.0",
                "pack": "Cymulate"
            }
        },
        {
            "incident_cymulateimmediatethreatsfiletype": {
                "name": "Cymulate Immediate Threats File Type",
                "fromversion": "5.0.0",
                "pack": "Cymulate"
            }
        },
        {
            "incident_cymulateimmediatethreatsid": {
                "name": "Cymulate Immediate Threats ID",
                "fromversion": "5.0.0",
                "pack": "Cymulate"
            }
        },
        {
            "incident_cymulateimmediatethreatsmitigations": {
                "name": "Cymulate Immediate Threats Mitigations",
                "fromversion": "5.0.0",
                "pack": "Cymulate"
            }
        },
        {
            "incident_cymulateimmediatethreatsmodule": {
                "name": "Cymulate Immediate Threats Module",
                "fromversion": "5.0.0",
                "pack": "Cymulate"
            }
        },
        {
            "incident_cymulateimmediatethreatspayloadname": {
                "name": "Cymulate Immediate Threats Payload Name",
                "fromversion": "5.0.0",
                "pack": "Cymulate"
            }
        },
        {
            "incident_cymulateimmediatethreatsstatus": {
                "name": "Cymulate Immediate Threats Status",
                "fromversion": "5.0.0",
                "pack": "Cymulate"
            }
        },
        {
            "incident_cymulateimmediatethreatsvector": {
                "name": "Cymulate Immediate Threats Vector",
                "fromversion": "5.0.0",
                "pack": "Cymulate"
            }
        },
        {
            "incident_dataencryptionstatus": {
                "name": "Data Encryption Status"
            }
        },
        {
            "incident_datetimeofthebreach": {
                "name": "Date/time of the breach"
            }
        },
        {
            "incident_dbotprediction": {
                "name": "DBotPrediction"
            }
        },
        {
            "incident_dbotpredictionprobability": {
                "name": "DBotPredictionProbability"
            }
        },
        {
            "incident_dbottextsuggestionhighlighted": {
                "name": "DBotTextSuggestionHighlighted"
            }
        },
        {
            "incident_dest": {
                "name": "Dest"
            }
        },
        {
            "incident_desthostname": {
                "name": "Dest Hostname",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_destinationip": {
                "name": "Destination IP",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_destntdomain": {
                "name": "Dest NT Domain"
            }
        },
        {
            "incident_destos": {
                "name": "Dest OS",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_detectionendtime": {
                "name": "Detection End Time"
            }
        },
        {
            "incident_detectionid": {
                "name": "Detection ID"
            }
        },
        {
            "incident_detectionsla": {
                "name": "Detection SLA",
                "fromversion": "4.1.0"
            }
        },
        {
            "incident_detectionticketed": {
                "name": "Detection Ticketed"
            }
        },
        {
            "incident_detectionupdatetime": {
                "name": "Detection Update Time"
            }
        },
        {
            "incident_detectionurl": {
                "name": "Detection URL"
            }
        },
        {
            "incident_devicegsuiteaccountstatus": {
                "name": "Device G-Suite Account Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_devicename": {
                "name": "Device Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_dpoemailaddress": {
                "name": "DPO E-mail Address"
            }
        },
        {
            "incident_duoaccountstatus": {
                "name": "Duo Account Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_duration": {
                "name": "Duration"
            }
        },
        {
            "incident_emailaddress": {
                "name": "E-mail Address"
            }
        },
        {
            "incident_emailauthenticitycheck": {
                "name": "Email Authenticity Check"
            }
        },
        {
            "incident_emailautoreply": {
                "name": "Email Auto-reply",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_emailbcc": {
                "name": "Email BCC"
            }
        },
        {
            "incident_emailbody": {
                "name": "Email Body"
            }
        },
        {
            "incident_emailbodyformat": {
                "name": "Email Body Format"
            }
        },
        {
            "incident_emailbodyhtml": {
                "name": "Email Body HTML"
            }
        },
        {
            "incident_emailcc": {
                "name": "Email CC"
            }
        },
        {
            "incident_emailclassification": {
                "name": "Email Classification"
            }
        },
        {
            "incident_emailclientname": {
                "name": "Email Client Name"
            }
        },
        {
            "incident_emailfrom": {
                "name": "Email From"
            }
        },
        {
            "incident_emailheaders": {
                "name": "Email Headers"
            }
        },
        {
            "incident_emailhtml": {
                "name": "Email HTML"
            }
        },
        {
            "incident_emailinreplyto": {
                "name": "Email In Reply To"
            }
        },
        {
            "incident_emailkeywords": {
                "name": "Email Keywords"
            }
        },
        {
            "incident_emailmessageid": {
                "name": "Email Message ID"
            }
        },
        {
            "incident_emailreceived": {
                "name": "Email Received"
            }
        },
        {
            "incident_emailreplyto": {
                "name": "Email Reply To"
            }
        },
        {
            "incident_emailreturnpath": {
                "name": "Email Return Path"
            }
        },
        {
            "incident_emailsenderip": {
                "name": "Email Sender IP"
            }
        },
        {
            "incident_emailsize": {
                "name": "Email Size"
            }
        },
        {
            "incident_emailsource": {
                "name": "Email Source"
            }
        },
        {
            "incident_emailsubject": {
                "name": "Email Subject"
            }
        },
        {
            "incident_emailto": {
                "name": "Email To"
            }
        },
        {
            "incident_emailtocount": {
                "name": "Email To Count"
            }
        },
        {
            "incident_emailurlclicked": {
                "name": "Email URL Clicked"
            }
        },
        {
            "incident_employeedisplayname": {
                "name": "Employee Display Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_employeeemail": {
                "name": "Employee Email",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_employeemanageremail": {
                "name": "Employee Manager Email",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_exfiltratedfiles": {
                "name": "Exfiltrated Files",
                "fromversion": "5.0.0",
                "pack": "Code42"
            }
        },
        {
            "incident_expanseexposuretype": {
                "name": "Expanse Exposure Type",
                "fromversion": "5.0.0",
                "pack": "Expanse"
            }
        },
        {
            "incident_expanserawjsonevent": {
                "name": "ExpanseRawJSONEvent",
                "fromversion": "5.0.0",
                "pack": "Expanse"
            }
        },
        {
            "incident_expanseseverity": {
                "name": "Expanse Severity",
                "fromversion": "5.0.0",
                "pack": "Expanse"
            }
        },
        {
            "incident_extrahopapplianceid": {
                "name": "ExtraHop Appliance ID"
            }
        },
        {
            "incident_extrahophostname": {
                "name": "ExtraHop Hostname"
            }
        },
        {
            "incident_filehash": {
                "name": "File Hash"
            }
        },
        {
            "incident_filename": {
                "name": "File Name"
            }
        },
        {
            "incident_filepath": {
                "name": "File Path"
            }
        },
        {
            "incident_filesize": {
                "name": "File Size",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_firstseen": {
                "name": "First Seen",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_gdprnotifyauthorities": {
                "name": "GDPR Notify Authorities"
            }
        },
        {
            "incident_globaldirectoryvisibility": {
                "name": "Global Directory Visibility",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_googleaccountstatus": {
                "name": "Google Account Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_googleadminrolesstatus": {
                "name": "Google Admin Roles Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_googledisplayname": {
                "name": "Google Display Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_googledrivestatus": {
                "name": "Google Drive Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_googlemailstatus": {
                "name": "Google Mail Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_googlepasswordstatus": {
                "name": "Google Password Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_hostname": {
                "name": "Host Name"
            }
        },
        {
            "incident_indenideviceid": {
                "name": "Indeni Device ID",
                "fromversion": "5.0.0",
                "pack": "Indeni"
            }
        },
        {
            "incident_indeniissueid": {
                "name": "Indeni Issue ID",
                "fromversion": "5.0.0",
                "pack": "Indeni"
            }
        },
        {
            "incident_infectedhosts": {
                "name": "Infected Hosts",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_investigationstage": {
                "name": "Investigation Stage",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_isolated": {
                "name": "Isolated",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_isthedatasubjecttodpia": {
                "name": "Is the Data Subject to DPIA "
            }
        },
        {
            "incident_lastmodifiedby": {
                "name": "Last Modified By",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_lastmodifiedon": {
                "name": "Last Modified On",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_lastseen": {
                "name": "Last Seen",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_likelyimpact": {
                "name": "Likely Impact"
            }
        },
        {
            "incident_loginattemptcount": {
                "name": "Login Attempt Count",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_macaddress": {
                "name": "MAC Address",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_mailboxdelegation": {
                "name": "Mailbox Delegation",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_maliciousbehavior": {
                "name": "Malicious Behavior",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_maliciouscauseifthecauseisamaliciousattack": {
                "name": "Malicious Cause (If the cause is a malicious attack)"
            }
        },
        {
            "incident_malwarefamily": {
                "name": "Malware Family"
            }
        },
        {
            "incident_measurestomitigate": {
                "name": "Measures to Mitigate"
            }
        },
        {
            "incident_niststage": {
                "name": "NIST Stage",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_offboardingdate": {
                "name": "Offboarding Date",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_offboardingstage": {
                "name": "Offboarding Stage",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_oktaaccountstatus": {
                "name": "Okta Account Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_parentprocessid": {
                "name": "Parent Process ID",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_participants": {
                "name": "Participants"
            }
        },
        {
            "incident_passwordexpirationstatus": {
                "name": "Password Expiration Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_phishingsubtype": {
                "name": "Phishing Sub-type"
            }
        },
        {
            "incident_pid": {
                "name": "PID",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_policydeleted": {
                "name": "Policy Deleted",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_policydescription": {
                "name": "Policy Description",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_policydetails": {
                "name": "Policy Details",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_policyid": {
                "name": "Policy ID",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_policyrecommendation": {
                "name": "Policy Recommendation",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_policyremediable": {
                "name": "Policy Remediable",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_policyseverity": {
                "name": "Policy Severity",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_policytype": {
                "name": "Policy Type",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_possiblecauseofthebreach": {
                "name": "Possible Cause of the Breach"
            }
        },
        {
            "incident_postalcode": {
                "name": "Postal Code"
            }
        },
        {
            "incident_previouscoordinates": {
                "name": "Previous Coordinates",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_previouscountry": {
                "name": "Previous Country",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_previoussignindatetime": {
                "name": "Previous Sign In Date Time",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_previoussourceip": {
                "name": "Previous Source IP",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_prismacloudcomputeactivitytype": {
                "name": "Prisma Cloud Compute Activity Type",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeappid": {
                "name": "Prisma Cloud Compute AppID",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputecategory": {
                "name": "Prisma Cloud Compute Category",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputecollections": {
                "name": "Prisma Cloud Compute Collections",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputecommand": {
                "name": "Prisma Cloud Compute Command",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputecontainer": {
                "name": "Prisma Cloud Compute Container",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputecredentialid": {
                "name": "Prisma Cloud Compute Credential ID",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputedistribution": {
                "name": "Prisma Cloud Compute Distribution",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeerror": {
                "name": "Prisma Cloud Compute Error",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeforensic": {
                "name": "Prisma Cloud Compute Forensic",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputefqdn": {
                "name": "Prisma Cloud Compute FQDN",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputefunction": {
                "name": "Prisma Cloud Compute Function",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputehost": {
                "name": "Prisma Cloud Compute Host",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeimage": {
                "name": "Prisma Cloud Compute Image",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeinteractive": {
                "name": "Prisma Cloud Compute Interactive",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputekubernetesresource": {
                "name": "Prisma Cloud Compute Kubernetes Resource",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputelabels": {
                "name": "Prisma Cloud Compute Labels",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeline": {
                "name": "Prisma Cloud Compute Line",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputelogfile": {
                "name": "Prisma Cloud Compute Log File",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputemarkdown": {
                "name": "Prisma Cloud Compute Markdown",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputemessage": {
                "name": "Prisma Cloud Compute Message",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeproject": {
                "name": "Prisma Cloud Compute Project",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeprotected": {
                "name": "Prisma Cloud Compute Protected",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeprovider": {
                "name": "Prisma Cloud Compute Provider",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputerawalertjson": {
                "name": "Prisma Cloud Compute Raw Alert JSON",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeregion": {
                "name": "Prisma Cloud Compute Region",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeregistry": {
                "name": "Prisma Cloud Compute Registry",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputerule": {
                "name": "Prisma Cloud Compute Rule",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeruntime": {
                "name": "Prisma Cloud Compute Runtime",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeservice": {
                "name": "Prisma Cloud Compute Service",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeservicetype": {
                "name": "Prisma Cloud Compute Service Type",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputetotal": {
                "name": "Prisma Cloud Compute Total",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputetype": {
                "name": "Prisma Cloud Compute Type",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudcomputeuser": {
                "name": "Prisma Cloud Compute User",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "incident_prismacloudid": {
                "name": "Prisma Cloud ID",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_prismacloudreason": {
                "name": "Prisma Cloud Reason",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_prismacloudrules": {
                "name": "Prisma Cloud Rules",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_prismacloudstatus": {
                "name": "Prisma Cloud Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_prismacloudtime": {
                "name": "Prisma Cloud Time",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_rating": {
                "name": "Rating",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_rawparticipants": {
                "name": "Raw Participants"
            }
        },
        {
            "incident_region": {
                "name": "Region",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_regionid": {
                "name": "Region ID",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_remediationsla": {
                "name": "Remediation SLA",
                "fromversion": "4.1.0"
            }
        },
        {
            "incident_reporteremailaddress": {
                "name": "Reporter Email Address"
            }
        },
        {
            "incident_resourceapiname": {
                "name": "Resource API Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_resourcecloudtype": {
                "name": "Resource Cloud Type",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_resourceid": {
                "name": "Resource ID",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_resourcename": {
                "name": "Resource Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_resourcetype": {
                "name": "Resource Type",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_riskrating": {
                "name": "Risk Rating",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_riskscore": {
                "name": "Risk Score",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_rrn": {
                "name": "RRN",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_samaccountname": {
                "name": "sAMAccountName",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_sansstage": {
                "name": "SANS Stage",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_sectorofaffectedparty": {
                "name": "Sector of Affected Party"
            }
        },
        {
            "incident_signature": {
                "name": "Signature"
            }
        },
        {
            "incident_signindatetime": {
                "name": "Sign In Date Time",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_sixgillalertid": {
                "name": "Sixgill Alert ID",
                "fromversion": "5.0.0",
                "pack": "Sixgill"
            }
        },
        {
            "incident_sixgillcontent": {
                "name": "Sixgill Content",
                "fromversion": "5.0.0",
                "pack": "Sixgill"
            }
        },
        {
            "incident_sixgillthreatlevel": {
                "name": "Sixgill Threat Level",
                "fromversion": "5.0.0",
                "pack": "Sixgill"
            }
        },
        {
            "incident_sixgillthreattype": {
                "name": "Sixgill Threat Type",
                "fromversion": "5.0.0",
                "pack": "Sixgill"
            }
        },
        {
            "incident_sizenumberofemployees": {
                "name": "Size - number of employees"
            }
        },
        {
            "incident_sizeturnover": {
                "name": "Size - turnover"
            }
        },
        {
            "incident_skuname": {
                "name": "SKU Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_skutier": {
                "name": "SKU TIER",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_sourcehostname": {
                "name": "Source Hostname",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_sourceip": {
                "name": "Source IP",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_src": {
                "name": "Src"
            }
        },
        {
            "incident_srchostname": {
                "name": "Src Hostname",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_srcntdomain": {
                "name": "Src NT Domain"
            }
        },
        {
            "incident_srcos": {
                "name": "Src OS",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_srcuser": {
                "name": "Src User"
            }
        },
        {
            "incident_subscriptionassignedby": {
                "name": "Subscription Assigned By",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_subscriptioncreatedby": {
                "name": "Subscription Created By",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_subscriptioncreatedon": {
                "name": "Subscription Created On",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_subscriptiondescription": {
                "name": "Subscription Description",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_subscriptionid": {
                "name": "Subscription ID",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_subscriptionname": {
                "name": "Subscription Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_subscriptiontype": {
                "name": "Subscription Type",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_subscriptionupdatedby": {
                "name": "Subscription Updated By",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_subscriptionupdatedon": {
                "name": "Subscription Updated On",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_subtype": {
                "name": "Subtype",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_successfullogin": {
                "name": "Successful Login",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_systemdefault": {
                "name": "System Default",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_targetfirewallversion": {
                "name": "Target Firewall Version",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_telephoneno": {
                "name": "Telephone no."
            }
        },
        {
            "incident_terminatedaction": {
                "name": "Terminated Action",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_threatactor": {
                "name": "Threat Actor"
            }
        },
        {
            "incident_timetoassignment": {
                "name": "Time to Assignment",
                "fromversion": "4.1.0"
            }
        },
        {
            "incident_trapsid": {
                "name": "Traps ID",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_travelmaplink": {
                "name": "Travel Map Link",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_triggeredsecurityprofile": {
                "name": "Triggered Security Profile",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_urlsslverification": {
                "name": "URL SSL Verification"
            }
        },
        {
            "incident_user": {
                "name": "User"
            }
        },
        {
            "incident_useraccountcontrol": {
                "name": "userAccountControl",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_userdisabledstatus": {
                "name": "User Disabled Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_username": {
                "name": "Username",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_vendorid": {
                "name": "Vendor ID"
            }
        },
        {
            "incident_vendorproduct": {
                "name": "Vendor Product"
            }
        },
        {
            "incident_vpcid": {
                "name": "VPC ID",
                "fromversion": "5.0.0"
            }
        },
        {
            "incident_vulnerabilitycategory": {
                "name": "Vulnerability Category"
            }
        },
        {
            "incident_whereisdatahosted": {
                "name": "Where is data hosted"
            }
        },
        {
            "incident_xdralertcount": {
                "name": "XDR Alert Count",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdralerts": {
                "name": "XDR Alerts",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrassigneduseremail": {
                "name": "XDR Assigned User Email",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrassigneduserprettyname": {
                "name": "XDR Assigned User Pretty Name",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrdescription": {
                "name": "XDR Description",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrdetectiontime": {
                "name": "XDR Detection Time",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrfileartifacts": {
                "name": "XDR File Artifacts",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrhighseverityalertcount": {
                "name": "XDR High Severity Alert Count",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrhostcount": {
                "name": "XDR Host Count",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrincidentid": {
                "name": "XDR Incident ID",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrlowseverityalertcount": {
                "name": "XDR Low Severity Alert Count",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrmediumseverityalertcount": {
                "name": "XDR Medium Severity Alert Count",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrnetworkartifacts": {
                "name": "XDR Network Artifacts",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrnotes": {
                "name": "XDR Notes",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrresolvecomment": {
                "name": "XDR Resolve Comment",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrstatus": {
                "name": "XDR Status",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrurl": {
                "name": "XDR URL",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "incident_xdrusercount": {
                "name": "XDR User Count",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "indicator_quarantined": {
                "name": "Quarantined",
                "fromversion": "5.0.0"
            }
        }
    ],
    "IncidentTypes": [],
    "IndicatorFields": [
        {
            "indicator_accounttype": {
                "name": "Account Type",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_actor": {
                "name": "Actor",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_admincountry": {
                "name": "Admin Country",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_adminemail": {
                "name": "Admin Email",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_adminname": {
                "name": "Admin Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_adminphone": {
                "name": "Admin Phone",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_asn": {
                "name": "ASN",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_associatedfilenames": {
                "name": "Associated File Names",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_associations": {
                "name": "Associations",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_biosversion": {
                "name": "BIOS Version",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_creationdate": {
                "name": "Creation Date",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_cvedescription": {
                "name": "CVE Description",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_cvemodified": {
                "name": "CVE Modified",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_cvss": {
                "name": "CVSS",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_description": {
                "name": "Description",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_detectionengines": {
                "name": "Detection Engines",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_devicemodel": {
                "name": "Device Model",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_dhcpserver": {
                "name": "DHCP Server",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_displayname": {
                "name": "Display Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_dns": {
                "name": "DNS",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_domainname": {
                "name": "Domain Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_domainstatus": {
                "name": "Domain Status",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_emailaddress": {
                "name": "Email Address",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_entryid": {
                "name": "Entry ID",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_expirationdate": {
                "name": "Expiration Date",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_fileextension": {
                "name": "File Extension",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_filetype": {
                "name": "File Type",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_firstseenbysource": {
                "name": "First Seen By Source",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_geocountry": {
                "name": "Geo Country",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_geolocation": {
                "name": "Geo Location",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_groups": {
                "name": "Groups",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_hostname": {
                "name": "Hostname",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_indicatoridentification": {
                "name": "Indicator Identification",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_internal": {
                "name": "Internal",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_ipaddress": {
                "name": "IP Address",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_lastseenbysource": {
                "name": "Last Seen By Source",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_macaddress": {
                "name": "MAC Address",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_malwarefamily": {
                "name": "Malware Family",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_md5": {
                "name": "MD5",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_memory": {
                "name": "Memory",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_name": {
                "name": "Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_namefield": {
                "name": "Name Field",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_nameservers": {
                "name": "Name Servers",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_office365category": {
                "name": "Office365Category",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_office365expressroute": {
                "name": "Office365ExpressRoute",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_office365required": {
                "name": "Office365Required",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_operatingsystem": {
                "name": "Operating System",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_operatingsystemversion": {
                "name": "Operating System Version",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_organization": {
                "name": "Organization",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_organizationalunitou": {
                "name": "Organizational Unit (OU)",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_osversion": {
                "name": "OS Version",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_path": {
                "name": "Path",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_port": {
                "name": "Port",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_positivedetections": {
                "name": "Positive Detections",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_processor": {
                "name": "Processor",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_processors": {
                "name": "Processors",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_published": {
                "name": "Published",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_recordedfutureevidencedetails": {
                "name": "Recorded Future Evidence Details",
                "fromversion": "5.5.0",
                "pack": "FeedRecordedFuture"
            }
        },
        {
            "indicator_region": {
                "name": "Region",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_registrantcountry": {
                "name": "Registrant Country",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_registrantemail": {
                "name": "Registrant Email",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_registrantname": {
                "name": "Registrant Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_registrantphone": {
                "name": "Registrant Phone",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_registrarabuseemail": {
                "name": "Registrar Abuse Email",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_registrarabusephone": {
                "name": "Registrar Abuse Phone",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_registrarname": {
                "name": "Registrar Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_reportedby": {
                "name": "Reported By",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_service": {
                "name": "Service"
            }
        },
        {
            "indicator_sha1": {
                "name": "SHA1",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_sha256": {
                "name": "SHA256",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_sha512": {
                "name": "SHA512",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_signatureauthentihash": {
                "name": "Signature Authentihash",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_signaturecopyright": {
                "name": "Signature Copyright",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_signaturedescription": {
                "name": "Signature Description",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_signaturefileversion": {
                "name": "Signature File Version",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_signatureinternalname": {
                "name": "Signature Internal Name",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_signed": {
                "name": "Signed",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_size": {
                "name": "Size",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_sourceoriginalseverity": {
                "name": "Source Original Severity",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_ssdeep": {
                "name": "SSDeep",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_subdomains": {
                "name": "Subdomains",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_tags": {
                "name": "Tags",
                "toversion": "5.4.9",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_tags": {
                "name": "Tags",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_threattypes": {
                "name": "Threat Types",
                "fromversion": "5.5.0"
            }
        },
        {
            "indicator_updateddate": {
                "name": "Updated Date",
                "fromversion": "5.0.0"
            }
        },
        {
            "indicator_username": {
                "name": "Username",
                "fromversion": "5.0.0"
            }
        }
    ],
    "Layouts": [
        {
            "Access": {
                "typeID": "Access",
                "name": "",
                "fromversion": "4.1.0"
            }
        },
        {
            "Access": {
                "typeID": "Access",
                "name": ""
            }
        },
        {
            "accountRep": {
                "typeID": "accountRep",
                "typename": "accountRep",
                "name": "",
                "fromversion": "5.5.0"
            }
        },
        {
            "accountRep": {
                "typeID": "accountRep",
                "typename": "accountRep",
                "name": "",
                "toversion": "5.4.9",
                "fromversion": "5.0.0"
            }
        },
        {
            "AWS CloudTrail Misconfiguration": {
                "typeID": "AWS CloudTrail Misconfiguration",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "AWS EC2 Instance Misconfiguration": {
                "typeID": "AWS EC2 Instance Misconfiguration",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "AWS IAM Policy Misconfiguration": {
                "typeID": "AWS IAM Policy Misconfiguration",
                "typename": "AWS IAM Policy Misconfiguration",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "Brute Force": {
                "typeID": "Brute Force",
                "typename": "Brute Force",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "Claroty Integrity Incident": {
                "typeID": "Claroty Integrity Incident",
                "typename": "Claroty Integrity Incident",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "Claroty"
            }
        },
        {
            "Claroty Security Incident": {
                "typeID": "Claroty Security Incident",
                "typename": "Claroty Security Incident",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "Claroty"
            }
        },
        {
            "Code42 Security Alert": {
                "typeID": "Code42 Security Alert",
                "typename": "Code42 Security Alert",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "Code42"
            }
        },
        {
            "Cortex XDR Incident": {
                "typeID": "Cortex XDR Incident",
                "typename": "Cortex XDR Incident",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "Cortex XDR Incident": {
                "typeID": "Cortex XDR Incident",
                "typename": "Cortex XDR Incident",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "Cortex XDR Port Scan": {
                "typeID": "Cortex XDR Port Scan",
                "typename": "Cortex XDR Port Scan",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "CortexXDR"
            }
        },
        {
            "cveRep": {
                "typeID": "cveRep",
                "typename": "cveRep",
                "name": "",
                "toversion": "5.4.9",
                "fromversion": "5.0.0"
            }
        },
        {
            "cveRep": {
                "typeID": "cveRep",
                "typename": "cveRep",
                "name": "",
                "fromversion": "5.5.0"
            }
        },
        {
            "Cymulate Immediate Threats": {
                "typeID": "Cymulate Immediate Threats",
                "typename": "Cymulate Immediate Threats",
                "name": "Cymulate Immediate Threats",
                "fromversion": "5.0.0",
                "pack": "Cymulate"
            }
        },
        {
            "domainRep": {
                "typeID": "domainRep",
                "typename": "domainRep",
                "name": "",
                "toversion": "5.4.9",
                "fromversion": "5.0.0"
            }
        },
        {
            "domainRep2": {
                "typeID": "domainRep2",
                "typename": "domainRep2",
                "name": "",
                "toversion": "5.4.9",
                "fromversion": "5.0.0"
            }
        },
        {
            "domainRepUnified": {
                "typeID": "domainRepUnified",
                "typename": "domainRepUnified",
                "name": "",
                "fromversion": "5.5.0"
            }
        },
        {
            "emailRep": {
                "typeID": "emailRep",
                "typename": "emailRep",
                "name": "",
                "fromversion": "5.5.0"
            }
        },
        {
            "emailRep": {
                "typeID": "emailRep",
                "typename": "emailRep",
                "name": "",
                "toversion": "5.4.9",
                "fromversion": "5.0.0"
            }
        },
        {
            "Employee Offboarding": {
                "typeID": "Employee Offboarding",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "Employee Offboarding": {
                "typeID": "Employee Offboarding",
                "typename": "Employee Offboarding",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "Expanse Appearance": {
                "typeID": "Expanse Appearance",
                "typename": "Expanse Appearance",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "Expanse"
            }
        },
        {
            "ExtraHop Detection": {
                "typeID": "ExtraHop Detection",
                "name": ""
            }
        },
        {
            "ExtraHop Detection": {
                "typeID": "ExtraHop Detection",
                "name": ""
            }
        },
        {
            "ExtraHop Detection": {
                "typeID": "ExtraHop Detection",
                "name": ""
            }
        },
        {
            "ExtraHop Detection": {
                "typeID": "ExtraHop Detection",
                "name": ""
            }
        },
        {
            "ExtraHop Detection": {
                "typeID": "ExtraHop Detection",
                "name": ""
            }
        },
        {
            "GDPR Data Breach": {
                "typeID": "GDPR Data Breach",
                "name": "",
                "fromversion": "4.5.0"
            }
        },
        {
            "GDPR Data Breach": {
                "typeID": "GDPR Data Breach",
                "name": "",
                "fromversion": "4.5.0"
            }
        },
        {
            "GDPR Data Breach": {
                "typeID": "GDPR Data Breach",
                "typename": "GDPR Data Breach",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "hostRep": {
                "typeID": "hostRep",
                "typename": "Host",
                "name": "",
                "toversion": "5.4.9",
                "fromversion": "5.0.0"
            }
        },
        {
            "hostRep": {
                "typeID": "hostRep",
                "typename": "hostRep",
                "name": "",
                "fromversion": "5.5.0"
            }
        },
        {
            "Impossible Traveler": {
                "typeID": "Impossible Traveler",
                "typename": "Impossible Traveler",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "ImpossibleTraveler"
            }
        },
        {
            "Indicator Feed": {
                "typeID": "Indicator Feed",
                "name": "",
                "fromversion": "5.5.0"
            }
        },
        {
            "ipRep": {
                "typeID": "ipRep",
                "typename": "ipRep",
                "name": "",
                "toversion": "5.4.9",
                "fromversion": "5.0.0"
            }
        },
        {
            "ipRep": {
                "typeID": "ipRep",
                "typename": "ipRep",
                "name": "",
                "fromversion": "5.5.0"
            }
        },
        {
            "Malware": {
                "typeID": "Malware",
                "name": "",
                "fromversion": "4.1.0"
            }
        },
        {
            "Malware": {
                "typeID": "Malware",
                "name": ""
            }
        },
        {
            "Malware": {
                "typeID": "Malware",
                "typename": "Malware",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "Phishing": {
                "typeID": "Phishing",
                "name": ""
            }
        },
        {
            "Phishing": {
                "typeID": "Phishing",
                "name": "",
                "toversion": "4.5.0",
                "fromversion": "4.1.0"
            }
        },
        {
            "Phishing": {
                "typeID": "Phishing",
                "typename": "Phishing",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "Phishing": {
                "typeID": "Phishing",
                "name": ""
            }
        },
        {
            "Prisma Cloud": {
                "typeID": "Prisma Cloud",
                "typename": "Prisma Cloud",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "Prisma Cloud Compute Audit": {
                "typeID": "Prisma Cloud Compute Audit",
                "typename": "Prisma Cloud Compute Audit",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "Prisma Cloud Compute Cloud Discovery": {
                "typeID": "Prisma Cloud Compute Cloud Discovery",
                "typename": "Prisma Cloud Compute Cloud Discovery",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "Prisma Cloud Compute Compliance": {
                "typeID": "Prisma Cloud Compute Compliance",
                "typename": "Prisma Cloud Compute Compliance",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "Prisma Cloud Compute Vulnerability": {
                "typeID": "Prisma Cloud Compute Vulnerability",
                "typename": "Prisma Cloud Compute Vulnerability",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "PrismaCloudCompute"
            }
        },
        {
            "registryKey": {
                "typeID": "registryKey",
                "typename": "registryKey",
                "name": "",
                "toversion": "5.4.9",
                "fromversion": "5.0.0"
            }
        },
        {
            "registryKey": {
                "typeID": "registryKey",
                "typename": "registryKey",
                "name": "",
                "fromversion": "5.5.0"
            }
        },
        {
            "Review Indicators Manually": {
                "typeID": "Review Indicators Manually",
                "typename": "Review Indicators Manually",
                "name": "",
                "fromversion": "5.5.0"
            }
        },
        {
            "Sixgill Threat": {
                "typeID": "Sixgill Threat",
                "typename": "Sixgill Threat",
                "name": "",
                "fromversion": "5.0.0",
                "pack": "Sixgill"
            }
        },
        {
            "Traps": {
                "typeID": "Traps",
                "typename": "Traps",
                "name": "",
                "fromversion": "5.0.0"
            }
        },
        {
            "unifiedFileRep": {
                "typeID": "unifiedFileRep",
                "typename": "unifiedFileRep",
                "name": "",
                "fromversion": "5.5.0"
            }
        },
        {
            "unifiedFileRep": {
                "typeID": "unifiedFileRep",
                "typename": "unifiedFileRep",
                "name": "",
                "toversion": "5.4.9",
                "fromversion": "5.0.0"
            }
        },
        {
            "urlRep": {
                "typeID": "urlRep",
                "typename": "urlRep",
                "name": "",
                "fromversion": "5.5.0"
            }
        },
        {
            "urlRep": {
                "typeID": "urlRep",
                "typename": "urlRep",
                "name": "",
                "toversion": "5.4.9",
                "fromversion": "5.0.0"
            }
        },
        {
            "Vulnerability": {
                "typeID": "Vulnerability",
                "name": "",
                "fromversion": "4.1.0"
            }
        },
        {
            "Vulnerability": {
                "typeID": "Vulnerability",
                "name": ""
            }
        }
    ],
    "Reports": [
        {
            "criticalAndHighIncidentsReport": {
                "name": "Critical and High incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "criticalAndHighIncidentsReport": {
                "name": "Critical and High incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "csvDailyIncidentReport": {
                "name": "Daily incidents"
            }
        },
        {
            "dailyIncidentReport": {
                "name": "Daily incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "dailyIncidentReport": {
                "name": "Daily incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "docxCriticalAndHighIncidentsReport": {
                "name": "Critical and High incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "docxCriticalAndHighIncidentsReport": {
                "name": "Critical and High incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "docxDailyIncidentReport": {
                "name": "Daily incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "docxDailyIncidentReport": {
                "name": "Daily incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "docxInvestigationSummaryReport": {
                "name": "Investigation Summary",
                "toversion": "3.0.2",
                "fromversion": "2.5.0"
            }
        },
        {
            "docxInvestigationSummaryReport": {
                "name": "Investigation Summary",
                "fromversion": "3.1.0"
            }
        },
        {
            "docxOpenIncidentsReport": {
                "name": "Open Incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "docxOpenIncidentsReport": {
                "name": "Open Incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "investigationSummaryReport": {
                "name": "Investigation Summary",
                "toversion": "3.0.2",
                "fromversion": "2.5.0"
            }
        },
        {
            "investigationSummaryReport": {
                "name": "Investigation Summary",
                "toversion": "3.5.1",
                "fromversion": "3.1.0"
            }
        },
        {
            "investigationSummaryReport": {
                "name": "Investigation Summary",
                "fromversion": "3.6.0"
            }
        },
        {
            "last24HoursClosedIncidentsReport": {
                "name": "Last 24 hours closed incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "last24HoursClosedIncidentsReport": {
                "name": "Last 24 hours closed incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "last24HoursIncidentReport": {
                "name": "Last 24 hours incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "last24HoursIncidentReport": {
                "name": "Last 24 hours incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "last30DaysClosedIncidentsReport": {
                "name": "Last 30 days closed incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "last30DaysClosedIncidentsReport": {
                "name": "Last 30 days closed incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "last30DaysIncidentReport": {
                "name": "Last 30 days incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "last30DaysIncidentReport": {
                "name": "Last 30 days incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "last7DaysClosedIncidentsReport": {
                "name": "Last 7 days closed incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "last7DaysClosedIncidentsReport": {
                "name": "Last 7 days closed incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "last7DaysIncidentReport": {
                "name": "Last 7 days incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "last7DaysIncidentReport": {
                "name": "Last 7 days incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "lateIncidentsReport": {
                "name": "Late Incidents",
                "fromversion": "2.5.0"
            }
        },
        {
            "MTTRbyIncidentType2Quar": {
                "name": "Mean time to Resolve by Incident Type (Last 2 Quarters)",
                "fromversion": "2.5.0"
            }
        },
        {
            "MTTRbyOwner2Quar": {
                "name": "Mean time to Resolve by Incident Owner (Last 2 Quarters)",
                "fromversion": "2.5.0"
            }
        },
        {
            "openIncidentsReport": {
                "name": "Open Incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        },
        {
            "openIncidentsReport": {
                "name": "Open Incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "ShiftSummaryReport": {
                "name": "Shift summary report",
                "toversion": "4.5.9",
                "fromversion": "2.5.0"
            }
        },
        {
            "ShiftSummaryReport": {
                "name": "Shift summary report",
                "fromversion": "5.0.0"
            }
        },
        {
            "unknownIncidentsReport": {
                "name": "Unknown severity incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "unknownIncidentsReport": {
                "name": "Unknown severity incidents",
                "toversion": "3.1.0",
                "fromversion": "2.5.0"
            }
        }
    ],
    "Widgets": [
        {
            "active-incidents-by-severity": {
                "name": "Active Incidents - Pie chart",
                "fromversion": "3.5.0"
            }
        },
        {
            "active-incidents-by-type": {
                "name": "Active Incidents - Line chart",
                "fromversion": "3.5.0"
            }
        },
        {
            "average-incident-duration-by-role": {
                "name": "Average Incident Duration by Role (Avg)",
                "fromversion": "3.5.0"
            }
        },
        {
            "closed-by-dbot-incidents-percentage": {
                "name": "Closed By Dbot",
                "fromversion": "4.0.0"
            }
        },
        {
            "closed-incidents-by-role": {
                "name": "Closed Incidents by Role"
            }
        },
        {
            "cpu-current-usage": {
                "name": "CPU Current Usage",
                "fromversion": "3.5.0"
            }
        },
        {
            "cpu-percentage-trend": {
                "name": "Server CPU Usage % (last 24h)",
                "fromversion": "3.5.1"
            }
        },
        {
            "detection-sla-by-status": {
                "name": "Detection SLA by Status",
                "fromversion": "4.1.0"
            }
        },
        {
            "disk-current-usage": {
                "name": "Disk Current Usage",
                "toversion": "4.6.0",
                "fromversion": "3.5.0"
            }
        },
        {
            "disk-current-usage": {
                "name": "Disk Current Usage",
                "fromversion": "5.0.0"
            }
        },
        {
            "engine-busy-workers-bar": {
                "name": "Busy Workers Count per Engine",
                "fromversion": "4.0.0"
            }
        },
        {
            "engine-busy-workers-line": {
                "name": "Busy Workers per Engine (last 24h)",
                "fromversion": "4.0.0"
            }
        },
        {
            "engine-cpu-bar": {
                "name": "CPU Usage % per Engine",
                "fromversion": "4.0.0"
            }
        },
        {
            "engine-cpu-line": {
                "name": "CPU Usage % per Engine (last 24h)",
                "fromversion": "4.0.0"
            }
        },
        {
            "engine-disk-bar": {
                "name": "Disk Usage % per Engine",
                "fromversion": "4.0.0"
            }
        },
        {
            "engine-disk-line": {
                "name": "Disk Usage % per Engine (last 24h)",
                "fromversion": "4.0.0"
            }
        },
        {
            "engine-memory-bar": {
                "name": "Memory Usage % per Engine",
                "fromversion": "4.0.0"
            }
        },
        {
            "engine-memory-line": {
                "name": "Memory Usage % per Engine (last 24h)",
                "fromversion": "4.0.0"
            }
        },
        {
            "engine-total-workers-bar": {
                "name": "Workers per Engine",
                "fromversion": "4.0.0"
            }
        },
        {
            "es-cpu-current-usage": {
                "name": "Elastic CPU Current Usage",
                "fromversion": "5.5.0"
            }
        },
        {
            "es-disk-current-usage": {
                "name": "Elastic Disk Current Usage",
                "fromversion": "5.5.0"
            }
        },
        {
            "es-jvm-memory-current-usage": {
                "name": "Elastic JVM Memory Current Usage",
                "fromversion": "5.5.0"
            }
        },
        {
            "incident-severity-by-types": {
                "name": "Incident Severity by Type",
                "fromversion": "3.5.0"
            }
        },
        {
            "incident-types-by-severity": {
                "name": "Incident Types by Severity",
                "fromversion": "3.5.0"
            }
        },
        {
            "incidents-assigned-by-user": {
                "name": "Active Incidents Assigned by User",
                "fromversion": "3.5.0"
            }
        },
        {
            "incidents-by-close-reason": {
                "name": "Incidents By Close Reason"
            }
        },
        {
            "incidents-by-phase": {
                "name": "Incidents by Phase",
                "fromversion": "3.5.0"
            }
        },
        {
            "incidents-by-role": {
                "name": "Active Incidents by Role"
            }
        },
        {
            "incidents-by-role": {
                "name": "Incidents by Role"
            }
        },
        {
            "incidents-dropped-in-preprocessing": {
                "name": "Incidents Dropped in Preprocessing",
                "fromversion": "3.5.0"
            }
        },
        {
            "incidents-error-number": {
                "name": "Incidents in Error Run Status"
            }
        },
        {
            "incidents-occurred-per-day": {
                "name": "Incidents Occurred Per Day"
            }
        },
        {
            "incidents-top-close-analysts": {
                "name": "Incidents Top Close Analysts"
            }
        },
        {
            "indicators-activity": {
                "name": "Indicators Activity"
            }
        },
        {
            "indicators-activity-type": {
                "name": "Indicators Activity by Type"
            }
        },
        {
            "indicators-bad-activity": {
                "name": "Bad Indicators Activity"
            }
        },
        {
            "indicators-bad-activity-type": {
                "name": "Bad Indicators Activity by Type"
            }
        },
        {
            "indicators-manual-user": {
                "name": "Manual Reputation Indicators by User"
            }
        },
        {
            "indicators-manual-user": {
                "name": "Manual Reputation Indicators"
            }
        },
        {
            "investigation-activity": {
                "name": "Investigation Activity Timeline"
            }
        },
        {
            "late-incidents": {
                "name": "Late Incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "late-incidents-number": {
                "name": "Late Incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "late-tasks": {
                "name": "Late Tasks by User",
                "fromversion": "3.5.0"
            }
        },
        {
            "late-tasks-number": {
                "name": "Late Tasks",
                "fromversion": "3.5.0"
            }
        },
        {
            "latest-important-messages": {
                "name": "Important Messages",
                "fromversion": "3.5.1"
            }
        },
        {
            "latest-messages": {
                "name": "Latest Messages",
                "fromversion": "3.5.1"
            }
        },
        {
            "mean-time-to-detection": {
                "name": "Mean Time to Detection",
                "fromversion": "4.1"
            }
        },
        {
            "mean-time-to-resolution-occurred": {
                "name": "Mean Time to Resolution (Occurred)",
                "fromversion": "3.5.0"
            }
        },
        {
            "memory-current-usage": {
                "name": "Memory Current Usage",
                "fromversion": "3.5.0"
            }
        },
        {
            "memory-percentage-trend": {
                "name": "Server Memory Usage % (last 24h)",
                "fromversion": "3.5.1"
            }
        },
        {
            "most-active-integrations": {
                "name": "Most Active Integrations"
            }
        },
        {
            "most-active-investigations": {
                "name": "Most Active Investigations"
            }
        },
        {
            "most-active-users": {
                "name": "Most Active Users"
            }
        },
        {
            "mttd-by-type": {
                "name": "MTTD by Type",
                "fromversion": "4.1"
            }
        },
        {
            "mttr-by-type": {
                "name": "MTTR by Type",
                "fromversion": "3.5.0"
            }
        },
        {
            "mttr-by-type-occurred": {
                "name": "MTTR Occurred by Type",
                "fromversion": "3.5.0"
            }
        },
        {
            "my-important-messages": {
                "name": "My Messages",
                "fromversion": "3.5.1"
            }
        },
        {
            "my-mentions": {
                "name": "Mentions",
                "fromversion": "3.5.1"
            }
        },
        {
            "my-tasks": {
                "name": "My Tasks",
                "toversion": "4.0.0",
                "fromversion": "3.5.1"
            }
        },
        {
            "my-tasks": {
                "name": "My Tasks",
                "fromversion": "4.0.0"
            }
        },
        {
            "open-tasks-per-user": {
                "name": "Open Tasks Per User"
            }
        },
        {
            "page-break-widget": {
                "name": "Page Break Widget",
                "fromversion": "5.0.0"
            }
        },
        {
            "placeholder-image": {
                "name": "Image",
                "fromversion": "3.5.1"
            }
        },
        {
            "remediation-sla-by-status": {
                "name": "Remediation SLA by Status",
                "fromversion": "4.1"
            }
        },
        {
            "roi": {
                "name": "Return On Investment (ROI)",
                "fromversion": "3.5.0"
            }
        },
        {
            "running-playbooks": {
                "name": "Running playbooks"
            }
        },
        {
            "sla-by-incident-type": {
                "name": "SLA by Incident Type",
                "fromversion": "3.5.0"
            }
        },
        {
            "tasks-state": {
                "name": "Tasks By State"
            }
        },
        {
            "text-placeholder": {
                "name": "Text Widget"
            }
        },
        {
            "top-active-playbooks": {
                "name": "Top Active Playbooks"
            }
        },
        {
            "TopMaliciousRatioIndicators": {
                "name": "TopMaliciousRatioIndicators",
                "fromversion": "4.0.0"
            }
        },
        {
            "unassigned-active-incidents": {
                "name": "Unassigned Active Incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "unassigned-closed-incidents": {
                "name": "Unassigned Closed Incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "unassigned-incidents": {
                "name": "Unassigned Incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "unassigned-incidents-number": {
                "name": "Unassigned Incidents",
                "fromversion": "3.5.0"
            }
        },
        {
            "unassigned-pending-incidents": {
                "name": "Unassigned Pending Incidents",
                "fromversion": "3.5.0"
            }
        }
    ]
}
