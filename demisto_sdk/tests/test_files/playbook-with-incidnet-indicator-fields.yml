id: Arcsight - Get events related to the Case
version: -1
name: Arcsight - Get events related to the Case
fromversion: ""
description: |-
  Get the Case's Arcsight ResourceID from the FetchID field, or the "ID" label. If neither is there, ask user for the ID.
  Use the resource ID to get full data for the case, the correlated/aggregate events underneath it, and all base events underneath them.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 36c5b17f-3046-41f1-82f5-d0ad1715fcd5
    type: regular
    task:
      id: 36c5b17f-3046-41f1-82f5-d0ad1715fcd5
      version: -1
      name: Create new Phishing incident
      description: commands.local.cmd.create.inc
      script: Builtin|||createNewIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "25"
    scriptarguments:
      accountid: {}
      accountname: {}
      agentid: {}
      app: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      blockedaction: {}
      bugtraq: {}
      city: {}
      commandline: {}
      country: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      dest: {}
      desthostname: {}
      destinationhostname: {}
      destinationip: {}
      destinationport: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicename: {}
      duration: {}
      emailauthenticitycheck: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      entryIDs: {}
      eventid: {}
      eventtype: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      helloworldid: {}
      helloworldstatus: {}
      helloworldtype: {}
      hostname: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      logsource: {}
      macaddress: {}
      maliciousbehavior: {}
      malwarefamily: {}
      name:
        simple: Phishing Core Test
      occurred: {}
      os: {}
      owner: {}
      parentprocessid: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      protocol: {}
      quarantined: {}
      rating: {}
      region: {}
      regionid: {}
      reporteremailaddress: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      samaccountname: {}
      severity: {}
      signature: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      sourceport: {}
      sourceusername: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subtype: {}
      systems: {}
      tenantname: {}
      terminatedaction: {}
      threatactor: {}
      triggeredsecurityprofile: {}
      type:
        simple: Phishing
      urlsslverification: {}
      user: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vulnerabilitycategory: {}
    reputationcalc: 1
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 265,
          "y": 185
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "1":
    id: "1"
    taskid: 5b8c84ec-4152-4d1e-86b3-570b8f45cb5a
    type: regular
    task:
      id: 5b8c84ec-4152-4d1e-86b3-570b8f45cb5a
      version: -1
      name: CreateDBotScoreEntry
      description: |-
        The script is being used by the `DBotScore - Create Indicator Test`.
        The arguments with known predefined values (such as reliability and indciator_type) are not being chosen from a list of options in order to test invalid options as well.
      scriptName: CreateDBotScoreEntry
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "7"
    scriptarguments:
      indicator_type:
        simple: domain
      integration_name:
        simple: Source A
      malicious_description: {}
      reliability:
        simple: B - Usually reliable
      score:
        simple: "2"
      value:
        simple: ${RandomString}.com
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1010
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "2":
    id: "2"
    taskid: 352410a1-0ea0-45bb-843c-838fb2e27edc
    type: regular
    task:
      id: 352410a1-0ea0-45bb-843c-838fb2e27edc
      version: -1
      name: Create a Domain Indicator
      description: Change the properties of an indicator
      script: Builtin|||createNewIndicator
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "14"
    scriptarguments:
      accounttype: {}
      actor: {}
      admincountry: {}
      adminemail: {}
      adminname: {}
      adminphone: {}
      asn: {}
      assignedrole: {}
      assigneduser: {}
      associatedfilenames: {}
      associations: {}
      biosversion: {}
      campaign: {}
      category: {}
      certificatenames: {}
      certificatesignature: {}
      certificatevalidationchecks: {}
      city: {}
      costcenter: {}
      costcentercode: {}
      countryname: {}
      creationdate: {}
      cryptocurrencyaddresstype: {}
      customFields: {}
      cvedescription: {}
      cvemodified: {}
      cvss: {}
      department: {}
      description: {}
      detectionengines: {}
      devicemodel: {}
      dhcpserver: {}
      displayname: {}
      dns: {}
      domainidnname: {}
      domainname: {}
      domainreferringips: {}
      domainreferringsubnets: {}
      domainstatus: {}
      email: {}
      emailaddress: {}
      entryid: {}
      expirationdate: {}
      extension: {}
      feedrelatedindicators: {}
      fileextension: {}
      filetype: {}
      firstseenbysource: {}
      geocountry: {}
      geolocation: {}
      givenname: {}
      groups: {}
      hostname: {}
      imphash: {}
      indicatoridentification: {}
      internal: {}
      ipaddress: {}
      issuerdn: {}
      jobcode: {}
      jobfamily: {}
      jobfunction: {}
      lastseenbysource: {}
      leadership: {}
      location: {}
      locationregion: {}
      macaddress: {}
      malwarefamily: {}
      malwaretypes: {}
      manageremailaddress: {}
      managername: {}
      md5: {}
      memory: {}
      merge: {}
      mobilephone: {}
      name: {}
      namefield: {}
      nameservers: {}
      office365category: {}
      office365expressroute: {}
      office365required: {}
      operatingsystem: {}
      operatingsystemversion: {}
      organization: {}
      organizationalunitou: {}
      osversion: {}
      path: {}
      pem: {}
      personalemail: {}
      port: {}
      positivedetections: {}
      primarymotivation: {}
      processor: {}
      processors: {}
      publickey: {}
      published: {}
      quarantined: {}
      region: {}
      registrantcountry: {}
      registrantemail: {}
      registrantname: {}
      registrantphone: {}
      registrarabuseemail: {}
      registrarabusephone: {}
      registrarname: {}
      relateToIncident: {}
      relatedIncidents: {}
      reportedby: {}
      reputation: {}
      seenNow: {}
      serialnumber: {}
      service: {}
      sha1: {}
      sha256: {}
      sha512: {}
      signatureauthentihash: {}
      signaturecopyright: {}
      signaturedescription: {}
      signaturefileversion: {}
      signatureinternalname: {}
      signed: {}
      size: {}
      source:
        simple: DBot
      sourceTimeStamp: {}
      sourceoriginalseverity: {}
      spkisha256: {}
      ssdeep: {}
      state: {}
      stixaliases: {}
      stixdescription: {}
      stixgoals: {}
      stixid: {}
      stixismalwarefamily: {}
      stixkillchainphases: {}
      stixmalwaretypes: {}
      stixprimarymotivation: {}
      stixresourcelevel: {}
      stixroles: {}
      stixsecondarymotivations: {}
      stixsophistication: {}
      stixthreatactortypes: {}
      stixtooltypes: {}
      stixtoolversion: {}
      streetaddress: {}
      subdomains: {}
      subjectalternativenames: {}
      subjectdn: {}
      surname: {}
      tags: {}
      threattypes: {}
      title: {}
      trafficlightprotocol: {}
      type:
        simple: Domain
      updateddate: {}
      username: {}
      validitynotafter: {}
      validitynotbefore: {}
      value:
        simple: ${RandomString}.com
      workphone: {}
      zipcode: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 690
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "3":
    id: "3"
    taskid: ca867694-bf54-4fe8-85cd-946633455ef9
    type: regular
    task:
      id: ca867694-bf54-4fe8-85cd-946633455ef9
      version: -1
      name: Set FetchID from user input
      description: Change the properties of an incident
      script: Builtin|||setIncident
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      addLabels: {}
      customFields:
        simple: '[{"FetchID":"${UserInput.FetchID}"}]'
      deleteEmptyField: {}
      details: {}
      id: {}
      labels:
        simple: '[{"FetchID":"${UserInput.FetchID}"}]'
      name: {}
      occurred: {}
      owner: {}
      phase: {}
      replacePlaybook: {}
      roles: {}
      severity: {}
      sla: {}
      slaField: {}
      systems: {}
      type: {}
      vulnerabilitycategory: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -140,
          "y": 50
        }
      }
    note: false
    timertriggers: []
  "4":
    id: "4"
    taskid: b0d9eacc-8d9f-4345-8a1e-ac1b94c1c018
    type: regular
    task:
      id: b0d9eacc-8d9f-4345-8a1e-ac1b94c1c018
      version: -1
      name: Set FetchID <-- ID label
      description: Change the properties of an incident
      script: Builtin|||setIndicator
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      addLabels: {}
      customFields: {}
      deleteEmptyField: {}
      details: {}
      id: {}
      valid_field:
        simple: '[{"FetchID":"${incident.labels.ID}"}]'
      name: {}
      occurred: {}
      owner: {}
      phase: {}
      replacePlaybook: {}
      roles: {}
      severity: {}
      sla: {}
      slaField: {}
      systems: {}
      type: {}
      vulnerabilitycategory: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 260,
          "y": -108
        }
      }
    note: false
    timertriggers: []
view: |-
  {
    "linkLabelsPosition": {
      "11_12_#default#": 0.1,
      "13_12_#default#": 0.1
    },
    "paper": {
      "dimensions": {
        "height": 2023,
        "width": 1431,
        "x": -626,
        "y": -659
      }
    }
  }
inputs: []
outputs: []
tests:
  - test Arcsight - Get events related to the Case
